WEBVTT
Kind: captions
Language: en

00:00:00.560 --> 00:00:02.470 align:start position:0%
 
hello<00:00:01.040><c> everyone</c>

00:00:02.470 --> 00:00:02.480 align:start position:0%
hello everyone
 

00:00:02.480 --> 00:00:04.870 align:start position:0%
hello everyone
welcome<00:00:02.879><c> to</c><00:00:03.120><c> an</c><00:00:03.360><c> introduction</c><00:00:04.000><c> to</c><00:00:04.319><c> object</c>

00:00:04.870 --> 00:00:04.880 align:start position:0%
welcome to an introduction to object
 

00:00:04.880 --> 00:00:06.950 align:start position:0%
welcome to an introduction to object
oriented<00:00:05.440><c> programming</c>

00:00:06.950 --> 00:00:06.960 align:start position:0%
oriented programming
 

00:00:06.960 --> 00:00:08.310 align:start position:0%
oriented programming
in<00:00:07.040><c> this</c><00:00:07.359><c> course</c>

00:00:08.310 --> 00:00:08.320 align:start position:0%
in this course
 

00:00:08.320 --> 00:00:09.750 align:start position:0%
in this course
we<00:00:08.480><c> will</c><00:00:08.639><c> be</c><00:00:08.800><c> getting</c><00:00:09.120><c> into</c><00:00:09.440><c> what</c>

00:00:09.750 --> 00:00:09.760 align:start position:0%
we will be getting into what
 

00:00:09.760 --> 00:00:12.310 align:start position:0%
we will be getting into what
object-oriented<00:00:10.719><c> programming</c><00:00:11.280><c> means</c>

00:00:12.310 --> 00:00:12.320 align:start position:0%
object-oriented programming means
 

00:00:12.320 --> 00:00:14.470 align:start position:0%
object-oriented programming means
as<00:00:12.480><c> well</c><00:00:12.719><c> as</c><00:00:12.880><c> going</c><00:00:13.200><c> over</c><00:00:13.519><c> its</c><00:00:13.759><c> four</c><00:00:14.160><c> main</c>

00:00:14.470 --> 00:00:14.480 align:start position:0%
as well as going over its four main
 

00:00:14.480 --> 00:00:16.230 align:start position:0%
as well as going over its four main
principles

00:00:16.230 --> 00:00:16.240 align:start position:0%
principles
 

00:00:16.240 --> 00:00:18.070 align:start position:0%
principles
this<00:00:16.480><c> course</c><00:00:16.880><c> will</c><00:00:17.119><c> assume</c><00:00:17.440><c> that</c><00:00:17.600><c> you</c><00:00:17.760><c> have</c>

00:00:18.070 --> 00:00:18.080 align:start position:0%
this course will assume that you have
 

00:00:18.080 --> 00:00:19.750 align:start position:0%
this course will assume that you have
some<00:00:18.320><c> knowledge</c><00:00:18.640><c> of</c><00:00:18.800><c> programming</c><00:00:19.359><c> before</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
some knowledge of programming before
 

00:00:19.760 --> 00:00:21.429 align:start position:0%
some knowledge of programming before
hopping<00:00:20.160><c> in</c>

00:00:21.429 --> 00:00:21.439 align:start position:0%
hopping in
 

00:00:21.439 --> 00:00:23.269 align:start position:0%
hopping in
if<00:00:21.600><c> that's</c><00:00:21.920><c> not</c><00:00:22.160><c> the</c><00:00:22.320><c> case</c>

00:00:23.269 --> 00:00:23.279 align:start position:0%
if that's not the case
 

00:00:23.279 --> 00:00:24.950 align:start position:0%
if that's not the case
i<00:00:23.439><c> would</c><00:00:23.600><c> suggest</c><00:00:24.080><c> checking</c><00:00:24.480><c> out</c><00:00:24.720><c> our</c>

00:00:24.950 --> 00:00:24.960 align:start position:0%
i would suggest checking out our
 

00:00:24.960 --> 00:00:27.189 align:start position:0%
i would suggest checking out our
introduction<00:00:25.519><c> to</c><00:00:25.680><c> programming</c><00:00:26.240><c> video</c><00:00:27.039><c> which</c>

00:00:27.189 --> 00:00:27.199 align:start position:0%
introduction to programming video which
 

00:00:27.199 --> 00:00:29.589 align:start position:0%
introduction to programming video which
will<00:00:27.439><c> be</c><00:00:27.519><c> linked</c><00:00:27.840><c> in</c><00:00:27.920><c> the</c><00:00:28.000><c> description</c>

00:00:29.589 --> 00:00:29.599 align:start position:0%
will be linked in the description
 

00:00:29.599 --> 00:00:31.830 align:start position:0%
will be linked in the description
that<00:00:29.840><c> video</c><00:00:30.320><c> will</c><00:00:30.560><c> give</c><00:00:30.800><c> you</c><00:00:31.039><c> information</c><00:00:31.760><c> on</c>

00:00:31.830 --> 00:00:31.840 align:start position:0%
that video will give you information on
 

00:00:31.840 --> 00:00:33.670 align:start position:0%
that video will give you information on
the<00:00:32.000><c> basics</c><00:00:32.399><c> of</c><00:00:32.559><c> programming</c><00:00:33.280><c> that</c><00:00:33.520><c> are</c>

00:00:33.670 --> 00:00:33.680 align:start position:0%
the basics of programming that are
 

00:00:33.680 --> 00:00:35.990 align:start position:0%
the basics of programming that are
necessary<00:00:34.239><c> to</c><00:00:34.480><c> be</c><00:00:34.640><c> able</c><00:00:34.880><c> to</c><00:00:35.040><c> understand</c><00:00:35.760><c> more</c>

00:00:35.990 --> 00:00:36.000 align:start position:0%
necessary to be able to understand more
 

00:00:36.000 --> 00:00:38.389 align:start position:0%
necessary to be able to understand more
advanced<00:00:36.559><c> topics</c><00:00:37.200><c> such</c><00:00:37.520><c> as</c><00:00:37.600><c> those</c><00:00:37.920><c> covered</c><00:00:38.320><c> in</c>

00:00:38.389 --> 00:00:38.399 align:start position:0%
advanced topics such as those covered in
 

00:00:38.399 --> 00:00:39.750 align:start position:0%
advanced topics such as those covered in
this<00:00:38.640><c> video</c>

00:00:39.750 --> 00:00:39.760 align:start position:0%
this video
 

00:00:39.760 --> 00:00:41.350 align:start position:0%
this video
for<00:00:40.000><c> this</c><00:00:40.320><c> lecture</c>

00:00:41.350 --> 00:00:41.360 align:start position:0%
for this lecture
 

00:00:41.360 --> 00:00:43.590 align:start position:0%
for this lecture
we<00:00:41.520><c> will</c><00:00:41.680><c> be</c><00:00:41.920><c> exploring</c><00:00:42.559><c> object</c><00:00:43.040><c> oriented</c>

00:00:43.590 --> 00:00:43.600 align:start position:0%
we will be exploring object oriented
 

00:00:43.600 --> 00:00:45.270 align:start position:0%
we will be exploring object oriented
programming<00:00:44.239><c> in</c><00:00:44.399><c> a</c><00:00:44.480><c> manner</c><00:00:44.800><c> that</c><00:00:44.960><c> will</c><00:00:45.120><c> be</c>

00:00:45.270 --> 00:00:45.280 align:start position:0%
programming in a manner that will be
 

00:00:45.280 --> 00:00:47.190 align:start position:0%
programming in a manner that will be
applicable<00:00:45.840><c> for</c><00:00:46.079><c> its</c><00:00:46.239><c> use</c><00:00:46.719><c> in</c><00:00:46.879><c> any</c>

00:00:47.190 --> 00:00:47.200 align:start position:0%
applicable for its use in any
 

00:00:47.200 --> 00:00:48.950 align:start position:0%
applicable for its use in any
programming<00:00:47.760><c> language</c><00:00:48.239><c> in</c><00:00:48.399><c> which</c><00:00:48.640><c> it</c><00:00:48.800><c> is</c>

00:00:48.950 --> 00:00:48.960 align:start position:0%
programming language in which it is
 

00:00:48.960 --> 00:00:51.029 align:start position:0%
programming language in which it is
supported

00:00:51.029 --> 00:00:51.039 align:start position:0%
supported
 

00:00:51.039 --> 00:00:52.869 align:start position:0%
supported
examples<00:00:51.520><c> will</c><00:00:51.680><c> be</c><00:00:51.840><c> used</c><00:00:52.160><c> to</c><00:00:52.320><c> explain</c><00:00:52.719><c> the</c>

00:00:52.869 --> 00:00:52.879 align:start position:0%
examples will be used to explain the
 

00:00:52.879 --> 00:00:54.869 align:start position:0%
examples will be used to explain the
concept<00:00:53.360><c> being</c><00:00:53.680><c> discussed</c>

00:00:54.869 --> 00:00:54.879 align:start position:0%
concept being discussed
 

00:00:54.879 --> 00:00:56.389 align:start position:0%
concept being discussed
however<00:00:55.280><c> they</c><00:00:55.440><c> will</c><00:00:55.600><c> be</c><00:00:55.760><c> explained</c><00:00:56.160><c> well</c>

00:00:56.389 --> 00:00:56.399 align:start position:0%
however they will be explained well
 

00:00:56.399 --> 00:00:57.990 align:start position:0%
however they will be explained well
enough<00:00:56.719><c> that</c><00:00:56.879><c> specific</c><00:00:57.440><c> knowledge</c><00:00:57.760><c> of</c><00:00:57.840><c> the</c>

00:00:57.990 --> 00:00:58.000 align:start position:0%
enough that specific knowledge of the
 

00:00:58.000 --> 00:00:59.990 align:start position:0%
enough that specific knowledge of the
language<00:00:58.399><c> being</c><00:00:58.640><c> used</c><00:00:58.960><c> in</c><00:00:59.120><c> the</c><00:00:59.280><c> example</c><00:00:59.840><c> will</c>

00:00:59.990 --> 00:01:00.000 align:start position:0%
language being used in the example will
 

00:01:00.000 --> 00:01:02.310 align:start position:0%
language being used in the example will
not<00:01:00.160><c> be</c><00:01:00.320><c> necessary</c>

00:01:02.310 --> 00:01:02.320 align:start position:0%
not be necessary
 

00:01:02.320 --> 00:01:05.910 align:start position:0%
not be necessary
with<00:01:02.559><c> that</c><00:01:02.800><c> being</c><00:01:03.120><c> said</c><00:01:03.840><c> let's</c><00:01:04.080><c> get</c><00:01:04.320><c> into</c><00:01:04.559><c> it</c>

00:01:05.910 --> 00:01:05.920 align:start position:0%
with that being said let's get into it
 

00:01:05.920 --> 00:01:07.670 align:start position:0%
with that being said let's get into it
in<00:01:06.080><c> this</c><00:01:06.320><c> first</c><00:01:06.640><c> section</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
in this first section
 

00:01:07.680 --> 00:01:09.750 align:start position:0%
in this first section
we<00:01:07.840><c> will</c><00:01:08.000><c> be</c><00:01:08.240><c> going</c><00:01:08.640><c> over</c><00:01:09.040><c> what</c><00:01:09.280><c> object</c>

00:01:09.750 --> 00:01:09.760 align:start position:0%
we will be going over what object
 

00:01:09.760 --> 00:01:12.789 align:start position:0%
we will be going over what object
oriented<00:01:10.240><c> programming</c><00:01:10.960><c> actually</c><00:01:11.520><c> is</c>

00:01:12.789 --> 00:01:12.799 align:start position:0%
oriented programming actually is
 

00:01:12.799 --> 00:01:14.310 align:start position:0%
oriented programming actually is
in<00:01:12.960><c> order</c><00:01:13.280><c> to</c><00:01:13.520><c> understand</c><00:01:14.159><c> what</c>

00:01:14.310 --> 00:01:14.320 align:start position:0%
in order to understand what
 

00:01:14.320 --> 00:01:16.550 align:start position:0%
in order to understand what
object-oriented<00:01:15.280><c> programming</c><00:01:15.840><c> is</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
object-oriented programming is
 

00:01:16.560 --> 00:01:18.310 align:start position:0%
object-oriented programming is
it's<00:01:16.799><c> best</c><00:01:17.040><c> to</c><00:01:17.200><c> first</c><00:01:17.520><c> understand</c><00:01:18.080><c> what</c>

00:01:18.310 --> 00:01:18.320 align:start position:0%
it's best to first understand what
 

00:01:18.320 --> 00:01:19.749 align:start position:0%
it's best to first understand what
objects<00:01:18.799><c> are</c>

00:01:19.749 --> 00:01:19.759 align:start position:0%
objects are
 

00:01:19.759 --> 00:01:21.510 align:start position:0%
objects are
and<00:01:20.000><c> in</c><00:01:20.080><c> order</c><00:01:20.320><c> to</c><00:01:20.479><c> do</c><00:01:20.720><c> that</c>

00:01:21.510 --> 00:01:21.520 align:start position:0%
and in order to do that
 

00:01:21.520 --> 00:01:23.030 align:start position:0%
and in order to do that
it's<00:01:21.759><c> best</c><00:01:22.000><c> to</c><00:01:22.080><c> first</c><00:01:22.400><c> understand</c><00:01:22.799><c> what</c>

00:01:23.030 --> 00:01:23.040 align:start position:0%
it's best to first understand what
 

00:01:23.040 --> 00:01:24.950 align:start position:0%
it's best to first understand what
primitive<00:01:23.520><c> data</c><00:01:23.759><c> types</c><00:01:24.080><c> are</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
primitive data types are
 

00:01:24.960 --> 00:01:26.870 align:start position:0%
primitive data types are
so<00:01:25.119><c> let's</c><00:01:25.439><c> start</c><00:01:25.680><c> there</c>

00:01:26.870 --> 00:01:26.880 align:start position:0%
so let's start there
 

00:01:26.880 --> 00:01:28.870 align:start position:0%
so let's start there
primitive<00:01:27.439><c> data</c><00:01:27.759><c> types</c><00:01:28.080><c> are</c><00:01:28.320><c> exactly</c><00:01:28.720><c> what</c>

00:01:28.870 --> 00:01:28.880 align:start position:0%
primitive data types are exactly what
 

00:01:28.880 --> 00:01:30.390 align:start position:0%
primitive data types are exactly what
they<00:01:29.040><c> sound</c><00:01:29.280><c> like</c>

00:01:30.390 --> 00:01:30.400 align:start position:0%
they sound like
 

00:01:30.400 --> 00:01:32.710 align:start position:0%
they sound like
variables<00:01:31.040><c> that</c><00:01:31.200><c> store</c><00:01:31.680><c> single</c><00:01:32.400><c> simple</c>

00:01:32.710 --> 00:01:32.720 align:start position:0%
variables that store single simple
 

00:01:32.720 --> 00:01:34.149 align:start position:0%
variables that store single simple
values

00:01:34.149 --> 00:01:34.159 align:start position:0%
values
 

00:01:34.159 --> 00:01:36.390 align:start position:0%
values
examples<00:01:34.720><c> of</c><00:01:34.799><c> such</c><00:01:35.119><c> primitive</c><00:01:35.520><c> types</c><00:01:35.920><c> are</c><00:01:36.240><c> the</c>

00:01:36.390 --> 00:01:36.400 align:start position:0%
examples of such primitive types are the
 

00:01:36.400 --> 00:01:37.350 align:start position:0%
examples of such primitive types are the
byte

00:01:37.350 --> 00:01:37.360 align:start position:0%
byte
 

00:01:37.360 --> 00:01:38.230 align:start position:0%
byte
int

00:01:38.230 --> 00:01:38.240 align:start position:0%
int
 

00:01:38.240 --> 00:01:39.190 align:start position:0%
int
float

00:01:39.190 --> 00:01:39.200 align:start position:0%
float
 

00:01:39.200 --> 00:01:42.870 align:start position:0%
float
double<00:01:40.240><c> boolean</c><00:01:40.960><c> and</c><00:01:41.200><c> char</c>

00:01:42.870 --> 00:01:42.880 align:start position:0%
double boolean and char
 

00:01:42.880 --> 00:01:45.270 align:start position:0%
double boolean and char
these<00:01:43.200><c> primitive</c><00:01:43.759><c> types</c><00:01:44.240><c> only</c><00:01:44.479><c> act</c><00:01:44.720><c> to</c><00:01:44.799><c> store</c>

00:01:45.270 --> 00:01:45.280 align:start position:0%
these primitive types only act to store
 

00:01:45.280 --> 00:01:48.789 align:start position:0%
these primitive types only act to store
a<00:01:45.360><c> single</c><00:01:45.680><c> piece</c><00:01:45.920><c> of</c><00:01:46.079><c> data</c><00:01:46.479><c> of</c><00:01:46.640><c> a</c><00:01:46.720><c> certain</c><00:01:47.119><c> kind</c>

00:01:48.789 --> 00:01:48.799 align:start position:0%
a single piece of data of a certain kind
 

00:01:48.799 --> 00:01:50.950 align:start position:0%
a single piece of data of a certain kind
and<00:01:49.040><c> for</c><00:01:49.280><c> a</c><00:01:49.360><c> while</c><00:01:50.000><c> when</c><00:01:50.240><c> programming</c><00:01:50.720><c> was</c>

00:01:50.950 --> 00:01:50.960 align:start position:0%
and for a while when programming was
 

00:01:50.960 --> 00:01:54.710 align:start position:0%
and for a while when programming was
still<00:01:51.200><c> developing</c><00:01:52.159><c> this</c><00:01:52.399><c> was</c><00:01:52.560><c> just</c><00:01:52.880><c> fine</c><00:01:54.320><c> many</c>

00:01:54.710 --> 00:01:54.720 align:start position:0%
still developing this was just fine many
 

00:01:54.720 --> 00:01:56.310 align:start position:0%
still developing this was just fine many
programs<00:01:55.200><c> being</c><00:01:55.439><c> written</c><00:01:55.680><c> at</c><00:01:55.840><c> the</c><00:01:55.920><c> time</c>

00:01:56.310 --> 00:01:56.320 align:start position:0%
programs being written at the time
 

00:01:56.320 --> 00:01:58.950 align:start position:0%
programs being written at the time
weren't<00:01:56.719><c> complex</c><00:01:57.200><c> by</c><00:01:57.360><c> today's</c><00:01:57.759><c> standards</c>

00:01:58.950 --> 00:01:58.960 align:start position:0%
weren't complex by today's standards
 

00:01:58.960 --> 00:02:00.870 align:start position:0%
weren't complex by today's standards
thus<00:01:59.520><c> programmers</c><00:02:00.079><c> could</c><00:02:00.240><c> get</c><00:02:00.399><c> away</c><00:02:00.640><c> with</c>

00:02:00.870 --> 00:02:00.880 align:start position:0%
thus programmers could get away with
 

00:02:00.880 --> 00:02:03.670 align:start position:0%
thus programmers could get away with
only<00:02:01.119><c> using</c><00:02:01.360><c> these</c><00:02:01.600><c> primitive</c><00:02:02.079><c> types</c>

00:02:03.670 --> 00:02:03.680 align:start position:0%
only using these primitive types
 

00:02:03.680 --> 00:02:04.709 align:start position:0%
only using these primitive types
however

00:02:04.709 --> 00:02:04.719 align:start position:0%
however
 

00:02:04.719 --> 00:02:06.830 align:start position:0%
however
as<00:02:04.960><c> programs</c><00:02:05.439><c> became</c><00:02:05.840><c> larger</c><00:02:06.320><c> and</c><00:02:06.479><c> more</c>

00:02:06.830 --> 00:02:06.840 align:start position:0%
as programs became larger and more
 

00:02:06.840 --> 00:02:09.109 align:start position:0%
as programs became larger and more
complex<00:02:07.840><c> primitive</c><00:02:08.319><c> data</c><00:02:08.560><c> types</c><00:02:08.879><c> weren't</c>

00:02:09.109 --> 00:02:09.119 align:start position:0%
complex primitive data types weren't
 

00:02:09.119 --> 00:02:11.350 align:start position:0%
complex primitive data types weren't
really<00:02:09.360><c> cutting</c><00:02:09.599><c> it</c><00:02:09.759><c> anymore</c>

00:02:11.350 --> 00:02:11.360 align:start position:0%
really cutting it anymore
 

00:02:11.360 --> 00:02:13.030 align:start position:0%
really cutting it anymore
programmers<00:02:12.000><c> began</c><00:02:12.319><c> to</c><00:02:12.480><c> want</c><00:02:12.640><c> to</c><00:02:12.800><c> group</c>

00:02:13.030 --> 00:02:13.040 align:start position:0%
programmers began to want to group
 

00:02:13.040 --> 00:02:15.589 align:start position:0%
programmers began to want to group
variables<00:02:13.599><c> of</c><00:02:13.760><c> similar</c><00:02:14.239><c> type</c><00:02:14.480><c> together</c>

00:02:15.589 --> 00:02:15.599 align:start position:0%
variables of similar type together
 

00:02:15.599 --> 00:02:17.270 align:start position:0%
variables of similar type together
why<00:02:15.760><c> would</c><00:02:15.920><c> this</c><00:02:16.080><c> be</c><00:02:16.239><c> useful</c>

00:02:17.270 --> 00:02:17.280 align:start position:0%
why would this be useful
 

00:02:17.280 --> 00:02:19.030 align:start position:0%
why would this be useful
well<00:02:17.520><c> to</c><00:02:17.680><c> serve</c><00:02:17.920><c> as</c><00:02:18.080><c> an</c><00:02:18.160><c> example</c><00:02:18.800><c> let's</c>

00:02:19.030 --> 00:02:19.040 align:start position:0%
well to serve as an example let's
 

00:02:19.040 --> 00:02:20.790 align:start position:0%
well to serve as an example let's
imagine<00:02:19.440><c> you</c><00:02:19.520><c> are</c><00:02:19.680><c> trying</c><00:02:19.920><c> to</c><00:02:20.160><c> program</c><00:02:20.640><c> a</c>

00:02:20.790 --> 00:02:20.800 align:start position:0%
imagine you are trying to program a
 

00:02:20.800 --> 00:02:23.270 align:start position:0%
imagine you are trying to program a
chess<00:02:21.040><c> game</c><00:02:22.000><c> when</c><00:02:22.319><c> programming</c><00:02:22.879><c> a</c><00:02:23.040><c> knight</c>

00:02:23.270 --> 00:02:23.280 align:start position:0%
chess game when programming a knight
 

00:02:23.280 --> 00:02:25.270 align:start position:0%
chess game when programming a knight
into<00:02:23.520><c> the</c><00:02:23.599><c> game</c><00:02:24.400><c> there</c><00:02:24.640><c> are</c><00:02:24.800><c> plenty</c><00:02:25.200><c> of</c>

00:02:25.270 --> 00:02:25.280 align:start position:0%
into the game there are plenty of
 

00:02:25.280 --> 00:02:27.190 align:start position:0%
into the game there are plenty of
variables<00:02:25.840><c> that</c><00:02:26.000><c> you</c><00:02:26.160><c> will</c><00:02:26.319><c> need</c><00:02:26.720><c> in</c><00:02:26.959><c> order</c>

00:02:27.190 --> 00:02:27.200 align:start position:0%
variables that you will need in order
 

00:02:27.200 --> 00:02:29.589 align:start position:0%
variables that you will need in order
for<00:02:27.280><c> the</c><00:02:27.360><c> piece</c><00:02:27.680><c> to</c><00:02:27.760><c> work</c><00:02:28.000><c> how</c><00:02:28.239><c> it</c><00:02:28.400><c> should</c>

00:02:29.589 --> 00:02:29.599 align:start position:0%
for the piece to work how it should
 

00:02:29.599 --> 00:02:30.949 align:start position:0%
for the piece to work how it should
for<00:02:29.840><c> example</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
for example
 

00:02:30.959 --> 00:02:32.869 align:start position:0%
for example
you<00:02:31.120><c> would</c><00:02:31.280><c> need</c><00:02:31.519><c> a</c><00:02:31.599><c> position</c><00:02:32.080><c> variable</c><00:02:32.720><c> to</c>

00:02:32.869 --> 00:02:32.879 align:start position:0%
you would need a position variable to
 

00:02:32.879 --> 00:02:35.589 align:start position:0%
you would need a position variable to
keep<00:02:33.120><c> track</c><00:02:33.360><c> of</c><00:02:33.519><c> where</c><00:02:33.680><c> the</c><00:02:33.840><c> knight</c><00:02:34.160><c> is</c>

00:02:35.589 --> 00:02:35.599 align:start position:0%
keep track of where the knight is
 

00:02:35.599 --> 00:02:36.790 align:start position:0%
keep track of where the knight is
additionally

00:02:36.790 --> 00:02:36.800 align:start position:0%
additionally
 

00:02:36.800 --> 00:02:38.550 align:start position:0%
additionally
you<00:02:37.040><c> would</c><00:02:37.120><c> need</c><00:02:37.360><c> a</c><00:02:37.440><c> boolean</c><00:02:37.920><c> to</c><00:02:38.000><c> represent</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
you would need a boolean to represent
 

00:02:38.560 --> 00:02:40.390 align:start position:0%
you would need a boolean to represent
whether<00:02:38.800><c> the</c><00:02:38.959><c> piece</c><00:02:39.280><c> has</c><00:02:39.440><c> been</c><00:02:39.599><c> captured</c><00:02:40.160><c> or</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
whether the piece has been captured or
 

00:02:40.400 --> 00:02:41.270 align:start position:0%
whether the piece has been captured or
not

00:02:41.270 --> 00:02:41.280 align:start position:0%
not
 

00:02:41.280 --> 00:02:42.710 align:start position:0%
not
because<00:02:41.599><c> if</c><00:02:41.760><c> it</c><00:02:41.840><c> has</c>

00:02:42.710 --> 00:02:42.720 align:start position:0%
because if it has
 

00:02:42.720 --> 00:02:44.550 align:start position:0%
because if it has
you<00:02:42.879><c> would</c><00:02:43.040><c> not</c><00:02:43.200><c> want</c><00:02:43.360><c> it</c><00:02:43.440><c> to</c><00:02:43.599><c> show</c><00:02:43.840><c> up</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
you would not want it to show up
 

00:02:44.560 --> 00:02:47.430 align:start position:0%
you would not want it to show up
nor<00:02:44.800><c> should</c><00:02:44.959><c> you</c><00:02:45.120><c> be</c><00:02:45.280><c> able</c><00:02:45.440><c> to</c><00:02:45.599><c> move</c><00:02:45.840><c> with</c><00:02:46.080><c> it</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
nor should you be able to move with it
 

00:02:47.440 --> 00:02:49.110 align:start position:0%
nor should you be able to move with it
you<00:02:47.599><c> may</c><00:02:47.840><c> also</c><00:02:48.080><c> need</c><00:02:48.319><c> a</c><00:02:48.400><c> variable</c><00:02:48.959><c> to</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
you may also need a variable to
 

00:02:49.120 --> 00:02:51.430 align:start position:0%
you may also need a variable to
represent<00:02:49.680><c> which</c><00:02:50.000><c> color</c><00:02:50.319><c> the</c><00:02:50.480><c> knight</c><00:02:50.720><c> is</c>

00:02:51.430 --> 00:02:51.440 align:start position:0%
represent which color the knight is
 

00:02:51.440 --> 00:02:54.150 align:start position:0%
represent which color the knight is
so<00:02:51.680><c> that</c><00:02:51.840><c> the</c><00:02:51.920><c> game</c><00:02:52.160><c> can</c><00:02:52.319><c> treat</c><00:02:52.560><c> it</c><00:02:52.720><c> correctly</c>

00:02:54.150 --> 00:02:54.160 align:start position:0%
so that the game can treat it correctly
 

00:02:54.160 --> 00:02:55.910 align:start position:0%
so that the game can treat it correctly
these<00:02:54.400><c> are</c><00:02:54.480><c> just</c><00:02:54.720><c> a</c><00:02:54.879><c> few</c><00:02:55.120><c> of</c><00:02:55.200><c> the</c><00:02:55.280><c> variables</c>

00:02:55.910 --> 00:02:55.920 align:start position:0%
these are just a few of the variables
 

00:02:55.920 --> 00:02:57.830 align:start position:0%
these are just a few of the variables
that<00:02:56.080><c> you</c><00:02:56.160><c> would</c><00:02:56.319><c> need</c><00:02:56.480><c> for</c><00:02:56.720><c> one</c><00:02:56.959><c> piece</c>

00:02:57.830 --> 00:02:57.840 align:start position:0%
that you would need for one piece
 

00:02:57.840 --> 00:02:59.509 align:start position:0%
that you would need for one piece
and<00:02:58.080><c> you</c><00:02:58.159><c> would</c><00:02:58.400><c> need</c><00:02:58.640><c> one</c><00:02:58.879><c> of</c><00:02:59.040><c> each</c><00:02:59.200><c> of</c><00:02:59.280><c> these</c>

00:02:59.509 --> 00:02:59.519 align:start position:0%
and you would need one of each of these
 

00:02:59.519 --> 00:03:02.070 align:start position:0%
and you would need one of each of these
variables<00:03:00.159><c> for</c><00:03:00.400><c> each</c><00:03:00.640><c> piece</c><00:03:00.879><c> on</c><00:03:01.040><c> the</c><00:03:01.120><c> board</c>

00:03:02.070 --> 00:03:02.080 align:start position:0%
variables for each piece on the board
 

00:03:02.080 --> 00:03:03.509 align:start position:0%
variables for each piece on the board
each<00:03:02.319><c> of</c><00:03:02.400><c> which</c><00:03:02.640><c> would</c><00:03:02.800><c> contain</c><00:03:03.200><c> different</c>

00:03:03.509 --> 00:03:03.519 align:start position:0%
each of which would contain different
 

00:03:03.519 --> 00:03:04.790 align:start position:0%
each of which would contain different
data

00:03:04.790 --> 00:03:04.800 align:start position:0%
data
 

00:03:04.800 --> 00:03:07.110 align:start position:0%
data
clearly<00:03:05.680><c> it</c><00:03:05.840><c> would</c><00:03:06.000><c> be</c><00:03:06.239><c> easiest</c><00:03:06.720><c> if</c><00:03:06.879><c> you</c><00:03:06.959><c> could</c>

00:03:07.110 --> 00:03:07.120 align:start position:0%
clearly it would be easiest if you could
 

00:03:07.120 --> 00:03:09.430 align:start position:0%
clearly it would be easiest if you could
group<00:03:07.440><c> all</c><00:03:07.680><c> of</c><00:03:07.840><c> the</c><00:03:08.000><c> variables</c><00:03:08.560><c> related</c><00:03:08.959><c> to</c>

00:03:09.430 --> 00:03:09.440 align:start position:0%
group all of the variables related to
 

00:03:09.440 --> 00:03:12.550 align:start position:0%
group all of the variables related to
say<00:03:10.239><c> one</c><00:03:10.400><c> of</c><00:03:10.480><c> your</c><00:03:10.720><c> knights</c><00:03:11.360><c> together</c>

00:03:12.550 --> 00:03:12.560 align:start position:0%
say one of your knights together
 

00:03:12.560 --> 00:03:14.309 align:start position:0%
say one of your knights together
so<00:03:12.720><c> that</c><00:03:12.879><c> you</c><00:03:13.040><c> may</c><00:03:13.280><c> deal</c><00:03:13.519><c> with</c><00:03:13.599><c> them</c><00:03:13.840><c> as</c><00:03:14.080><c> one</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
so that you may deal with them as one
 

00:03:14.319 --> 00:03:15.830 align:start position:0%
so that you may deal with them as one
entity

00:03:15.830 --> 00:03:15.840 align:start position:0%
entity
 

00:03:15.840 --> 00:03:17.110 align:start position:0%
entity
additionally

00:03:17.110 --> 00:03:17.120 align:start position:0%
additionally
 

00:03:17.120 --> 00:03:18.790 align:start position:0%
additionally
you<00:03:17.280><c> may</c><00:03:17.440><c> want</c><00:03:17.599><c> to</c><00:03:17.840><c> group</c><00:03:18.080><c> your</c><00:03:18.319><c> two</c><00:03:18.480><c> knights</c>

00:03:18.790 --> 00:03:18.800 align:start position:0%
you may want to group your two knights
 

00:03:18.800 --> 00:03:21.910 align:start position:0%
you may want to group your two knights
together<00:03:19.440><c> as</c><00:03:19.599><c> they</c><00:03:19.840><c> behave</c><00:03:20.239><c> similarly</c>

00:03:21.910 --> 00:03:21.920 align:start position:0%
together as they behave similarly
 

00:03:21.920 --> 00:03:23.509 align:start position:0%
together as they behave similarly
you<00:03:22.080><c> then</c><00:03:22.239><c> may</c><00:03:22.400><c> want</c><00:03:22.560><c> to</c><00:03:22.720><c> group</c><00:03:22.959><c> the</c><00:03:23.040><c> pieces</c><00:03:23.360><c> of</c>

00:03:23.509 --> 00:03:23.519 align:start position:0%
you then may want to group the pieces of
 

00:03:23.519 --> 00:03:25.589 align:start position:0%
you then may want to group the pieces of
each<00:03:23.760><c> side</c><00:03:24.080><c> together</c><00:03:24.959><c> as</c><00:03:25.120><c> they</c><00:03:25.280><c> would</c><00:03:25.440><c> be</c>

00:03:25.589 --> 00:03:25.599 align:start position:0%
each side together as they would be
 

00:03:25.599 --> 00:03:27.430 align:start position:0%
each side together as they would be
treated<00:03:25.920><c> differently</c><00:03:26.560><c> in</c><00:03:26.720><c> reference</c><00:03:27.120><c> to</c><00:03:27.280><c> each</c>

00:03:27.430 --> 00:03:27.440 align:start position:0%
treated differently in reference to each
 

00:03:27.440 --> 00:03:28.949 align:start position:0%
treated differently in reference to each
other

00:03:28.949 --> 00:03:28.959 align:start position:0%
other
 

00:03:28.959 --> 00:03:31.509 align:start position:0%
other
in<00:03:29.200><c> essence</c><00:03:30.000><c> grouping</c><00:03:30.480><c> related</c><00:03:30.879><c> variables</c>

00:03:31.509 --> 00:03:31.519 align:start position:0%
in essence grouping related variables
 

00:03:31.519 --> 00:03:33.910 align:start position:0%
in essence grouping related variables
together<00:03:32.239><c> is</c><00:03:32.480><c> almost</c><00:03:32.879><c> necessary</c><00:03:33.680><c> when</c><00:03:33.840><c> it</c>

00:03:33.910 --> 00:03:33.920 align:start position:0%
together is almost necessary when it
 

00:03:33.920 --> 00:03:36.470 align:start position:0%
together is almost necessary when it
comes<00:03:34.159><c> to</c><00:03:34.319><c> complex</c><00:03:34.959><c> programs</c>

00:03:36.470 --> 00:03:36.480 align:start position:0%
comes to complex programs
 

00:03:36.480 --> 00:03:39.190 align:start position:0%
comes to complex programs
this<00:03:36.720><c> is</c><00:03:36.879><c> where</c><00:03:37.040><c> the</c><00:03:37.200><c> struct</c><00:03:38.000><c> or</c><00:03:38.400><c> structure</c>

00:03:39.190 --> 00:03:39.200 align:start position:0%
this is where the struct or structure
 

00:03:39.200 --> 00:03:40.949 align:start position:0%
this is where the struct or structure
came<00:03:39.519><c> in</c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
came in
 

00:03:40.959 --> 00:03:42.149 align:start position:0%
came in
in<00:03:41.200><c> c</c>

00:03:42.149 --> 00:03:42.159 align:start position:0%
in c
 

00:03:42.159 --> 00:03:44.869 align:start position:0%
in c
the<00:03:42.400><c> structure</c><00:03:42.959><c> is</c><00:03:43.120><c> similar</c><00:03:43.519><c> to</c><00:03:43.680><c> an</c><00:03:43.840><c> array</c>

00:03:44.869 --> 00:03:44.879 align:start position:0%
the structure is similar to an array
 

00:03:44.879 --> 00:03:46.869 align:start position:0%
the structure is similar to an array
if<00:03:44.959><c> you</c><00:03:45.120><c> don't</c><00:03:45.280><c> know</c><00:03:45.440><c> what</c><00:03:45.680><c> an</c><00:03:45.840><c> array</c><00:03:46.159><c> is</c><00:03:46.640><c> i'd</c>

00:03:46.869 --> 00:03:46.879 align:start position:0%
if you don't know what an array is i'd
 

00:03:46.879 --> 00:03:48.550 align:start position:0%
if you don't know what an array is i'd
suggest<00:03:47.280><c> you</c><00:03:47.440><c> check</c><00:03:47.680><c> out</c><00:03:47.920><c> either</c><00:03:48.400><c> our</c>

00:03:48.550 --> 00:03:48.560 align:start position:0%
suggest you check out either our
 

00:03:48.560 --> 00:03:50.149 align:start position:0%
suggest you check out either our
introduction<00:03:49.040><c> to</c><00:03:49.200><c> programming</c><00:03:49.680><c> course</c><00:03:50.000><c> for</c>

00:03:50.149 --> 00:03:50.159 align:start position:0%
introduction to programming course for
 

00:03:50.159 --> 00:03:51.509 align:start position:0%
introduction to programming course for
an<00:03:50.319><c> overview</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
an overview
 

00:03:51.519 --> 00:03:53.750 align:start position:0%
an overview
or<00:03:51.680><c> our</c><00:03:51.840><c> data</c><00:03:52.159><c> structure</c><00:03:52.640><c> series</c><00:03:53.200><c> for</c><00:03:53.439><c> a</c><00:03:53.519><c> more</c>

00:03:53.750 --> 00:03:53.760 align:start position:0%
or our data structure series for a more
 

00:03:53.760 --> 00:03:55.910 align:start position:0%
or our data structure series for a more
in-depth<00:03:54.239><c> look</c><00:03:54.560><c> at</c><00:03:54.640><c> both</c><00:03:54.879><c> arrays</c><00:03:55.439><c> and</c><00:03:55.599><c> many</c>

00:03:55.910 --> 00:03:55.920 align:start position:0%
in-depth look at both arrays and many
 

00:03:55.920 --> 00:03:58.149 align:start position:0%
in-depth look at both arrays and many
other<00:03:56.080><c> data</c><00:03:56.400><c> structures</c>

00:03:58.149 --> 00:03:58.159 align:start position:0%
other data structures
 

00:03:58.159 --> 00:04:00.470 align:start position:0%
other data structures
both<00:03:58.480><c> arrays</c><00:03:59.120><c> and</c><00:03:59.280><c> structures</c><00:04:00.000><c> allow</c><00:04:00.319><c> the</c>

00:04:00.470 --> 00:04:00.480 align:start position:0%
both arrays and structures allow the
 

00:04:00.480 --> 00:04:02.470 align:start position:0%
both arrays and structures allow the
programmer<00:04:00.959><c> to</c><00:04:01.120><c> store</c><00:04:01.599><c> several</c><00:04:02.000><c> pieces</c><00:04:02.400><c> of</c>

00:04:02.470 --> 00:04:02.480 align:start position:0%
programmer to store several pieces of
 

00:04:02.480 --> 00:04:04.070 align:start position:0%
programmer to store several pieces of
data<00:04:02.799><c> together</c>

00:04:04.070 --> 00:04:04.080 align:start position:0%
data together
 

00:04:04.080 --> 00:04:06.390 align:start position:0%
data together
however<00:04:04.640><c> structures</c><00:04:05.200><c> vary</c><00:04:05.519><c> from</c><00:04:05.760><c> arrays</c><00:04:06.319><c> in</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
however structures vary from arrays in
 

00:04:06.400 --> 00:04:08.229 align:start position:0%
however structures vary from arrays in
that<00:04:06.640><c> structures</c><00:04:07.120><c> allow</c><00:04:07.360><c> the</c><00:04:07.519><c> programmer</c><00:04:08.080><c> to</c>

00:04:08.229 --> 00:04:08.239 align:start position:0%
that structures allow the programmer to
 

00:04:08.239 --> 00:04:11.270 align:start position:0%
that structures allow the programmer to
store<00:04:08.480><c> data</c><00:04:08.799><c> of</c><00:04:08.959><c> different</c><00:04:09.360><c> types</c><00:04:09.680><c> together</c>

00:04:11.270 --> 00:04:11.280 align:start position:0%
store data of different types together
 

00:04:11.280 --> 00:04:13.509 align:start position:0%
store data of different types together
for<00:04:11.519><c> instance</c><00:04:12.400><c> whereas</c><00:04:12.879><c> an</c><00:04:13.040><c> array</c><00:04:13.360><c> would</c>

00:04:13.509 --> 00:04:13.519 align:start position:0%
for instance whereas an array would
 

00:04:13.519 --> 00:04:15.750 align:start position:0%
for instance whereas an array would
allow<00:04:13.760><c> you</c><00:04:13.920><c> to</c><00:04:14.080><c> store</c><00:04:14.480><c> only</c><00:04:14.799><c> ins</c><00:04:15.200><c> or</c><00:04:15.439><c> only</c>

00:04:15.750 --> 00:04:15.760 align:start position:0%
allow you to store only ins or only
 

00:04:15.760 --> 00:04:16.949 align:start position:0%
allow you to store only ins or only
strings

00:04:16.949 --> 00:04:16.959 align:start position:0%
strings
 

00:04:16.959 --> 00:04:19.030 align:start position:0%
strings
using<00:04:17.199><c> a</c><00:04:17.359><c> structure</c><00:04:18.000><c> you</c><00:04:18.160><c> could</c><00:04:18.320><c> store</c><00:04:18.639><c> ins</c>

00:04:19.030 --> 00:04:19.040 align:start position:0%
using a structure you could store ins
 

00:04:19.040 --> 00:04:21.270 align:start position:0%
using a structure you could store ins
and<00:04:19.199><c> strings</c><00:04:19.600><c> together</c><00:04:20.479><c> along</c><00:04:20.799><c> with</c><00:04:21.040><c> other</c>

00:04:21.270 --> 00:04:21.280 align:start position:0%
and strings together along with other
 

00:04:21.280 --> 00:04:23.189 align:start position:0%
and strings together along with other
data<00:04:21.519><c> types</c>

00:04:23.189 --> 00:04:23.199 align:start position:0%
data types
 

00:04:23.199 --> 00:04:24.790 align:start position:0%
data types
a<00:04:23.280><c> structure</c><00:04:23.759><c> can</c><00:04:23.919><c> even</c><00:04:24.160><c> store</c><00:04:24.560><c> other</c>

00:04:24.790 --> 00:04:24.800 align:start position:0%
a structure can even store other
 

00:04:24.800 --> 00:04:26.550 align:start position:0%
a structure can even store other
structures<00:04:25.280><c> within</c><00:04:25.600><c> it</c>

00:04:26.550 --> 00:04:26.560 align:start position:0%
structures within it
 

00:04:26.560 --> 00:04:28.469 align:start position:0%
structures within it
a<00:04:26.720><c> structure</c><00:04:27.120><c> can</c><00:04:27.280><c> be</c><00:04:27.440><c> very</c><00:04:27.759><c> useful</c><00:04:28.240><c> in</c><00:04:28.320><c> the</c>

00:04:28.469 --> 00:04:28.479 align:start position:0%
a structure can be very useful in the
 

00:04:28.479 --> 00:04:30.550 align:start position:0%
a structure can be very useful in the
earlier<00:04:28.880><c> chess</c><00:04:29.199><c> example</c><00:04:30.000><c> because</c><00:04:30.240><c> you</c><00:04:30.400><c> could</c>

00:04:30.550 --> 00:04:30.560 align:start position:0%
earlier chess example because you could
 

00:04:30.560 --> 00:04:32.469 align:start position:0%
earlier chess example because you could
store<00:04:30.880><c> all</c><00:04:31.040><c> of</c><00:04:31.120><c> the</c><00:04:31.280><c> useful</c><00:04:31.680><c> pieces</c><00:04:32.000><c> of</c><00:04:32.160><c> data</c>

00:04:32.469 --> 00:04:32.479 align:start position:0%
store all of the useful pieces of data
 

00:04:32.479 --> 00:04:34.710 align:start position:0%
store all of the useful pieces of data
related<00:04:32.800><c> to</c><00:04:32.960><c> the</c><00:04:33.040><c> knight</c><00:04:33.680><c> in</c><00:04:33.840><c> one</c><00:04:34.160><c> structure</c>

00:04:34.710 --> 00:04:34.720 align:start position:0%
related to the knight in one structure
 

00:04:34.720 --> 00:04:37.270 align:start position:0%
related to the knight in one structure
that<00:04:34.960><c> represents</c><00:04:35.520><c> that</c><00:04:35.840><c> knight</c>

00:04:37.270 --> 00:04:37.280 align:start position:0%
that represents that knight
 

00:04:37.280 --> 00:04:38.790 align:start position:0%
that represents that knight
you<00:04:37.440><c> could</c><00:04:37.680><c> then</c><00:04:38.080><c> store</c><00:04:38.400><c> your</c><00:04:38.560><c> knight</c>

00:04:38.790 --> 00:04:38.800 align:start position:0%
you could then store your knight
 

00:04:38.800 --> 00:04:40.790 align:start position:0%
you could then store your knight
structures<00:04:39.360><c> together</c><00:04:39.919><c> in</c><00:04:40.160><c> one</c><00:04:40.400><c> structure</c>

00:04:40.790 --> 00:04:40.800 align:start position:0%
structures together in one structure
 

00:04:40.800 --> 00:04:42.870 align:start position:0%
structures together in one structure
that<00:04:41.040><c> represents</c><00:04:41.600><c> all</c><00:04:41.840><c> of</c><00:04:41.919><c> the</c><00:04:42.080><c> knights</c><00:04:42.639><c> and</c>

00:04:42.870 --> 00:04:42.880 align:start position:0%
that represents all of the knights and
 

00:04:42.880 --> 00:04:44.550 align:start position:0%
that represents all of the knights and
so<00:04:43.120><c> on</c>

00:04:44.550 --> 00:04:44.560 align:start position:0%
so on
 

00:04:44.560 --> 00:04:46.550 align:start position:0%
so on
the<00:04:44.720><c> structure</c><00:04:45.440><c> allowed</c><00:04:45.840><c> such</c><00:04:46.080><c> grouping</c><00:04:46.400><c> to</c>

00:04:46.550 --> 00:04:46.560 align:start position:0%
the structure allowed such grouping to
 

00:04:46.560 --> 00:04:48.310 align:start position:0%
the structure allowed such grouping to
take<00:04:46.800><c> place</c><00:04:47.199><c> beyond</c><00:04:47.520><c> what</c><00:04:47.759><c> arrays</c><00:04:48.160><c> were</c>

00:04:48.310 --> 00:04:48.320 align:start position:0%
take place beyond what arrays were
 

00:04:48.320 --> 00:04:49.749 align:start position:0%
take place beyond what arrays were
capable<00:04:48.800><c> of</c>

00:04:49.749 --> 00:04:49.759 align:start position:0%
capable of
 

00:04:49.759 --> 00:04:52.150 align:start position:0%
capable of
the<00:04:50.000><c> structure</c><00:04:50.479><c> is</c><00:04:50.960><c> in</c><00:04:51.040><c> many</c><00:04:51.360><c> ways</c><00:04:52.000><c> the</c>

00:04:52.150 --> 00:04:52.160 align:start position:0%
the structure is in many ways the
 

00:04:52.160 --> 00:04:55.110 align:start position:0%
the structure is in many ways the
precursor<00:04:52.720><c> to</c><00:04:52.880><c> the</c><00:04:53.040><c> object</c><00:04:53.680><c> which</c><00:04:54.160><c> of</c><00:04:54.400><c> course</c>

00:04:55.110 --> 00:04:55.120 align:start position:0%
precursor to the object which of course
 

00:04:55.120 --> 00:04:57.350 align:start position:0%
precursor to the object which of course
object<00:04:55.440><c> oriented</c><00:04:55.919><c> programming</c><00:04:56.560><c> is</c><00:04:56.880><c> oriented</c>

00:04:57.350 --> 00:04:57.360 align:start position:0%
object oriented programming is oriented
 

00:04:57.360 --> 00:04:59.030 align:start position:0%
object oriented programming is oriented
around

00:04:59.030 --> 00:04:59.040 align:start position:0%
around
 

00:04:59.040 --> 00:05:01.029 align:start position:0%
around
the<00:04:59.199><c> main</c><00:04:59.600><c> issue</c><00:04:59.919><c> with</c><00:05:00.080><c> using</c><00:05:00.400><c> a</c><00:05:00.479><c> structure</c><00:05:00.960><c> in</c>

00:05:01.029 --> 00:05:01.039 align:start position:0%
the main issue with using a structure in
 

00:05:01.039 --> 00:05:01.990 align:start position:0%
the main issue with using a structure in
this<00:05:01.199><c> way</c>

00:05:01.990 --> 00:05:02.000 align:start position:0%
this way
 

00:05:02.000 --> 00:05:03.749 align:start position:0%
this way
and<00:05:02.240><c> an</c><00:05:02.400><c> issue</c><00:05:02.639><c> that</c><00:05:02.880><c> objects</c><00:05:03.280><c> would</c><00:05:03.440><c> come</c><00:05:03.600><c> to</c>

00:05:03.749 --> 00:05:03.759 align:start position:0%
and an issue that objects would come to
 

00:05:03.759 --> 00:05:04.790 align:start position:0%
and an issue that objects would come to
remedy

00:05:04.790 --> 00:05:04.800 align:start position:0%
remedy
 

00:05:04.800 --> 00:05:06.390 align:start position:0%
remedy
was<00:05:05.039><c> that</c><00:05:05.120><c> you</c><00:05:05.199><c> could</c><00:05:05.360><c> not</c><00:05:05.520><c> define</c><00:05:06.000><c> functions</c>

00:05:06.390 --> 00:05:06.400 align:start position:0%
was that you could not define functions
 

00:05:06.400 --> 00:05:07.909 align:start position:0%
was that you could not define functions
within<00:05:06.639><c> a</c><00:05:06.720><c> structure</c><00:05:07.360><c> you</c><00:05:07.520><c> could</c><00:05:07.680><c> only</c>

00:05:07.909 --> 00:05:07.919 align:start position:0%
within a structure you could only
 

00:05:07.919 --> 00:05:09.350 align:start position:0%
within a structure you could only
reference<00:05:08.400><c> them</c>

00:05:09.350 --> 00:05:09.360 align:start position:0%
reference them
 

00:05:09.360 --> 00:05:11.350 align:start position:0%
reference them
when<00:05:09.680><c> object-oriented</c><00:05:10.639><c> programming</c><00:05:11.120><c> came</c>

00:05:11.350 --> 00:05:11.360 align:start position:0%
when object-oriented programming came
 

00:05:11.360 --> 00:05:12.310 align:start position:0%
when object-oriented programming came
along

00:05:12.310 --> 00:05:12.320 align:start position:0%
along
 

00:05:12.320 --> 00:05:14.230 align:start position:0%
along
objects<00:05:12.720><c> allowed</c><00:05:13.039><c> you</c><00:05:13.120><c> to</c><00:05:13.280><c> store</c><00:05:13.520><c> data</c><00:05:13.840><c> of</c><00:05:14.080><c> all</c>

00:05:14.230 --> 00:05:14.240 align:start position:0%
objects allowed you to store data of all
 

00:05:14.240 --> 00:05:17.670 align:start position:0%
objects allowed you to store data of all
kinds<00:05:14.560><c> together</c><00:05:15.520><c> and</c><00:05:16.080><c> additionally</c><00:05:17.199><c> define</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
kinds together and additionally define
 

00:05:17.680 --> 00:05:19.909 align:start position:0%
kinds together and additionally define
and<00:05:17.840><c> store</c><00:05:18.240><c> functions</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
and store functions
 

00:05:19.919 --> 00:05:22.070 align:start position:0%
and store functions
now<00:05:20.320><c> before</c><00:05:20.639><c> we</c><00:05:20.800><c> go</c><00:05:20.960><c> much</c><00:05:21.199><c> further</c><00:05:21.759><c> i</c><00:05:21.919><c> should</c>

00:05:22.070 --> 00:05:22.080 align:start position:0%
now before we go much further i should
 

00:05:22.080 --> 00:05:24.550 align:start position:0%
now before we go much further i should
get<00:05:22.240><c> into</c><00:05:22.560><c> exactly</c><00:05:22.960><c> what</c><00:05:23.199><c> objects</c><00:05:23.600><c> are</c>

00:05:24.550 --> 00:05:24.560 align:start position:0%
get into exactly what objects are
 

00:05:24.560 --> 00:05:27.350 align:start position:0%
get into exactly what objects are
objects<00:05:25.120><c> are</c><00:05:25.360><c> instances</c><00:05:25.919><c> of</c><00:05:26.080><c> a</c><00:05:26.240><c> class</c>

00:05:27.350 --> 00:05:27.360 align:start position:0%
objects are instances of a class
 

00:05:27.360 --> 00:05:29.590 align:start position:0%
objects are instances of a class
and<00:05:27.600><c> a</c><00:05:27.759><c> class</c><00:05:28.240><c> is</c><00:05:28.400><c> basically</c><00:05:28.880><c> a</c><00:05:28.960><c> template</c><00:05:29.440><c> for</c>

00:05:29.590 --> 00:05:29.600 align:start position:0%
and a class is basically a template for
 

00:05:29.600 --> 00:05:31.270 align:start position:0%
and a class is basically a template for
an<00:05:29.840><c> object</c>

00:05:31.270 --> 00:05:31.280 align:start position:0%
an object
 

00:05:31.280 --> 00:05:33.029 align:start position:0%
an object
this<00:05:31.520><c> may</c><00:05:31.759><c> seem</c><00:05:32.000><c> like</c><00:05:32.160><c> a</c><00:05:32.240><c> circular</c><00:05:32.720><c> way</c><00:05:32.960><c> of</c>

00:05:33.029 --> 00:05:33.039 align:start position:0%
this may seem like a circular way of
 

00:05:33.039 --> 00:05:34.870 align:start position:0%
this may seem like a circular way of
looking<00:05:33.280><c> at</c><00:05:33.360><c> these</c><00:05:33.600><c> concepts</c><00:05:34.320><c> but</c><00:05:34.479><c> allow</c><00:05:34.800><c> me</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
looking at these concepts but allow me
 

00:05:34.880 --> 00:05:36.469 align:start position:0%
looking at these concepts but allow me
to<00:05:35.039><c> explain</c>

00:05:36.469 --> 00:05:36.479 align:start position:0%
to explain
 

00:05:36.479 --> 00:05:39.189 align:start position:0%
to explain
let's<00:05:36.720><c> say</c><00:05:36.960><c> i</c><00:05:37.120><c> define</c><00:05:37.600><c> a</c><00:05:37.680><c> night</c><00:05:38.000><c> class</c>

00:05:39.189 --> 00:05:39.199 align:start position:0%
let's say i define a night class
 

00:05:39.199 --> 00:05:41.510 align:start position:0%
let's say i define a night class
in<00:05:39.360><c> this</c><00:05:39.600><c> class</c><00:05:40.240><c> i</c><00:05:40.400><c> would</c><00:05:40.560><c> define</c><00:05:41.039><c> and</c><00:05:41.199><c> store</c>

00:05:41.510 --> 00:05:41.520 align:start position:0%
in this class i would define and store
 

00:05:41.520 --> 00:05:44.150 align:start position:0%
in this class i would define and store
data<00:05:41.919><c> that</c><00:05:42.080><c> is</c><00:05:42.240><c> common</c><00:05:42.639><c> of</c><00:05:42.800><c> all</c><00:05:43.039><c> knights</c>

00:05:44.150 --> 00:05:44.160 align:start position:0%
data that is common of all knights
 

00:05:44.160 --> 00:05:46.390 align:start position:0%
data that is common of all knights
this<00:05:44.400><c> would</c><00:05:44.560><c> be</c><00:05:45.039><c> mainly</c><00:05:45.840><c> the</c><00:05:46.000><c> way</c><00:05:46.160><c> that</c>

00:05:46.390 --> 00:05:46.400 align:start position:0%
this would be mainly the way that
 

00:05:46.400 --> 00:05:48.230 align:start position:0%
this would be mainly the way that
knights<00:05:46.639><c> are</c><00:05:46.800><c> able</c><00:05:47.039><c> to</c><00:05:47.199><c> move</c>

00:05:48.230 --> 00:05:48.240 align:start position:0%
knights are able to move
 

00:05:48.240 --> 00:05:51.029 align:start position:0%
knights are able to move
thus<00:05:49.039><c> in</c><00:05:49.199><c> this</c><00:05:49.440><c> class</c><00:05:50.240><c> i</c><00:05:50.400><c> would</c><00:05:50.560><c> define</c><00:05:50.960><c> a</c>

00:05:51.029 --> 00:05:51.039 align:start position:0%
thus in this class i would define a
 

00:05:51.039 --> 00:05:52.870 align:start position:0%
thus in this class i would define a
function<00:05:51.520><c> that</c><00:05:51.759><c> uses</c><00:05:52.080><c> the</c><00:05:52.240><c> knight's</c><00:05:52.560><c> current</c>

00:05:52.870 --> 00:05:52.880 align:start position:0%
function that uses the knight's current
 

00:05:52.880 --> 00:05:54.870 align:start position:0%
function that uses the knight's current
position<00:05:53.520><c> to</c><00:05:53.680><c> return</c><00:05:54.160><c> squares</c><00:05:54.560><c> that</c><00:05:54.720><c> the</c>

00:05:54.870 --> 00:05:54.880 align:start position:0%
position to return squares that the
 

00:05:54.880 --> 00:05:56.629 align:start position:0%
position to return squares that the
knight<00:05:55.039><c> can</c><00:05:55.199><c> move</c><00:05:55.440><c> to</c>

00:05:56.629 --> 00:05:56.639 align:start position:0%
knight can move to
 

00:05:56.639 --> 00:05:59.670 align:start position:0%
knight can move to
i<00:05:56.880><c> may</c><00:05:57.199><c> also</c><00:05:57.520><c> define</c><00:05:58.000><c> a</c><00:05:58.080><c> position</c><00:05:58.639><c> variable</c>

00:05:59.670 --> 00:05:59.680 align:start position:0%
i may also define a position variable
 

00:05:59.680 --> 00:06:02.150 align:start position:0%
i may also define a position variable
as<00:05:59.840><c> well</c><00:06:00.080><c> as</c><00:06:00.240><c> a</c><00:06:00.319><c> color</c><00:06:00.560><c> variable</c><00:06:01.600><c> but</c><00:06:01.840><c> i</c><00:06:01.919><c> would</c>

00:06:02.150 --> 00:06:02.160 align:start position:0%
as well as a color variable but i would
 

00:06:02.160 --> 00:06:04.230 align:start position:0%
as well as a color variable but i would
not<00:06:02.479><c> initialize</c><00:06:03.120><c> them</c>

00:06:04.230 --> 00:06:04.240 align:start position:0%
not initialize them
 

00:06:04.240 --> 00:06:06.629 align:start position:0%
not initialize them
when<00:06:04.479><c> it</c><00:06:04.560><c> comes</c><00:06:04.880><c> to</c><00:06:05.120><c> specific</c><00:06:05.600><c> things</c><00:06:06.160><c> such</c><00:06:06.479><c> as</c>

00:06:06.629 --> 00:06:06.639 align:start position:0%
when it comes to specific things such as
 

00:06:06.639 --> 00:06:08.469 align:start position:0%
when it comes to specific things such as
variables<00:06:07.199><c> that</c><00:06:07.440><c> each</c><00:06:07.680><c> object</c><00:06:08.080><c> under</c><00:06:08.319><c> the</c>

00:06:08.469 --> 00:06:08.479 align:start position:0%
variables that each object under the
 

00:06:08.479 --> 00:06:09.350 align:start position:0%
variables that each object under the
class

00:06:09.350 --> 00:06:09.360 align:start position:0%
class
 

00:06:09.360 --> 00:06:11.510 align:start position:0%
class
in<00:06:09.440><c> this</c><00:06:09.680><c> case</c><00:06:10.080><c> each</c><00:06:10.400><c> night</c><00:06:11.120><c> would</c><00:06:11.360><c> have</c>

00:06:11.510 --> 00:06:11.520 align:start position:0%
in this case each night would have
 

00:06:11.520 --> 00:06:13.909 align:start position:0%
in this case each night would have
different<00:06:11.919><c> data</c><00:06:12.160><c> for</c><00:06:12.960><c> it's</c><00:06:13.280><c> best</c><00:06:13.520><c> to</c><00:06:13.600><c> define</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
different data for it's best to define
 

00:06:13.919 --> 00:06:16.070 align:start position:0%
different data for it's best to define
them<00:06:14.080><c> when</c><00:06:14.319><c> i</c><00:06:14.400><c> create</c><00:06:14.720><c> the</c><00:06:14.880><c> object</c><00:06:15.759><c> rather</c>

00:06:16.070 --> 00:06:16.080 align:start position:0%
them when i create the object rather
 

00:06:16.080 --> 00:06:18.469 align:start position:0%
them when i create the object rather
than<00:06:16.319><c> in</c><00:06:16.400><c> the</c><00:06:16.560><c> class</c><00:06:17.039><c> itself</c>

00:06:18.469 --> 00:06:18.479 align:start position:0%
than in the class itself
 

00:06:18.479 --> 00:06:20.629 align:start position:0%
than in the class itself
for<00:06:18.720><c> instance</c><00:06:19.600><c> each</c><00:06:19.840><c> of</c><00:06:19.919><c> the</c><00:06:20.080><c> four</c><00:06:20.319><c> knights</c>

00:06:20.629 --> 00:06:20.639 align:start position:0%
for instance each of the four knights
 

00:06:20.639 --> 00:06:22.870 align:start position:0%
for instance each of the four knights
that<00:06:20.800><c> begin</c><00:06:21.280><c> in</c><00:06:21.360><c> a</c><00:06:21.440><c> game</c><00:06:21.680><c> of</c><00:06:21.840><c> chess</c><00:06:22.400><c> start</c><00:06:22.720><c> on</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
that begin in a game of chess start on
 

00:06:22.880 --> 00:06:25.350 align:start position:0%
that begin in a game of chess start on
different<00:06:23.199><c> squares</c><00:06:23.600><c> than</c><00:06:23.759><c> one</c><00:06:24.000><c> another</c>

00:06:25.350 --> 00:06:25.360 align:start position:0%
different squares than one another
 

00:06:25.360 --> 00:06:27.350 align:start position:0%
different squares than one another
initializing<00:06:26.080><c> the</c><00:06:26.240><c> position</c><00:06:26.639><c> variable</c><00:06:27.280><c> in</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
initializing the position variable in
 

00:06:27.360 --> 00:06:29.270 align:start position:0%
initializing the position variable in
the<00:06:27.520><c> night</c><00:06:27.759><c> class</c><00:06:28.479><c> would</c><00:06:28.720><c> imply</c><00:06:29.039><c> that</c><00:06:29.199><c> you</c>

00:06:29.270 --> 00:06:29.280 align:start position:0%
the night class would imply that you
 

00:06:29.280 --> 00:06:31.029 align:start position:0%
the night class would imply that you
want<00:06:29.600><c> each</c><00:06:29.840><c> knight</c><00:06:30.080><c> object</c><00:06:30.479><c> created</c><00:06:30.880><c> from</c>

00:06:31.029 --> 00:06:31.039 align:start position:0%
want each knight object created from
 

00:06:31.039 --> 00:06:32.870 align:start position:0%
want each knight object created from
this<00:06:31.280><c> class</c><00:06:31.759><c> to</c><00:06:31.919><c> begin</c><00:06:32.319><c> with</c><00:06:32.479><c> the</c><00:06:32.639><c> same</c>

00:06:32.870 --> 00:06:32.880 align:start position:0%
this class to begin with the same
 

00:06:32.880 --> 00:06:35.350 align:start position:0%
this class to begin with the same
position<00:06:33.680><c> which</c><00:06:33.919><c> you</c><00:06:34.000><c> do</c><00:06:34.160><c> not</c>

00:06:35.350 --> 00:06:35.360 align:start position:0%
position which you do not
 

00:06:35.360 --> 00:06:36.469 align:start position:0%
position which you do not
however

00:06:36.469 --> 00:06:36.479 align:start position:0%
however
 

00:06:36.479 --> 00:06:38.150 align:start position:0%
however
each<00:06:36.720><c> of</c><00:06:36.880><c> the</c><00:06:37.039><c> knights</c><00:06:37.360><c> would</c><00:06:37.600><c> behave</c><00:06:38.000><c> the</c>

00:06:38.150 --> 00:06:38.160 align:start position:0%
each of the knights would behave the
 

00:06:38.160 --> 00:06:40.070 align:start position:0%
each of the knights would behave the
same<00:06:38.639><c> in</c><00:06:38.800><c> terms</c><00:06:39.120><c> of</c><00:06:39.199><c> the</c><00:06:39.360><c> squares</c><00:06:39.759><c> it</c><00:06:39.840><c> could</c>

00:06:40.070 --> 00:06:40.080 align:start position:0%
same in terms of the squares it could
 

00:06:40.080 --> 00:06:42.469 align:start position:0%
same in terms of the squares it could
move<00:06:40.319><c> to</c><00:06:40.639><c> based</c><00:06:40.960><c> on</c><00:06:41.039><c> their</c><00:06:41.280><c> position</c>

00:06:42.469 --> 00:06:42.479 align:start position:0%
move to based on their position
 

00:06:42.479 --> 00:06:44.390 align:start position:0%
move to based on their position
and<00:06:42.720><c> thus</c><00:06:43.039><c> it</c><00:06:43.199><c> is</c><00:06:43.360><c> best</c><00:06:43.600><c> to</c><00:06:43.759><c> define</c><00:06:44.080><c> a</c><00:06:44.160><c> move</c>

00:06:44.390 --> 00:06:44.400 align:start position:0%
and thus it is best to define a move
 

00:06:44.400 --> 00:06:46.550 align:start position:0%
and thus it is best to define a move
function<00:06:45.120><c> in</c><00:06:45.199><c> the</c><00:06:45.440><c> class</c><00:06:46.160><c> rather</c><00:06:46.400><c> than</c>

00:06:46.550 --> 00:06:46.560 align:start position:0%
function in the class rather than
 

00:06:46.560 --> 00:06:48.390 align:start position:0%
function in the class rather than
repeating<00:06:46.960><c> the</c><00:06:47.120><c> same</c><00:06:47.360><c> function</c><00:06:47.680><c> definition</c>

00:06:48.390 --> 00:06:48.400 align:start position:0%
repeating the same function definition
 

00:06:48.400 --> 00:06:52.070 align:start position:0%
repeating the same function definition
in<00:06:48.639><c> each</c><00:06:48.880><c> object</c><00:06:49.360><c> that</c><00:06:49.599><c> i</c><00:06:49.759><c> create</c>

00:06:52.070 --> 00:06:52.080 align:start position:0%
in each object that i create
 

00:06:52.080 --> 00:06:54.230 align:start position:0%
in each object that i create
when<00:06:52.400><c> creating</c><00:06:52.960><c> a</c><00:06:53.120><c> night</c><00:06:53.440><c> object</c><00:06:54.000><c> you</c>

00:06:54.230 --> 00:06:54.240 align:start position:0%
when creating a night object you
 

00:06:54.240 --> 00:06:56.309 align:start position:0%
when creating a night object you
initialize<00:06:54.800><c> its</c><00:06:55.039><c> attributes</c><00:06:55.840><c> or</c><00:06:56.160><c> its</c>

00:06:56.309 --> 00:06:56.319 align:start position:0%
initialize its attributes or its
 

00:06:56.319 --> 00:06:57.510 align:start position:0%
initialize its attributes or its
variables

00:06:57.510 --> 00:06:57.520 align:start position:0%
variables
 

00:06:57.520 --> 00:07:00.309 align:start position:0%
variables
and<00:06:57.759><c> its</c><00:06:57.919><c> methods</c><00:06:58.720><c> or</c><00:06:58.960><c> its</c><00:06:59.199><c> functions</c><00:07:00.160><c> to</c>

00:07:00.309 --> 00:07:00.319 align:start position:0%
and its methods or its functions to
 

00:07:00.319 --> 00:07:02.390 align:start position:0%
and its methods or its functions to
contain<00:07:00.800><c> information</c><00:07:01.440><c> specific</c><00:07:02.000><c> to</c><00:07:02.160><c> that</c>

00:07:02.390 --> 00:07:02.400 align:start position:0%
contain information specific to that
 

00:07:02.400 --> 00:07:03.589 align:start position:0%
contain information specific to that
night

00:07:03.589 --> 00:07:03.599 align:start position:0%
night
 

00:07:03.599 --> 00:07:05.830 align:start position:0%
night
whereas<00:07:04.080><c> the</c><00:07:04.240><c> night</c><00:07:04.560><c> class</c><00:07:05.039><c> represents</c><00:07:05.599><c> any</c>

00:07:05.830 --> 00:07:05.840 align:start position:0%
whereas the night class represents any
 

00:07:05.840 --> 00:07:07.110 align:start position:0%
whereas the night class represents any
given<00:07:06.240><c> night</c>

00:07:07.110 --> 00:07:07.120 align:start position:0%
given night
 

00:07:07.120 --> 00:07:09.749 align:start position:0%
given night
a<00:07:07.280><c> night</c><00:07:07.599><c> object</c><00:07:08.240><c> represents</c><00:07:08.880><c> one</c><00:07:09.120><c> night</c><00:07:09.599><c> in</c>

00:07:09.749 --> 00:07:09.759 align:start position:0%
a night object represents one night in
 

00:07:09.759 --> 00:07:11.350 align:start position:0%
a night object represents one night in
particular

00:07:11.350 --> 00:07:11.360 align:start position:0%
particular
 

00:07:11.360 --> 00:07:13.909 align:start position:0%
particular
essentially<00:07:12.400><c> object-oriented</c><00:07:13.360><c> programming</c>

00:07:13.909 --> 00:07:13.919 align:start position:0%
essentially object-oriented programming
 

00:07:13.919 --> 00:07:15.990 align:start position:0%
essentially object-oriented programming
is<00:07:14.080><c> the</c><00:07:14.240><c> best</c><00:07:14.560><c> tool</c><00:07:14.960><c> us</c><00:07:15.120><c> programmers</c><00:07:15.680><c> have</c>

00:07:15.990 --> 00:07:16.000 align:start position:0%
is the best tool us programmers have
 

00:07:16.000 --> 00:07:18.870 align:start position:0%
is the best tool us programmers have
right<00:07:16.240><c> now</c><00:07:16.639><c> to</c><00:07:16.800><c> create</c><00:07:17.199><c> complex</c><00:07:17.840><c> programs</c><00:07:18.639><c> by</c>

00:07:18.870 --> 00:07:18.880 align:start position:0%
right now to create complex programs by
 

00:07:18.880 --> 00:07:20.710 align:start position:0%
right now to create complex programs by
grouping<00:07:19.199><c> together</c><00:07:19.680><c> related</c><00:07:20.160><c> data</c><00:07:20.560><c> and</c>

00:07:20.710 --> 00:07:20.720 align:start position:0%
grouping together related data and
 

00:07:20.720 --> 00:07:21.909 align:start position:0%
grouping together related data and
functions

00:07:21.909 --> 00:07:21.919 align:start position:0%
functions
 

00:07:21.919 --> 00:07:23.909 align:start position:0%
functions
throughout<00:07:22.319><c> the</c><00:07:22.400><c> course</c><00:07:22.720><c> of</c><00:07:22.800><c> this</c><00:07:22.960><c> video</c><00:07:23.759><c> we</c>

00:07:23.909 --> 00:07:23.919 align:start position:0%
throughout the course of this video we
 

00:07:23.919 --> 00:07:25.749 align:start position:0%
throughout the course of this video we
are<00:07:24.080><c> going</c><00:07:24.240><c> to</c><00:07:24.319><c> be</c><00:07:24.479><c> getting</c><00:07:24.800><c> into</c><00:07:25.039><c> detail</c><00:07:25.520><c> into</c>

00:07:25.749 --> 00:07:25.759 align:start position:0%
are going to be getting into detail into
 

00:07:25.759 --> 00:07:27.670 align:start position:0%
are going to be getting into detail into
how<00:07:26.000><c> all</c><00:07:26.160><c> of</c><00:07:26.240><c> this</c><00:07:26.400><c> works</c><00:07:26.960><c> using</c><00:07:27.280><c> the</c><00:07:27.360><c> four</c>

00:07:27.670 --> 00:07:27.680 align:start position:0%
how all of this works using the four
 

00:07:27.680 --> 00:07:29.589 align:start position:0%
how all of this works using the four
main<00:07:27.919><c> principles</c><00:07:28.560><c> of</c><00:07:28.720><c> object-oriented</c>

00:07:29.589 --> 00:07:29.599 align:start position:0%
main principles of object-oriented
 

00:07:29.599 --> 00:07:33.110 align:start position:0%
main principles of object-oriented
programming<00:07:30.639><c> those</c><00:07:31.039><c> being</c><00:07:31.680><c> encapsulation</c>

00:07:33.110 --> 00:07:33.120 align:start position:0%
programming those being encapsulation
 

00:07:33.120 --> 00:07:34.469 align:start position:0%
programming those being encapsulation
abstraction

00:07:34.469 --> 00:07:34.479 align:start position:0%
abstraction
 

00:07:34.479 --> 00:07:38.550 align:start position:0%
abstraction
inheritance<00:07:35.599><c> and</c><00:07:35.759><c> polymorphism</c>

00:07:38.550 --> 00:07:38.560 align:start position:0%
inheritance and polymorphism
 

00:07:38.560 --> 00:07:40.550 align:start position:0%
inheritance and polymorphism
this<00:07:38.880><c> next</c><00:07:39.199><c> section</c><00:07:39.919><c> is</c><00:07:40.080><c> going</c><00:07:40.240><c> to</c><00:07:40.400><c> be</c>

00:07:40.550 --> 00:07:40.560 align:start position:0%
this next section is going to be
 

00:07:40.560 --> 00:07:42.469 align:start position:0%
this next section is going to be
focusing<00:07:41.039><c> on</c><00:07:41.199><c> the</c><00:07:41.360><c> first</c><00:07:41.680><c> of</c><00:07:41.759><c> the</c><00:07:41.919><c> four</c><00:07:42.240><c> main</c>

00:07:42.469 --> 00:07:42.479 align:start position:0%
focusing on the first of the four main
 

00:07:42.479 --> 00:07:44.390 align:start position:0%
focusing on the first of the four main
principles<00:07:43.280><c> of</c><00:07:43.440><c> object-oriented</c>

00:07:44.390 --> 00:07:44.400 align:start position:0%
principles of object-oriented
 

00:07:44.400 --> 00:07:45.510 align:start position:0%
principles of object-oriented
programming

00:07:45.510 --> 00:07:45.520 align:start position:0%
programming
 

00:07:45.520 --> 00:07:47.670 align:start position:0%
programming
encapsulation

00:07:47.670 --> 00:07:47.680 align:start position:0%
encapsulation
 

00:07:47.680 --> 00:07:50.629 align:start position:0%
encapsulation
encapsulation<00:07:48.639><c> refers</c><00:07:49.120><c> to</c><00:07:49.280><c> bundling</c><00:07:49.759><c> data</c>

00:07:50.629 --> 00:07:50.639 align:start position:0%
encapsulation refers to bundling data
 

00:07:50.639 --> 00:07:52.390 align:start position:0%
encapsulation refers to bundling data
along<00:07:50.879><c> with</c><00:07:51.120><c> methods</c><00:07:51.520><c> that</c><00:07:51.680><c> can</c><00:07:51.840><c> operate</c><00:07:52.319><c> on</c>

00:07:52.390 --> 00:07:52.400 align:start position:0%
along with methods that can operate on
 

00:07:52.400 --> 00:07:55.350 align:start position:0%
along with methods that can operate on
that<00:07:52.639><c> data</c><00:07:53.120><c> within</c><00:07:53.520><c> a</c><00:07:53.599><c> class</c>

00:07:55.350 --> 00:07:55.360 align:start position:0%
that data within a class
 

00:07:55.360 --> 00:07:57.670 align:start position:0%
that data within a class
essentially<00:07:56.319><c> it</c><00:07:56.560><c> is</c><00:07:56.639><c> the</c><00:07:56.800><c> idea</c><00:07:57.199><c> of</c><00:07:57.360><c> hiding</c>

00:07:57.670 --> 00:07:57.680 align:start position:0%
essentially it is the idea of hiding
 

00:07:57.680 --> 00:07:59.670 align:start position:0%
essentially it is the idea of hiding
data<00:07:58.000><c> within</c><00:07:58.319><c> a</c><00:07:58.400><c> class</c><00:07:59.039><c> that</c><00:07:59.280><c> anything</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
data within a class that anything
 

00:07:59.680 --> 00:08:01.749 align:start position:0%
data within a class that anything
outside<00:08:00.160><c> that</c><00:08:00.319><c> class</c><00:08:00.879><c> cannot</c><00:08:01.280><c> directly</c>

00:08:01.749 --> 00:08:01.759 align:start position:0%
outside that class cannot directly
 

00:08:01.759 --> 00:08:03.430 align:start position:0%
outside that class cannot directly
interact<00:08:02.160><c> with</c>

00:08:03.430 --> 00:08:03.440 align:start position:0%
interact with
 

00:08:03.440 --> 00:08:05.110 align:start position:0%
interact with
that<00:08:03.680><c> is</c><00:08:03.759><c> not</c><00:08:03.919><c> to</c><00:08:04.080><c> say</c><00:08:04.319><c> that</c><00:08:04.479><c> they</c><00:08:04.560><c> are</c><00:08:04.720><c> unable</c>

00:08:05.110 --> 00:08:05.120 align:start position:0%
that is not to say that they are unable
 

00:08:05.120 --> 00:08:06.710 align:start position:0%
that is not to say that they are unable
to<00:08:05.280><c> interact</c><00:08:05.680><c> with</c><00:08:05.919><c> the</c><00:08:06.000><c> separate</c><00:08:06.319><c> object's</c>

00:08:06.710 --> 00:08:06.720 align:start position:0%
to interact with the separate object's
 

00:08:06.720 --> 00:08:08.869 align:start position:0%
to interact with the separate object's
attributes<00:08:07.280><c> at</c><00:08:07.440><c> all</c><00:08:07.599><c> however</c>

00:08:08.869 --> 00:08:08.879 align:start position:0%
attributes at all however
 

00:08:08.879 --> 00:08:09.990 align:start position:0%
attributes at all however
instead

00:08:09.990 --> 00:08:10.000 align:start position:0%
instead
 

00:08:10.000 --> 00:08:11.909 align:start position:0%
instead
members<00:08:10.479><c> of</c><00:08:10.639><c> other</c><00:08:10.879><c> classes</c><00:08:11.440><c> looking</c><00:08:11.680><c> to</c>

00:08:11.909 --> 00:08:11.919 align:start position:0%
members of other classes looking to
 

00:08:11.919 --> 00:08:13.510 align:start position:0%
members of other classes looking to
interact<00:08:12.400><c> with</c><00:08:12.560><c> the</c><00:08:12.720><c> attributes</c><00:08:13.199><c> of</c><00:08:13.360><c> an</c>

00:08:13.510 --> 00:08:13.520 align:start position:0%
interact with the attributes of an
 

00:08:13.520 --> 00:08:16.469 align:start position:0%
interact with the attributes of an
object<00:08:14.400><c> should</c><00:08:14.639><c> only</c><00:08:14.960><c> be</c><00:08:15.199><c> able</c><00:08:15.360><c> to</c><00:08:15.520><c> do</c><00:08:15.680><c> so</c>

00:08:16.469 --> 00:08:16.479 align:start position:0%
object should only be able to do so
 

00:08:16.479 --> 00:08:19.029 align:start position:0%
object should only be able to do so
through<00:08:16.800><c> that</c><00:08:17.039><c> class's</c><00:08:17.599><c> methods</c>

00:08:19.029 --> 00:08:19.039 align:start position:0%
through that class's methods
 

00:08:19.039 --> 00:08:20.309 align:start position:0%
through that class's methods
in<00:08:19.199><c> practice</c>

00:08:20.309 --> 00:08:20.319 align:start position:0%
in practice
 

00:08:20.319 --> 00:08:22.550 align:start position:0%
in practice
one<00:08:20.560><c> way</c><00:08:20.800><c> this</c><00:08:21.120><c> tends</c><00:08:21.360><c> to</c><00:08:21.520><c> work</c><00:08:22.160><c> is</c><00:08:22.319><c> by</c>

00:08:22.550 --> 00:08:22.560 align:start position:0%
one way this tends to work is by
 

00:08:22.560 --> 00:08:25.510 align:start position:0%
one way this tends to work is by
creating<00:08:23.199><c> getting</c><00:08:23.759><c> and</c><00:08:24.000><c> setting</c><00:08:24.319><c> methods</c>

00:08:25.510 --> 00:08:25.520 align:start position:0%
creating getting and setting methods
 

00:08:25.520 --> 00:08:27.510 align:start position:0%
creating getting and setting methods
these<00:08:25.840><c> methods</c><00:08:26.400><c> act</c><00:08:26.639><c> to</c><00:08:26.879><c> either</c><00:08:27.199><c> get</c>

00:08:27.510 --> 00:08:27.520 align:start position:0%
these methods act to either get
 

00:08:27.520 --> 00:08:29.830 align:start position:0%
these methods act to either get
information<00:08:28.000><c> from</c><00:08:28.240><c> an</c><00:08:28.400><c> object</c><00:08:29.280><c> or</c><00:08:29.520><c> set</c>

00:08:29.830 --> 00:08:29.840 align:start position:0%
information from an object or set
 

00:08:29.840 --> 00:08:32.230 align:start position:0%
information from an object or set
attributes<00:08:30.319><c> to</c><00:08:30.479><c> different</c><00:08:30.720><c> values</c>

00:08:32.230 --> 00:08:32.240 align:start position:0%
attributes to different values
 

00:08:32.240 --> 00:08:33.509 align:start position:0%
attributes to different values
for<00:08:32.479><c> instance</c>

00:08:33.509 --> 00:08:33.519 align:start position:0%
for instance
 

00:08:33.519 --> 00:08:35.509 align:start position:0%
for instance
think<00:08:33.760><c> back</c><00:08:34.000><c> to</c><00:08:34.080><c> the</c><00:08:34.240><c> chess</c><00:08:34.560><c> example</c><00:08:35.200><c> from</c><00:08:35.360><c> the</c>

00:08:35.509 --> 00:08:35.519 align:start position:0%
think back to the chess example from the
 

00:08:35.519 --> 00:08:37.190 align:start position:0%
think back to the chess example from the
previous<00:08:36.000><c> section</c>

00:08:37.190 --> 00:08:37.200 align:start position:0%
previous section
 

00:08:37.200 --> 00:08:39.509 align:start position:0%
previous section
if<00:08:37.440><c> i</c><00:08:37.519><c> was</c><00:08:37.680><c> moving</c><00:08:38.000><c> one</c><00:08:38.240><c> piece</c><00:08:38.959><c> and</c><00:08:39.120><c> i</c><00:08:39.279><c> wanted</c>

00:08:39.509 --> 00:08:39.519 align:start position:0%
if i was moving one piece and i wanted
 

00:08:39.519 --> 00:08:40.949 align:start position:0%
if i was moving one piece and i wanted
to<00:08:39.680><c> determine</c><00:08:40.080><c> whether</c><00:08:40.399><c> it</c><00:08:40.479><c> was</c><00:08:40.640><c> able</c><00:08:40.800><c> to</c>

00:08:40.949 --> 00:08:40.959 align:start position:0%
to determine whether it was able to
 

00:08:40.959 --> 00:08:42.709 align:start position:0%
to determine whether it was able to
capture<00:08:41.440><c> another</c><00:08:41.760><c> piece</c>

00:08:42.709 --> 00:08:42.719 align:start position:0%
capture another piece
 

00:08:42.719 --> 00:08:45.030 align:start position:0%
capture another piece
i<00:08:42.880><c> would</c><00:08:43.120><c> need</c><00:08:43.279><c> to</c><00:08:43.360><c> define</c><00:08:43.839><c> a</c><00:08:44.000><c> dot</c><00:08:44.320><c> get</c><00:08:44.560><c> method</c>

00:08:45.030 --> 00:08:45.040 align:start position:0%
i would need to define a dot get method
 

00:08:45.040 --> 00:08:47.430 align:start position:0%
i would need to define a dot get method
associated<00:08:45.680><c> with</c><00:08:45.920><c> each</c><00:08:46.160><c> piece</c><00:08:46.880><c> that</c><00:08:47.040><c> returns</c>

00:08:47.430 --> 00:08:47.440 align:start position:0%
associated with each piece that returns
 

00:08:47.440 --> 00:08:50.150 align:start position:0%
associated with each piece that returns
the<00:08:47.600><c> piece's</c><00:08:48.000><c> color</c><00:08:48.720><c> in</c><00:08:48.880><c> this</c><00:08:49.120><c> case</c><00:08:49.600><c> piece</c><00:08:49.920><c> dot</c>

00:08:50.150 --> 00:08:50.160 align:start position:0%
the piece's color in this case piece dot
 

00:08:50.160 --> 00:08:51.670 align:start position:0%
the piece's color in this case piece dot
get<00:08:50.399><c> color</c>

00:08:51.670 --> 00:08:51.680 align:start position:0%
get color
 

00:08:51.680 --> 00:08:52.790 align:start position:0%
get color
this<00:08:51.920><c> way</c>

00:08:52.790 --> 00:08:52.800 align:start position:0%
this way
 

00:08:52.800 --> 00:08:54.630 align:start position:0%
this way
i<00:08:52.959><c> could</c><00:08:53.120><c> check</c><00:08:53.360><c> the</c><00:08:53.519><c> color</c><00:08:53.839><c> of</c><00:08:54.000><c> any</c><00:08:54.240><c> piece</c>

00:08:54.630 --> 00:08:54.640 align:start position:0%
i could check the color of any piece
 

00:08:54.640 --> 00:08:57.030 align:start position:0%
i could check the color of any piece
from<00:08:54.959><c> anywhere</c><00:08:55.360><c> in</c><00:08:55.440><c> my</c><00:08:55.680><c> code</c><00:08:56.399><c> without</c><00:08:56.800><c> having</c>

00:08:57.030 --> 00:08:57.040 align:start position:0%
from anywhere in my code without having
 

00:08:57.040 --> 00:08:59.110 align:start position:0%
from anywhere in my code without having
to<00:08:57.200><c> access</c><00:08:57.680><c> the</c><00:08:57.920><c> internal</c><00:08:58.320><c> attributes</c><00:08:58.959><c> of</c>

00:08:59.110 --> 00:08:59.120 align:start position:0%
to access the internal attributes of
 

00:08:59.120 --> 00:09:00.710 align:start position:0%
to access the internal attributes of
said<00:08:59.360><c> pieces</c>

00:09:00.710 --> 00:09:00.720 align:start position:0%
said pieces
 

00:09:00.720 --> 00:09:02.550 align:start position:0%
said pieces
this<00:09:01.040><c> allows</c><00:09:01.519><c> us</c><00:09:01.680><c> to</c><00:09:01.839><c> retrieve</c><00:09:02.320><c> the</c>

00:09:02.550 --> 00:09:02.560 align:start position:0%
this allows us to retrieve the
 

00:09:02.560 --> 00:09:05.990 align:start position:0%
this allows us to retrieve the
information<00:09:03.600><c> from</c><00:09:03.839><c> where</c><00:09:04.240><c> it</c><00:09:04.399><c> is</c><00:09:04.560><c> defined</c>

00:09:05.990 --> 00:09:06.000 align:start position:0%
information from where it is defined
 

00:09:06.000 --> 00:09:07.269 align:start position:0%
information from where it is defined
additionally

00:09:07.269 --> 00:09:07.279 align:start position:0%
additionally
 

00:09:07.279 --> 00:09:09.670 align:start position:0%
additionally
this<00:09:07.600><c> makes</c><00:09:07.920><c> it</c><00:09:08.160><c> easiest</c><00:09:08.720><c> to</c><00:09:08.959><c> keep</c><00:09:09.200><c> track</c><00:09:09.440><c> of</c>

00:09:09.670 --> 00:09:09.680 align:start position:0%
this makes it easiest to keep track of
 

00:09:09.680 --> 00:09:13.110 align:start position:0%
this makes it easiest to keep track of
attributes<00:09:10.560><c> that</c><00:09:10.800><c> depend</c><00:09:11.279><c> on</c><00:09:11.519><c> one</c><00:09:11.760><c> another</c>

00:09:13.110 --> 00:09:13.120 align:start position:0%
attributes that depend on one another
 

00:09:13.120 --> 00:09:14.470 align:start position:0%
attributes that depend on one another
for<00:09:13.360><c> example</c>

00:09:14.470 --> 00:09:14.480 align:start position:0%
for example
 

00:09:14.480 --> 00:09:16.710 align:start position:0%
for example
if<00:09:14.640><c> i</c><00:09:14.720><c> was</c><00:09:14.959><c> programming</c><00:09:15.519><c> a</c><00:09:15.680><c> game</c>

00:09:16.710 --> 00:09:16.720 align:start position:0%
if i was programming a game
 

00:09:16.720 --> 00:09:18.790 align:start position:0%
if i was programming a game
i<00:09:16.959><c> may</c><00:09:17.200><c> have</c><00:09:17.440><c> two</c><00:09:17.680><c> different</c><00:09:18.080><c> attributes</c><00:09:18.640><c> for</c>

00:09:18.790 --> 00:09:18.800 align:start position:0%
i may have two different attributes for
 

00:09:18.800 --> 00:09:20.310 align:start position:0%
i may have two different attributes for
the<00:09:18.959><c> player's</c><00:09:19.360><c> health</c>

00:09:20.310 --> 00:09:20.320 align:start position:0%
the player's health
 

00:09:20.320 --> 00:09:23.750 align:start position:0%
the player's health
maxhealth<00:09:21.519><c> and</c><00:09:21.760><c> current</c><00:09:22.080><c> health</c>

00:09:23.750 --> 00:09:23.760 align:start position:0%
maxhealth and current health
 

00:09:23.760 --> 00:09:25.750 align:start position:0%
maxhealth and current health
when<00:09:23.920><c> the</c><00:09:24.160><c> character</c><00:09:24.560><c> levels</c><00:09:24.959><c> up</c>

00:09:25.750 --> 00:09:25.760 align:start position:0%
when the character levels up
 

00:09:25.760 --> 00:09:27.910 align:start position:0%
when the character levels up
i<00:09:26.000><c> may</c><00:09:26.240><c> have</c><00:09:26.399><c> their</c><00:09:26.640><c> max</c><00:09:26.959><c> health</c><00:09:27.279><c> increase</c><00:09:27.760><c> as</c>

00:09:27.910 --> 00:09:27.920 align:start position:0%
i may have their max health increase as
 

00:09:27.920 --> 00:09:29.670 align:start position:0%
i may have their max health increase as
well

00:09:29.670 --> 00:09:29.680 align:start position:0%
well
 

00:09:29.680 --> 00:09:31.110 align:start position:0%
well
when<00:09:29.839><c> this</c><00:09:30.080><c> happens</c>

00:09:31.110 --> 00:09:31.120 align:start position:0%
when this happens
 

00:09:31.120 --> 00:09:32.870 align:start position:0%
when this happens
i<00:09:31.279><c> would</c><00:09:31.440><c> want</c><00:09:31.680><c> the</c><00:09:31.839><c> current</c><00:09:32.160><c> health</c><00:09:32.560><c> to</c><00:09:32.720><c> be</c>

00:09:32.870 --> 00:09:32.880 align:start position:0%
i would want the current health to be
 

00:09:32.880 --> 00:09:35.190 align:start position:0%
i would want the current health to be
set<00:09:33.120><c> to</c><00:09:33.200><c> the</c><00:09:33.360><c> maximum</c><00:09:33.839><c> health</c>

00:09:35.190 --> 00:09:35.200 align:start position:0%
set to the maximum health
 

00:09:35.200 --> 00:09:36.949 align:start position:0%
set to the maximum health
instead<00:09:35.519><c> of</c><00:09:35.680><c> changing</c><00:09:36.080><c> both</c><00:09:36.320><c> of</c><00:09:36.399><c> these</c><00:09:36.640><c> values</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
instead of changing both of these values
 

00:09:36.959 --> 00:09:38.230 align:start position:0%
instead of changing both of these values
directly

00:09:38.230 --> 00:09:38.240 align:start position:0%
directly
 

00:09:38.240 --> 00:09:40.949 align:start position:0%
directly
i<00:09:38.399><c> can</c><00:09:38.560><c> define</c><00:09:38.959><c> the</c><00:09:39.200><c> set</c><00:09:39.440><c> max</c><00:09:39.760><c> health</c><00:09:40.080><c> method</c>

00:09:40.949 --> 00:09:40.959 align:start position:0%
i can define the set max health method
 

00:09:40.959 --> 00:09:43.269 align:start position:0%
i can define the set max health method
such<00:09:41.200><c> that</c><00:09:41.360><c> the</c><00:09:41.519><c> current</c><00:09:41.839><c> health</c><00:09:42.480><c> is</c><00:09:42.720><c> also</c><00:09:43.040><c> set</c>

00:09:43.269 --> 00:09:43.279 align:start position:0%
such that the current health is also set
 

00:09:43.279 --> 00:09:45.350 align:start position:0%
such that the current health is also set
to<00:09:43.360><c> the</c><00:09:43.519><c> maximum</c><00:09:44.000><c> health</c><00:09:44.480><c> once</c><00:09:44.720><c> the</c><00:09:44.880><c> maximum</c>

00:09:45.350 --> 00:09:45.360 align:start position:0%
to the maximum health once the maximum
 

00:09:45.360 --> 00:09:47.430 align:start position:0%
to the maximum health once the maximum
health<00:09:45.680><c> has</c><00:09:45.839><c> increased</c>

00:09:47.430 --> 00:09:47.440 align:start position:0%
health has increased
 

00:09:47.440 --> 00:09:48.790 align:start position:0%
health has increased
furthermore

00:09:48.790 --> 00:09:48.800 align:start position:0%
furthermore
 

00:09:48.800 --> 00:09:51.030 align:start position:0%
furthermore
these<00:09:49.120><c> setting</c><00:09:49.440><c> methods</c><00:09:50.000><c> allow</c><00:09:50.320><c> values</c><00:09:50.720><c> to</c><00:09:50.880><c> be</c>

00:09:51.030 --> 00:09:51.040 align:start position:0%
these setting methods allow values to be
 

00:09:51.040 --> 00:09:52.470 align:start position:0%
these setting methods allow values to be
validated

00:09:52.470 --> 00:09:52.480 align:start position:0%
validated
 

00:09:52.480 --> 00:09:53.750 align:start position:0%
validated
for<00:09:52.720><c> instance</c>

00:09:53.750 --> 00:09:53.760 align:start position:0%
for instance
 

00:09:53.760 --> 00:09:56.070 align:start position:0%
for instance
if<00:09:54.000><c> current</c><00:09:54.320><c> health</c><00:09:54.800><c> is</c><00:09:54.959><c> not</c><00:09:55.200><c> able</c><00:09:55.440><c> to</c><00:09:55.600><c> exceed</c>

00:09:56.070 --> 00:09:56.080 align:start position:0%
if current health is not able to exceed
 

00:09:56.080 --> 00:09:57.750 align:start position:0%
if current health is not able to exceed
maximum<00:09:56.640><c> health</c>

00:09:57.750 --> 00:09:57.760 align:start position:0%
maximum health
 

00:09:57.760 --> 00:09:59.670 align:start position:0%
maximum health
then<00:09:58.000><c> i</c><00:09:58.080><c> would</c><00:09:58.240><c> have</c><00:09:58.480><c> the</c><00:09:58.640><c> set</c><00:09:58.959><c> current</c><00:09:59.360><c> health</c>

00:09:59.670 --> 00:09:59.680 align:start position:0%
then i would have the set current health
 

00:09:59.680 --> 00:10:02.069 align:start position:0%
then i would have the set current health
method<00:10:00.399><c> check</c><00:10:00.640><c> if</c><00:10:00.880><c> current</c><00:10:01.279><c> health</c><00:10:01.680><c> would</c><00:10:01.839><c> be</c>

00:10:02.069 --> 00:10:02.079 align:start position:0%
method check if current health would be
 

00:10:02.079 --> 00:10:04.550 align:start position:0%
method check if current health would be
greater<00:10:02.399><c> to</c><00:10:02.560><c> maximum</c><00:10:03.040><c> health</c><00:10:03.760><c> before</c><00:10:04.240><c> making</c>

00:10:04.550 --> 00:10:04.560 align:start position:0%
greater to maximum health before making
 

00:10:04.560 --> 00:10:07.509 align:start position:0%
greater to maximum health before making
the<00:10:04.720><c> change</c>

00:10:07.509 --> 00:10:07.519 align:start position:0%
 
 

00:10:07.519 --> 00:10:10.069 align:start position:0%
 
finally<00:10:08.480><c> you</c><00:10:08.640><c> may</c><00:10:08.880><c> want</c><00:10:09.120><c> some</c><00:10:09.360><c> values</c><00:10:09.760><c> to</c><00:10:09.839><c> be</c>

00:10:10.069 --> 00:10:10.079 align:start position:0%
finally you may want some values to be
 

00:10:10.079 --> 00:10:12.550 align:start position:0%
finally you may want some values to be
read<00:10:10.480><c> only</c><00:10:10.880><c> from</c><00:10:11.120><c> outside</c><00:10:11.519><c> a</c><00:10:11.600><c> class</c>

00:10:12.550 --> 00:10:12.560 align:start position:0%
read only from outside a class
 

00:10:12.560 --> 00:10:13.990 align:start position:0%
read only from outside a class
which<00:10:12.720><c> means</c><00:10:12.959><c> you</c><00:10:13.120><c> would</c><00:10:13.279><c> only</c><00:10:13.440><c> define</c><00:10:13.839><c> a</c>

00:10:13.990 --> 00:10:14.000 align:start position:0%
which means you would only define a
 

00:10:14.000 --> 00:10:17.670 align:start position:0%
which means you would only define a
getter<00:10:14.320><c> method</c><00:10:15.120><c> and</c><00:10:15.440><c> not</c><00:10:15.839><c> a</c><00:10:16.000><c> center</c><00:10:16.320><c> method</c>

00:10:17.670 --> 00:10:17.680 align:start position:0%
getter method and not a center method
 

00:10:17.680 --> 00:10:19.590 align:start position:0%
getter method and not a center method
for<00:10:18.000><c> another</c><00:10:18.399><c> example</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
for another example
 

00:10:19.600 --> 00:10:21.910 align:start position:0%
for another example
let's<00:10:19.920><c> look</c><00:10:20.240><c> back</c><00:10:20.480><c> at</c><00:10:20.640><c> chess</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
let's look back at chess
 

00:10:21.920 --> 00:10:24.389 align:start position:0%
let's look back at chess
when<00:10:22.160><c> dealing</c><00:10:22.480><c> with</c><00:10:22.640><c> a</c><00:10:22.720><c> piece's</c><00:10:23.200><c> position</c>

00:10:24.389 --> 00:10:24.399 align:start position:0%
when dealing with a piece's position
 

00:10:24.399 --> 00:10:26.470 align:start position:0%
when dealing with a piece's position
you<00:10:24.560><c> would</c><00:10:24.720><c> want</c><00:10:24.880><c> to</c><00:10:25.040><c> keep</c><00:10:25.279><c> track</c><00:10:25.519><c> of</c><00:10:25.680><c> its</c><00:10:25.839><c> rank</c>

00:10:26.470 --> 00:10:26.480 align:start position:0%
you would want to keep track of its rank
 

00:10:26.480 --> 00:10:27.829 align:start position:0%
you would want to keep track of its rank
or<00:10:26.720><c> its</c><00:10:26.880><c> row</c>

00:10:27.829 --> 00:10:27.839 align:start position:0%
or its row
 

00:10:27.839 --> 00:10:30.949 align:start position:0%
or its row
and<00:10:28.000><c> its</c><00:10:28.320><c> file</c><00:10:29.040><c> or</c><00:10:29.279><c> its</c><00:10:29.519><c> column</c>

00:10:30.949 --> 00:10:30.959 align:start position:0%
and its file or its column
 

00:10:30.959 --> 00:10:32.949 align:start position:0%
and its file or its column
when<00:10:31.120><c> the</c><00:10:31.279><c> piece</c><00:10:31.600><c> moves</c><00:10:32.320><c> you</c><00:10:32.480><c> may</c><00:10:32.640><c> think</c><00:10:32.880><c> it</c>

00:10:32.949 --> 00:10:32.959 align:start position:0%
when the piece moves you may think it
 

00:10:32.959 --> 00:10:35.590 align:start position:0%
when the piece moves you may think it
would<00:10:33.120><c> be</c><00:10:33.279><c> okay</c><00:10:33.600><c> to</c><00:10:33.760><c> just</c><00:10:34.000><c> set</c><00:10:34.399><c> piece.rank</c><00:10:35.440><c> and</c>

00:10:35.590 --> 00:10:35.600 align:start position:0%
would be okay to just set piece.rank and
 

00:10:35.600 --> 00:10:38.150 align:start position:0%
would be okay to just set piece.rank and
piece.file<00:10:36.399><c> to</c><00:10:36.560><c> new</c><00:10:36.800><c> values</c>

00:10:38.150 --> 00:10:38.160 align:start position:0%
piece.file to new values
 

00:10:38.160 --> 00:10:39.350 align:start position:0%
piece.file to new values
however

00:10:39.350 --> 00:10:39.360 align:start position:0%
however
 

00:10:39.360 --> 00:10:41.110 align:start position:0%
however
as<00:10:39.600><c> discussed</c><00:10:40.079><c> above</c>

00:10:41.110 --> 00:10:41.120 align:start position:0%
as discussed above
 

00:10:41.120 --> 00:10:44.389 align:start position:0%
as discussed above
this<00:10:41.360><c> is</c><00:10:41.519><c> not</c><00:10:41.680><c> the</c><00:10:41.839><c> best</c><00:10:42.160><c> way</c><00:10:42.399><c> to</c><00:10:42.560><c> handle</c><00:10:42.880><c> it</c>

00:10:44.389 --> 00:10:44.399 align:start position:0%
this is not the best way to handle it
 

00:10:44.399 --> 00:10:46.470 align:start position:0%
this is not the best way to handle it
it<00:10:44.480><c> would</c><00:10:44.640><c> be</c><00:10:44.800><c> better</c><00:10:45.120><c> to</c><00:10:45.200><c> define</c><00:10:45.600><c> a</c><00:10:45.760><c> ps.move</c>

00:10:46.470 --> 00:10:46.480 align:start position:0%
it would be better to define a ps.move
 

00:10:46.480 --> 00:10:48.870 align:start position:0%
it would be better to define a ps.move
function<00:10:47.360><c> that</c><00:10:47.600><c> takes</c><00:10:47.920><c> the</c><00:10:48.079><c> intended</c><00:10:48.640><c> new</c>

00:10:48.870 --> 00:10:48.880 align:start position:0%
function that takes the intended new
 

00:10:48.880 --> 00:10:51.269 align:start position:0%
function that takes the intended new
position<00:10:49.760><c> and</c><00:10:50.000><c> checks</c><00:10:50.240><c> if</c><00:10:50.399><c> that</c><00:10:50.560><c> is</c><00:10:50.720><c> indeed</c><00:10:51.120><c> a</c>

00:10:51.269 --> 00:10:51.279 align:start position:0%
position and checks if that is indeed a
 

00:10:51.279 --> 00:10:52.710 align:start position:0%
position and checks if that is indeed a
valid<00:10:51.600><c> move</c>

00:10:52.710 --> 00:10:52.720 align:start position:0%
valid move
 

00:10:52.720 --> 00:10:54.870 align:start position:0%
valid move
the<00:10:52.959><c> piece</c><00:10:53.200><c> would</c><00:10:53.360><c> not</c><00:10:53.600><c> be</c><00:10:53.760><c> able</c><00:10:53.920><c> to</c><00:10:54.160><c> move</c><00:10:54.480><c> if</c>

00:10:54.870 --> 00:10:54.880 align:start position:0%
the piece would not be able to move if
 

00:10:54.880 --> 00:10:57.670 align:start position:0%
the piece would not be able to move if
say<00:10:55.279><c> the</c><00:10:55.440><c> new</c><00:10:55.680><c> location</c><00:10:56.160><c> is</c><00:10:56.399><c> off</c><00:10:56.560><c> the</c><00:10:56.720><c> board</c>

00:10:57.670 --> 00:10:57.680 align:start position:0%
say the new location is off the board
 

00:10:57.680 --> 00:10:59.509 align:start position:0%
say the new location is off the board
a<00:10:57.839><c> piece</c><00:10:58.079><c> of</c><00:10:58.240><c> the</c><00:10:58.320><c> same</c><00:10:58.560><c> color</c><00:10:58.880><c> is</c><00:10:59.040><c> already</c><00:10:59.360><c> on</c>

00:10:59.509 --> 00:10:59.519 align:start position:0%
a piece of the same color is already on
 

00:10:59.519 --> 00:11:00.790 align:start position:0%
a piece of the same color is already on
that<00:10:59.680><c> square</c>

00:11:00.790 --> 00:11:00.800 align:start position:0%
that square
 

00:11:00.800 --> 00:11:02.710 align:start position:0%
that square
or<00:11:01.040><c> making</c><00:11:01.360><c> such</c><00:11:01.600><c> a</c><00:11:01.680><c> move</c><00:11:02.079><c> would</c><00:11:02.240><c> put</c><00:11:02.399><c> the</c><00:11:02.480><c> king</c>

00:11:02.710 --> 00:11:02.720 align:start position:0%
or making such a move would put the king
 

00:11:02.720 --> 00:11:05.350 align:start position:0%
or making such a move would put the king
of<00:11:02.800><c> the</c><00:11:02.959><c> same</c><00:11:03.200><c> color</c><00:11:03.680><c> in</c><00:11:03.839><c> check</c>

00:11:05.350 --> 00:11:05.360 align:start position:0%
of the same color in check
 

00:11:05.360 --> 00:11:06.550 align:start position:0%
of the same color in check
additionally

00:11:06.550 --> 00:11:06.560 align:start position:0%
additionally
 

00:11:06.560 --> 00:11:08.150 align:start position:0%
additionally
other<00:11:06.800><c> methods</c><00:11:07.200><c> may</c><00:11:07.360><c> be</c><00:11:07.519><c> called</c><00:11:07.839><c> from</c><00:11:08.000><c> this</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
other methods may be called from this
 

00:11:08.160 --> 00:11:10.389 align:start position:0%
other methods may be called from this
move<00:11:08.399><c> method</c><00:11:09.040><c> for</c><00:11:09.279><c> instance</c><00:11:10.000><c> one</c><00:11:10.240><c> that</c>

00:11:10.389 --> 00:11:10.399 align:start position:0%
move method for instance one that
 

00:11:10.399 --> 00:11:12.230 align:start position:0%
move method for instance one that
captures<00:11:10.880><c> an</c><00:11:11.040><c> enemy</c><00:11:11.360><c> piece</c><00:11:11.760><c> if</c><00:11:11.920><c> it</c><00:11:12.000><c> was</c><00:11:12.160><c> on</c>

00:11:12.230 --> 00:11:12.240 align:start position:0%
captures an enemy piece if it was on
 

00:11:12.240 --> 00:11:13.350 align:start position:0%
captures an enemy piece if it was on
that<00:11:12.480><c> square</c>

00:11:13.350 --> 00:11:13.360 align:start position:0%
that square
 

00:11:13.360 --> 00:11:16.550 align:start position:0%
that square
or<00:11:13.600><c> one</c><00:11:13.760><c> that</c><00:11:13.920><c> puts</c><00:11:14.160><c> the</c><00:11:14.320><c> enemy</c><00:11:14.640><c> king</c><00:11:14.959><c> in</c><00:11:15.120><c> check</c>

00:11:16.550 --> 00:11:16.560 align:start position:0%
or one that puts the enemy king in check
 

00:11:16.560 --> 00:11:18.630 align:start position:0%
or one that puts the enemy king in check
were<00:11:16.720><c> the</c><00:11:16.880><c> pieces</c><00:11:17.360><c> attributes</c><00:11:18.079><c> just</c><00:11:18.320><c> to</c><00:11:18.480><c> be</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
were the pieces attributes just to be
 

00:11:18.640 --> 00:11:20.310 align:start position:0%
were the pieces attributes just to be
directly<00:11:19.200><c> changed</c>

00:11:20.310 --> 00:11:20.320 align:start position:0%
directly changed
 

00:11:20.320 --> 00:11:22.630 align:start position:0%
directly changed
you<00:11:20.480><c> could</c><00:11:20.720><c> end</c><00:11:20.880><c> up</c><00:11:21.040><c> in</c><00:11:21.120><c> a</c><00:11:21.200><c> strange</c><00:11:21.600><c> situation</c>

00:11:22.630 --> 00:11:22.640 align:start position:0%
you could end up in a strange situation
 

00:11:22.640 --> 00:11:24.790 align:start position:0%
you could end up in a strange situation
where<00:11:22.959><c> illegal</c><00:11:23.360><c> moves</c><00:11:23.680><c> are</c><00:11:23.839><c> played</c><00:11:24.640><c> and</c>

00:11:24.790 --> 00:11:24.800 align:start position:0%
where illegal moves are played and
 

00:11:24.800 --> 00:11:27.509 align:start position:0%
where illegal moves are played and
pieces<00:11:25.200><c> occupy</c><00:11:25.760><c> the</c><00:11:25.839><c> same</c><00:11:26.160><c> square</c>

00:11:27.509 --> 00:11:27.519 align:start position:0%
pieces occupy the same square
 

00:11:27.519 --> 00:11:28.710 align:start position:0%
pieces occupy the same square
essentially

00:11:28.710 --> 00:11:28.720 align:start position:0%
essentially
 

00:11:28.720 --> 00:11:31.590 align:start position:0%
essentially
getter<00:11:29.120><c> methods</c><00:11:29.680><c> allowing</c><00:11:30.160><c> validation</c><00:11:31.360><c> can</c>

00:11:31.590 --> 00:11:31.600 align:start position:0%
getter methods allowing validation can
 

00:11:31.600 --> 00:11:33.509 align:start position:0%
getter methods allowing validation can
be<00:11:31.839><c> very</c><00:11:32.240><c> useful</c>

00:11:33.509 --> 00:11:33.519 align:start position:0%
be very useful
 

00:11:33.519 --> 00:11:36.389 align:start position:0%
be very useful
encapsulation<00:11:34.800><c> is</c><00:11:34.959><c> useful</c><00:11:35.440><c> for</c><00:11:35.680><c> a</c><00:11:35.760><c> variety</c><00:11:36.240><c> of</c>

00:11:36.389 --> 00:11:36.399 align:start position:0%
encapsulation is useful for a variety of
 

00:11:36.399 --> 00:11:37.670 align:start position:0%
encapsulation is useful for a variety of
reasons

00:11:37.670 --> 00:11:37.680 align:start position:0%
reasons
 

00:11:37.680 --> 00:11:40.310 align:start position:0%
reasons
as<00:11:37.920><c> we</c><00:11:38.079><c> just</c><00:11:38.399><c> went</c><00:11:38.640><c> over</c><00:11:39.200><c> it</c><00:11:39.440><c> is</c><00:11:39.600><c> best</c><00:11:39.920><c> to</c><00:11:40.079><c> not</c>

00:11:40.310 --> 00:11:40.320 align:start position:0%
as we just went over it is best to not
 

00:11:40.320 --> 00:11:43.509 align:start position:0%
as we just went over it is best to not
allow<00:11:40.800><c> anything</c><00:11:41.279><c> external</c><00:11:42.240><c> to</c><00:11:42.480><c> directly</c><00:11:43.120><c> edit</c>

00:11:43.509 --> 00:11:43.519 align:start position:0%
allow anything external to directly edit
 

00:11:43.519 --> 00:11:45.590 align:start position:0%
allow anything external to directly edit
an<00:11:43.760><c> object's</c><00:11:44.240><c> attributes</c>

00:11:45.590 --> 00:11:45.600 align:start position:0%
an object's attributes
 

00:11:45.600 --> 00:11:48.150 align:start position:0%
an object's attributes
this<00:11:45.920><c> is</c><00:11:46.079><c> especially</c><00:11:46.640><c> true</c><00:11:47.360><c> when</c><00:11:47.600><c> working</c><00:11:47.920><c> on</c>

00:11:48.150 --> 00:11:48.160 align:start position:0%
this is especially true when working on
 

00:11:48.160 --> 00:11:51.030 align:start position:0%
this is especially true when working on
large<00:11:48.560><c> and</c><00:11:48.800><c> complex</c><00:11:49.360><c> programs</c><00:11:50.399><c> where</c><00:11:50.560><c> you</c><00:11:50.800><c> may</c>

00:11:51.030 --> 00:11:51.040 align:start position:0%
large and complex programs where you may
 

00:11:51.040 --> 00:11:53.350 align:start position:0%
large and complex programs where you may
want<00:11:51.360><c> individual</c><00:11:52.000><c> pieces</c><00:11:52.399><c> of</c><00:11:52.480><c> the</c><00:11:52.720><c> program</c><00:11:53.200><c> to</c>

00:11:53.350 --> 00:11:53.360 align:start position:0%
want individual pieces of the program to
 

00:11:53.360 --> 00:11:56.230 align:start position:0%
want individual pieces of the program to
work<00:11:53.680><c> well</c><00:11:54.399><c> without</c><00:11:54.800><c> requiring</c><00:11:55.440><c> them</c><00:11:55.600><c> to</c><00:11:55.760><c> rely</c>

00:11:56.230 --> 00:11:56.240 align:start position:0%
work well without requiring them to rely
 

00:11:56.240 --> 00:11:59.110 align:start position:0%
work well without requiring them to rely
on<00:11:56.560><c> every</c><00:11:56.800><c> other</c><00:11:57.120><c> section</c><00:11:57.440><c> of</c><00:11:57.519><c> the</c><00:11:57.680><c> code</c>

00:11:59.110 --> 00:11:59.120 align:start position:0%
on every other section of the code
 

00:11:59.120 --> 00:12:00.470 align:start position:0%
on every other section of the code
in<00:11:59.360><c> this</c><00:11:59.600><c> way</c>

00:12:00.470 --> 00:12:00.480 align:start position:0%
in this way
 

00:12:00.480 --> 00:12:02.790 align:start position:0%
in this way
preventing<00:12:01.040><c> each</c><00:12:01.279><c> piece</c><00:12:01.519><c> of</c><00:12:01.600><c> your</c><00:12:01.760><c> code</c><00:12:02.560><c> from</c>

00:12:02.790 --> 00:12:02.800 align:start position:0%
preventing each piece of your code from
 

00:12:02.800 --> 00:12:05.190 align:start position:0%
preventing each piece of your code from
referencing<00:12:03.680><c> and</c><00:12:03.839><c> requiring</c><00:12:04.480><c> knowledge</c><00:12:04.959><c> of</c>

00:12:05.190 --> 00:12:05.200 align:start position:0%
referencing and requiring knowledge of
 

00:12:05.200 --> 00:12:06.870 align:start position:0%
referencing and requiring knowledge of
the<00:12:05.360><c> inner</c><00:12:05.600><c> workings</c><00:12:06.000><c> of</c><00:12:06.160><c> each</c><00:12:06.320><c> other</c><00:12:06.560><c> section</c>

00:12:06.870 --> 00:12:06.880 align:start position:0%
the inner workings of each other section
 

00:12:06.880 --> 00:12:09.509 align:start position:0%
the inner workings of each other section
of<00:12:07.040><c> code</c><00:12:07.760><c> is</c><00:12:07.920><c> very</c><00:12:08.320><c> important</c><00:12:08.880><c> to</c><00:12:09.040><c> keep</c><00:12:09.279><c> your</c>

00:12:09.509 --> 00:12:09.519 align:start position:0%
of code is very important to keep your
 

00:12:09.519 --> 00:12:11.110 align:start position:0%
of code is very important to keep your
program<00:12:09.920><c> from</c><00:12:10.079><c> becoming</c><00:12:10.560><c> completely</c>

00:12:11.110 --> 00:12:11.120 align:start position:0%
program from becoming completely
 

00:12:11.120 --> 00:12:13.430 align:start position:0%
program from becoming completely
entangled<00:12:11.839><c> in</c><00:12:12.000><c> itself</c>

00:12:13.430 --> 00:12:13.440 align:start position:0%
entangled in itself
 

00:12:13.440 --> 00:12:15.430 align:start position:0%
entangled in itself
this<00:12:13.680><c> is</c><00:12:13.839><c> an</c><00:12:14.000><c> idea</c><00:12:14.320><c> we</c><00:12:14.399><c> will</c><00:12:14.560><c> touch</c><00:12:14.800><c> upon</c><00:12:15.279><c> in</c>

00:12:15.430 --> 00:12:15.440 align:start position:0%
this is an idea we will touch upon in
 

00:12:15.440 --> 00:12:17.190 align:start position:0%
this is an idea we will touch upon in
future<00:12:15.760><c> sections</c><00:12:16.160><c> to</c><00:12:16.320><c> come</c>

00:12:17.190 --> 00:12:17.200 align:start position:0%
future sections to come
 

00:12:17.200 --> 00:12:19.430 align:start position:0%
future sections to come
but<00:12:17.360><c> for</c><00:12:17.600><c> now</c><00:12:17.920><c> it's</c><00:12:18.160><c> best</c><00:12:18.399><c> to</c><00:12:18.560><c> understand</c><00:12:19.200><c> that</c>

00:12:19.430 --> 00:12:19.440 align:start position:0%
but for now it's best to understand that
 

00:12:19.440 --> 00:12:21.829 align:start position:0%
but for now it's best to understand that
information<00:12:19.920><c> hiding</c><00:12:20.639><c> that</c><00:12:20.880><c> is</c><00:12:21.200><c> keeping</c><00:12:21.600><c> one</c>

00:12:21.829 --> 00:12:21.839 align:start position:0%
information hiding that is keeping one
 

00:12:21.839 --> 00:12:23.829 align:start position:0%
information hiding that is keeping one
class<00:12:22.160><c> from</c><00:12:22.399><c> being</c><00:12:22.639><c> able</c><00:12:22.880><c> to</c><00:12:23.040><c> directly</c><00:12:23.440><c> access</c>

00:12:23.829 --> 00:12:23.839 align:start position:0%
class from being able to directly access
 

00:12:23.839 --> 00:12:25.990 align:start position:0%
class from being able to directly access
the<00:12:24.000><c> data</c><00:12:24.320><c> of</c><00:12:24.480><c> another</c><00:12:24.880><c> class</c>

00:12:25.990 --> 00:12:26.000 align:start position:0%
the data of another class
 

00:12:26.000 --> 00:12:27.670 align:start position:0%
the data of another class
is<00:12:26.240><c> important</c><00:12:26.639><c> to</c><00:12:26.800><c> keep</c><00:12:27.040><c> control</c><00:12:27.440><c> of</c><00:12:27.519><c> your</c>

00:12:27.670 --> 00:12:27.680 align:start position:0%
is important to keep control of your
 

00:12:27.680 --> 00:12:29.750 align:start position:0%
is important to keep control of your
program<00:12:28.480><c> and</c><00:12:28.639><c> reducing</c><00:12:29.120><c> its</c><00:12:29.360><c> overall</c>

00:12:29.750 --> 00:12:29.760 align:start position:0%
program and reducing its overall
 

00:12:29.760 --> 00:12:31.430 align:start position:0%
program and reducing its overall
complexity

00:12:31.430 --> 00:12:31.440 align:start position:0%
complexity
 

00:12:31.440 --> 00:12:32.470 align:start position:0%
complexity
overall

00:12:32.470 --> 00:12:32.480 align:start position:0%
overall
 

00:12:32.480 --> 00:12:34.550 align:start position:0%
overall
encapsulation<00:12:33.360><c> is</c><00:12:33.440><c> a</c><00:12:33.519><c> vital</c><00:12:33.839><c> component</c><00:12:34.320><c> of</c>

00:12:34.550 --> 00:12:34.560 align:start position:0%
encapsulation is a vital component of
 

00:12:34.560 --> 00:12:36.790 align:start position:0%
encapsulation is a vital component of
object-oriented<00:12:35.360><c> programming</c><00:12:36.240><c> that</c><00:12:36.480><c> allows</c>

00:12:36.790 --> 00:12:36.800 align:start position:0%
object-oriented programming that allows
 

00:12:36.800 --> 00:12:38.629 align:start position:0%
object-oriented programming that allows
the<00:12:36.959><c> programmer</c><00:12:37.440><c> to</c><00:12:37.600><c> maintain</c><00:12:38.079><c> control</c><00:12:38.480><c> of</c>

00:12:38.629 --> 00:12:38.639 align:start position:0%
the programmer to maintain control of
 

00:12:38.639 --> 00:12:39.670 align:start position:0%
the programmer to maintain control of
their<00:12:38.800><c> data</c>

00:12:39.670 --> 00:12:39.680 align:start position:0%
their data
 

00:12:39.680 --> 00:12:41.910 align:start position:0%
their data
and<00:12:39.839><c> to</c><00:12:40.000><c> keep</c><00:12:40.240><c> their</c><00:12:40.480><c> program</c><00:12:40.959><c> from</c><00:12:41.200><c> ending</c><00:12:41.519><c> up</c>

00:12:41.910 --> 00:12:41.920 align:start position:0%
and to keep their program from ending up
 

00:12:41.920 --> 00:12:47.990 align:start position:0%
and to keep their program from ending up
in<00:12:42.160><c> any</c><00:12:42.480><c> unwanted</c><00:12:43.040><c> states</c>

00:12:47.990 --> 00:12:48.000 align:start position:0%
 
 

00:12:48.000 --> 00:12:50.230 align:start position:0%
 
in<00:12:48.160><c> this</c><00:12:48.399><c> next</c><00:12:48.720><c> section</c><00:12:49.440><c> we</c><00:12:49.600><c> are</c><00:12:49.760><c> going</c><00:12:50.000><c> to</c><00:12:50.079><c> be</c>

00:12:50.230 --> 00:12:50.240 align:start position:0%
in this next section we are going to be
 

00:12:50.240 --> 00:12:52.150 align:start position:0%
in this next section we are going to be
discussing<00:12:50.800><c> the</c><00:12:51.040><c> next</c><00:12:51.360><c> of</c><00:12:51.440><c> the</c><00:12:51.600><c> four</c><00:12:51.920><c> main</c>

00:12:52.150 --> 00:12:52.160 align:start position:0%
discussing the next of the four main
 

00:12:52.160 --> 00:12:53.750 align:start position:0%
discussing the next of the four main
principles<00:12:52.720><c> of</c><00:12:52.880><c> object-oriented</c>

00:12:53.750 --> 00:12:53.760 align:start position:0%
principles of object-oriented
 

00:12:53.760 --> 00:12:56.310 align:start position:0%
principles of object-oriented
programming<00:12:54.720><c> abstraction</c>

00:12:56.310 --> 00:12:56.320 align:start position:0%
programming abstraction
 

00:12:56.320 --> 00:12:58.470 align:start position:0%
programming abstraction
abstraction<00:12:56.959><c> refers</c><00:12:57.360><c> to</c><00:12:57.440><c> the</c><00:12:57.680><c> idea</c><00:12:58.079><c> of</c><00:12:58.240><c> only</c>

00:12:58.470 --> 00:12:58.480 align:start position:0%
abstraction refers to the idea of only
 

00:12:58.480 --> 00:13:00.550 align:start position:0%
abstraction refers to the idea of only
showing<00:12:58.800><c> essential</c><00:12:59.279><c> details</c><00:13:00.000><c> and</c><00:13:00.160><c> hiding</c>

00:13:00.550 --> 00:13:00.560 align:start position:0%
showing essential details and hiding
 

00:13:00.560 --> 00:13:02.150 align:start position:0%
showing essential details and hiding
everything<00:13:01.040><c> else</c>

00:13:02.150 --> 00:13:02.160 align:start position:0%
everything else
 

00:13:02.160 --> 00:13:05.269 align:start position:0%
everything else
this<00:13:02.399><c> idea</c><00:13:02.800><c> is</c><00:13:02.959><c> present</c><00:13:03.279><c> in</c><00:13:03.440><c> everyday</c><00:13:03.920><c> life</c>

00:13:05.269 --> 00:13:05.279 align:start position:0%
this idea is present in everyday life
 

00:13:05.279 --> 00:13:07.590 align:start position:0%
this idea is present in everyday life
when<00:13:05.440><c> you</c><00:13:05.680><c> drive</c><00:13:06.000><c> your</c><00:13:06.240><c> car</c><00:13:06.959><c> there</c><00:13:07.200><c> are</c><00:13:07.360><c> some</c>

00:13:07.590 --> 00:13:07.600 align:start position:0%
when you drive your car there are some
 

00:13:07.600 --> 00:13:09.910 align:start position:0%
when you drive your car there are some
things<00:13:07.839><c> you</c><00:13:08.000><c> need</c><00:13:08.160><c> to</c><00:13:08.320><c> understand</c><00:13:08.800><c> about</c>

00:13:09.910 --> 00:13:09.920 align:start position:0%
things you need to understand about
 

00:13:09.920 --> 00:13:11.670 align:start position:0%
things you need to understand about
you<00:13:10.079><c> need</c><00:13:10.240><c> to</c><00:13:10.399><c> understand</c><00:13:10.959><c> how</c><00:13:11.120><c> the</c><00:13:11.279><c> steering</c>

00:13:11.670 --> 00:13:11.680 align:start position:0%
you need to understand how the steering
 

00:13:11.680 --> 00:13:14.150 align:start position:0%
you need to understand how the steering
wheel<00:13:12.000><c> steers</c><00:13:12.399><c> the</c><00:13:12.560><c> car</c><00:13:13.200><c> and</c><00:13:13.360><c> how</c><00:13:13.519><c> the</c><00:13:13.680><c> gas</c><00:13:14.000><c> and</c>

00:13:14.150 --> 00:13:14.160 align:start position:0%
wheel steers the car and how the gas and
 

00:13:14.160 --> 00:13:15.829 align:start position:0%
wheel steers the car and how the gas and
brake<00:13:14.399><c> pedals</c><00:13:14.720><c> work</c>

00:13:15.829 --> 00:13:15.839 align:start position:0%
brake pedals work
 

00:13:15.839 --> 00:13:17.509 align:start position:0%
brake pedals work
you<00:13:16.000><c> also</c><00:13:16.240><c> need</c><00:13:16.399><c> to</c><00:13:16.560><c> know</c><00:13:16.720><c> how</c><00:13:16.880><c> much</c><00:13:17.040><c> gas</c><00:13:17.360><c> your</c>

00:13:17.509 --> 00:13:17.519 align:start position:0%
you also need to know how much gas your
 

00:13:17.519 --> 00:13:20.629 align:start position:0%
you also need to know how much gas your
car<00:13:17.760><c> has</c><00:13:18.399><c> and</c><00:13:18.560><c> that</c><00:13:18.720><c> it</c><00:13:18.800><c> needs</c><00:13:19.040><c> gas</c><00:13:19.360><c> to</c><00:13:19.519><c> work</c>

00:13:20.629 --> 00:13:20.639 align:start position:0%
car has and that it needs gas to work
 

00:13:20.639 --> 00:13:22.629 align:start position:0%
car has and that it needs gas to work
these<00:13:20.880><c> are</c><00:13:21.040><c> necessary</c><00:13:21.680><c> details</c><00:13:22.160><c> for</c><00:13:22.399><c> you</c><00:13:22.560><c> to</c>

00:13:22.629 --> 00:13:22.639 align:start position:0%
these are necessary details for you to
 

00:13:22.639 --> 00:13:25.110 align:start position:0%
these are necessary details for you to
be<00:13:22.800><c> able</c><00:13:22.959><c> to</c><00:13:23.120><c> drive</c><00:13:23.360><c> the</c><00:13:23.519><c> car</c><00:13:23.839><c> properly</c>

00:13:25.110 --> 00:13:25.120 align:start position:0%
be able to drive the car properly
 

00:13:25.120 --> 00:13:27.750 align:start position:0%
be able to drive the car properly
however<00:13:26.000><c> the</c><00:13:26.160><c> exact</c><00:13:26.639><c> way</c><00:13:26.880><c> that</c><00:13:26.959><c> the</c><00:13:27.120><c> car</c><00:13:27.440><c> works</c>

00:13:27.750 --> 00:13:27.760 align:start position:0%
however the exact way that the car works
 

00:13:27.760 --> 00:13:29.430 align:start position:0%
however the exact way that the car works
internally<00:13:28.480><c> isn't</c><00:13:28.800><c> something</c><00:13:29.040><c> that</c><00:13:29.200><c> most</c>

00:13:29.430 --> 00:13:29.440 align:start position:0%
internally isn't something that most
 

00:13:29.440 --> 00:13:31.590 align:start position:0%
internally isn't something that most
people<00:13:29.680><c> need</c><00:13:29.839><c> to</c><00:13:29.920><c> concern</c><00:13:30.399><c> themselves</c><00:13:30.880><c> with</c>

00:13:31.590 --> 00:13:31.600 align:start position:0%
people need to concern themselves with
 

00:13:31.600 --> 00:13:33.910 align:start position:0%
people need to concern themselves with
how<00:13:31.760><c> the</c><00:13:31.920><c> gas</c><00:13:32.240><c> reacts</c><00:13:32.639><c> in</c><00:13:32.720><c> the</c><00:13:32.880><c> engine</c><00:13:33.600><c> and</c><00:13:33.760><c> how</c>

00:13:33.910 --> 00:13:33.920 align:start position:0%
how the gas reacts in the engine and how
 

00:13:33.920 --> 00:13:35.430 align:start position:0%
how the gas reacts in the engine and how
that<00:13:34.079><c> translates</c><00:13:34.560><c> into</c><00:13:34.720><c> the</c><00:13:34.800><c> car</c><00:13:35.120><c> moving</c>

00:13:35.430 --> 00:13:35.440 align:start position:0%
that translates into the car moving
 

00:13:35.440 --> 00:13:37.509 align:start position:0%
that translates into the car moving
forward<00:13:36.320><c> really</c><00:13:36.639><c> isn't</c><00:13:36.880><c> important</c><00:13:37.200><c> while</c><00:13:37.360><c> you</c>

00:13:37.509 --> 00:13:37.519 align:start position:0%
forward really isn't important while you
 

00:13:37.519 --> 00:13:38.949 align:start position:0%
forward really isn't important while you
are<00:13:37.600><c> driving</c><00:13:37.920><c> your</c><00:13:38.079><c> car</c>

00:13:38.949 --> 00:13:38.959 align:start position:0%
are driving your car
 

00:13:38.959 --> 00:13:40.550 align:start position:0%
are driving your car
all<00:13:39.199><c> that</c><00:13:39.360><c> matters</c><00:13:39.920><c> is</c><00:13:40.000><c> that</c><00:13:40.160><c> you</c><00:13:40.240><c> know</c><00:13:40.480><c> it</c>

00:13:40.550 --> 00:13:40.560 align:start position:0%
all that matters is that you know it
 

00:13:40.560 --> 00:13:42.310 align:start position:0%
all that matters is that you know it
will<00:13:40.800><c> work</c><00:13:41.040><c> this</c><00:13:41.199><c> way</c>

00:13:42.310 --> 00:13:42.320 align:start position:0%
will work this way
 

00:13:42.320 --> 00:13:44.230 align:start position:0%
will work this way
whoever<00:13:42.800><c> built</c><00:13:43.040><c> the</c><00:13:43.120><c> car</c><00:13:43.440><c> had</c><00:13:43.600><c> to</c><00:13:43.680><c> worry</c><00:13:43.920><c> about</c>

00:13:44.230 --> 00:13:44.240 align:start position:0%
whoever built the car had to worry about
 

00:13:44.240 --> 00:13:46.230 align:start position:0%
whoever built the car had to worry about
how<00:13:44.399><c> exactly</c><00:13:44.800><c> the</c><00:13:44.880><c> car</c><00:13:45.120><c> would</c><00:13:45.279><c> work</c><00:13:45.920><c> so</c><00:13:46.079><c> that</c>

00:13:46.230 --> 00:13:46.240 align:start position:0%
how exactly the car would work so that
 

00:13:46.240 --> 00:13:47.670 align:start position:0%
how exactly the car would work so that
you<00:13:46.399><c> don't</c><00:13:46.560><c> have</c><00:13:46.720><c> to</c>

00:13:47.670 --> 00:13:47.680 align:start position:0%
you don't have to
 

00:13:47.680 --> 00:13:50.150 align:start position:0%
you don't have to
this<00:13:48.000><c> idea</c><00:13:48.480><c> extends</c><00:13:48.959><c> to</c><00:13:49.199><c> object-oriented</c>

00:13:50.150 --> 00:13:50.160 align:start position:0%
this idea extends to object-oriented
 

00:13:50.160 --> 00:13:51.590 align:start position:0%
this idea extends to object-oriented
programming

00:13:51.590 --> 00:13:51.600 align:start position:0%
programming
 

00:13:51.600 --> 00:13:53.750 align:start position:0%
programming
the<00:13:51.760><c> classes</c><00:13:52.240><c> you</c><00:13:52.480><c> create</c><00:13:53.120><c> should</c><00:13:53.360><c> act</c><00:13:53.519><c> like</c>

00:13:53.750 --> 00:13:53.760 align:start position:0%
the classes you create should act like
 

00:13:53.760 --> 00:13:55.269 align:start position:0%
the classes you create should act like
your<00:13:53.920><c> car</c>

00:13:55.269 --> 00:13:55.279 align:start position:0%
your car
 

00:13:55.279 --> 00:13:57.269 align:start position:0%
your car
users<00:13:55.680><c> of</c><00:13:55.760><c> your</c><00:13:56.000><c> classes</c><00:13:56.480><c> should</c><00:13:56.639><c> not</c><00:13:56.880><c> worry</c>

00:13:57.269 --> 00:13:57.279 align:start position:0%
users of your classes should not worry
 

00:13:57.279 --> 00:13:59.509 align:start position:0%
users of your classes should not worry
about<00:13:57.600><c> the</c><00:13:57.760><c> exact</c><00:13:58.160><c> inner</c><00:13:58.480><c> details</c><00:13:58.959><c> of</c><00:13:59.279><c> said</c>

00:13:59.509 --> 00:13:59.519 align:start position:0%
about the exact inner details of said
 

00:13:59.519 --> 00:14:00.870 align:start position:0%
about the exact inner details of said
classes

00:14:00.870 --> 00:14:00.880 align:start position:0%
classes
 

00:14:00.880 --> 00:14:02.550 align:start position:0%
classes
this<00:14:01.199><c> idea</c><00:14:01.600><c> is</c><00:14:01.680><c> similar</c><00:14:02.079><c> to</c><00:14:02.240><c> that</c><00:14:02.399><c> of</c>

00:14:02.550 --> 00:14:02.560 align:start position:0%
this idea is similar to that of
 

00:14:02.560 --> 00:14:04.310 align:start position:0%
this idea is similar to that of
encapsulation<00:14:03.360><c> that</c><00:14:03.519><c> we</c><00:14:03.680><c> discussed</c><00:14:04.160><c> in</c><00:14:04.240><c> the</c>

00:14:04.310 --> 00:14:04.320 align:start position:0%
encapsulation that we discussed in the
 

00:14:04.320 --> 00:14:06.389 align:start position:0%
encapsulation that we discussed in the
previous<00:14:04.800><c> section</c>

00:14:06.389 --> 00:14:06.399 align:start position:0%
previous section
 

00:14:06.399 --> 00:14:08.230 align:start position:0%
previous section
earlier<00:14:07.040><c> we</c><00:14:07.199><c> mentioned</c><00:14:07.519><c> how</c><00:14:07.680><c> you</c><00:14:07.839><c> should</c><00:14:08.000><c> not</c>

00:14:08.230 --> 00:14:08.240 align:start position:0%
earlier we mentioned how you should not
 

00:14:08.240 --> 00:14:09.990 align:start position:0%
earlier we mentioned how you should not
have<00:14:08.399><c> classes</c><00:14:08.959><c> directly</c><00:14:09.360><c> interact</c><00:14:09.760><c> with</c><00:14:09.920><c> the</c>

00:14:09.990 --> 00:14:10.000 align:start position:0%
have classes directly interact with the
 

00:14:10.000 --> 00:14:12.310 align:start position:0%
have classes directly interact with the
data<00:14:10.240><c> stored</c><00:14:10.560><c> within</c><00:14:10.880><c> other</c><00:14:11.120><c> classes</c>

00:14:12.310 --> 00:14:12.320 align:start position:0%
data stored within other classes
 

00:14:12.320 --> 00:14:14.230 align:start position:0%
data stored within other classes
rather<00:14:12.639><c> have</c><00:14:12.800><c> them</c><00:14:13.040><c> use</c><00:14:13.199><c> the</c><00:14:13.360><c> classes</c><00:14:13.839><c> methods</c>

00:14:14.230 --> 00:14:14.240 align:start position:0%
rather have them use the classes methods
 

00:14:14.240 --> 00:14:16.389 align:start position:0%
rather have them use the classes methods
to<00:14:14.399><c> access</c><00:14:14.720><c> their</c><00:14:14.880><c> data</c>

00:14:16.389 --> 00:14:16.399 align:start position:0%
to access their data
 

00:14:16.399 --> 00:14:18.389 align:start position:0%
to access their data
this<00:14:16.639><c> idea</c><00:14:17.040><c> is</c><00:14:17.199><c> especially</c><00:14:17.760><c> important</c><00:14:18.240><c> when</c>

00:14:18.389 --> 00:14:18.399 align:start position:0%
this idea is especially important when
 

00:14:18.399 --> 00:14:19.670 align:start position:0%
this idea is especially important when
you<00:14:18.480><c> want</c><00:14:18.639><c> to</c><00:14:18.720><c> work</c><00:14:18.959><c> on</c><00:14:19.040><c> your</c><00:14:19.199><c> program</c>

00:14:19.670 --> 00:14:19.680 align:start position:0%
you want to work on your program
 

00:14:19.680 --> 00:14:21.750 align:start position:0%
you want to work on your program
incrementally<00:14:20.800><c> where</c><00:14:20.959><c> you</c><00:14:21.120><c> focus</c><00:14:21.440><c> on</c><00:14:21.519><c> one</c>

00:14:21.750 --> 00:14:21.760 align:start position:0%
incrementally where you focus on one
 

00:14:21.760 --> 00:14:23.189 align:start position:0%
incrementally where you focus on one
class<00:14:22.160><c> at</c><00:14:22.240><c> a</c><00:14:22.399><c> time</c>

00:14:23.189 --> 00:14:23.199 align:start position:0%
class at a time
 

00:14:23.199 --> 00:14:24.870 align:start position:0%
class at a time
and<00:14:23.360><c> ensure</c><00:14:23.760><c> that</c><00:14:23.920><c> it</c><00:14:24.000><c> works</c>

00:14:24.870 --> 00:14:24.880 align:start position:0%
and ensure that it works
 

00:14:24.880 --> 00:14:26.870 align:start position:0%
and ensure that it works
this<00:14:25.120><c> is</c><00:14:25.279><c> a</c><00:14:25.360><c> very</c><00:14:25.600><c> useful</c><00:14:26.000><c> approach</c><00:14:26.480><c> as</c><00:14:26.639><c> it</c><00:14:26.720><c> can</c>

00:14:26.870 --> 00:14:26.880 align:start position:0%
this is a very useful approach as it can
 

00:14:26.880 --> 00:14:28.470 align:start position:0%
this is a very useful approach as it can
be<00:14:27.040><c> difficult</c><00:14:27.440><c> for</c><00:14:27.600><c> you</c><00:14:27.680><c> to</c><00:14:27.760><c> focus</c><00:14:28.079><c> in</c><00:14:28.240><c> the</c><00:14:28.320><c> big</c>

00:14:28.470 --> 00:14:28.480 align:start position:0%
be difficult for you to focus in the big
 

00:14:28.480 --> 00:14:30.629 align:start position:0%
be difficult for you to focus in the big
picture<00:14:28.880><c> while</c><00:14:29.120><c> programming</c><00:14:30.079><c> and</c><00:14:30.240><c> splitting</c>

00:14:30.629 --> 00:14:30.639 align:start position:0%
picture while programming and splitting
 

00:14:30.639 --> 00:14:32.710 align:start position:0%
picture while programming and splitting
up<00:14:30.720><c> your</c><00:14:30.880><c> project</c><00:14:31.360><c> into</c><00:14:31.600><c> smaller</c><00:14:32.000><c> chunks</c><00:14:32.560><c> can</c>

00:14:32.710 --> 00:14:32.720 align:start position:0%
up your project into smaller chunks can
 

00:14:32.720 --> 00:14:35.030 align:start position:0%
up your project into smaller chunks can
make<00:14:32.959><c> it</c><00:14:33.040><c> much</c><00:14:33.360><c> more</c><00:14:33.600><c> manageable</c>

00:14:35.030 --> 00:14:35.040 align:start position:0%
make it much more manageable
 

00:14:35.040 --> 00:14:36.389 align:start position:0%
make it much more manageable
furthermore

00:14:36.389 --> 00:14:36.399 align:start position:0%
furthermore
 

00:14:36.399 --> 00:14:38.870 align:start position:0%
furthermore
programs<00:14:36.959><c> nowadays</c><00:14:37.519><c> are</c><00:14:37.680><c> vast</c><00:14:38.079><c> and</c><00:14:38.160><c> complex</c>

00:14:38.870 --> 00:14:38.880 align:start position:0%
programs nowadays are vast and complex
 

00:14:38.880 --> 00:14:40.629 align:start position:0%
programs nowadays are vast and complex
to<00:14:39.040><c> the</c><00:14:39.120><c> point</c><00:14:39.360><c> where</c><00:14:39.600><c> multiple</c><00:14:40.000><c> programmers</c>

00:14:40.629 --> 00:14:40.639 align:start position:0%
to the point where multiple programmers
 

00:14:40.639 --> 00:14:43.350 align:start position:0%
to the point where multiple programmers
tend<00:14:40.880><c> to</c><00:14:41.040><c> work</c><00:14:41.360><c> on</c><00:14:41.519><c> one</c><00:14:41.760><c> project</c>

00:14:43.350 --> 00:14:43.360 align:start position:0%
tend to work on one project
 

00:14:43.360 --> 00:14:44.629 align:start position:0%
tend to work on one project
in<00:14:43.519><c> this</c><00:14:43.760><c> case</c>

00:14:44.629 --> 00:14:44.639 align:start position:0%
in this case
 

00:14:44.639 --> 00:14:46.150 align:start position:0%
in this case
it's<00:14:44.880><c> best</c><00:14:45.199><c> if</c><00:14:45.279><c> the</c><00:14:45.440><c> section</c><00:14:45.760><c> that</c><00:14:45.920><c> you</c><00:14:46.079><c> are</c>

00:14:46.150 --> 00:14:46.160 align:start position:0%
it's best if the section that you are
 

00:14:46.160 --> 00:14:48.150 align:start position:0%
it's best if the section that you are
working<00:14:46.480><c> on</c><00:14:46.959><c> is</c><00:14:47.120><c> able</c><00:14:47.360><c> to</c><00:14:47.440><c> function</c><00:14:47.839><c> without</c>

00:14:48.150 --> 00:14:48.160 align:start position:0%
working on is able to function without
 

00:14:48.160 --> 00:14:49.829 align:start position:0%
working on is able to function without
knowledge<00:14:48.560><c> of</c><00:14:48.720><c> the</c><00:14:48.800><c> inner</c><00:14:49.040><c> workings</c><00:14:49.519><c> of</c><00:14:49.680><c> your</c>

00:14:49.829 --> 00:14:49.839 align:start position:0%
knowledge of the inner workings of your
 

00:14:49.839 --> 00:14:51.750 align:start position:0%
knowledge of the inner workings of your
colleague<00:14:50.240><c> section</c>

00:14:51.750 --> 00:14:51.760 align:start position:0%
colleague section
 

00:14:51.760 --> 00:14:53.829 align:start position:0%
colleague section
to<00:14:52.000><c> achieve</c><00:14:52.320><c> this</c><00:14:52.959><c> it's</c><00:14:53.199><c> best</c><00:14:53.440><c> to</c><00:14:53.519><c> think</c><00:14:53.760><c> of</c>

00:14:53.829 --> 00:14:53.839 align:start position:0%
to achieve this it's best to think of
 

00:14:53.839 --> 00:14:56.829 align:start position:0%
to achieve this it's best to think of
your<00:14:54.000><c> program</c><00:14:54.560><c> in</c><00:14:54.720><c> terms</c><00:14:54.959><c> of</c><00:14:55.120><c> interface</c><00:14:55.920><c> and</c>

00:14:56.829 --> 00:14:56.839 align:start position:0%
your program in terms of interface and
 

00:14:56.839 --> 00:14:59.430 align:start position:0%
your program in terms of interface and
implementation<00:14:57.920><c> the</c><00:14:58.160><c> interface</c><00:14:58.880><c> refers</c><00:14:59.279><c> to</c>

00:14:59.430 --> 00:14:59.440 align:start position:0%
implementation the interface refers to
 

00:14:59.440 --> 00:15:01.509 align:start position:0%
implementation the interface refers to
the<00:14:59.600><c> ways</c><00:14:59.920><c> that</c><00:15:00.160><c> sections</c><00:15:00.639><c> of</c><00:15:00.800><c> code</c><00:15:01.120><c> are</c><00:15:01.279><c> able</c>

00:15:01.509 --> 00:15:01.519 align:start position:0%
the ways that sections of code are able
 

00:15:01.519 --> 00:15:03.910 align:start position:0%
the ways that sections of code are able
to<00:15:01.680><c> communicate</c><00:15:02.240><c> with</c><00:15:02.399><c> one</c><00:15:02.639><c> another</c>

00:15:03.910 --> 00:15:03.920 align:start position:0%
to communicate with one another
 

00:15:03.920 --> 00:15:05.670 align:start position:0%
to communicate with one another
this<00:15:04.160><c> is</c><00:15:04.240><c> typically</c><00:15:04.720><c> done</c><00:15:04.959><c> through</c><00:15:05.199><c> methods</c>

00:15:05.670 --> 00:15:05.680 align:start position:0%
this is typically done through methods
 

00:15:05.680 --> 00:15:08.870 align:start position:0%
this is typically done through methods
that<00:15:05.839><c> each</c><00:15:06.079><c> class</c><00:15:06.480><c> is</c><00:15:06.639><c> able</c><00:15:06.880><c> to</c><00:15:07.040><c> access</c>

00:15:08.870 --> 00:15:08.880 align:start position:0%
that each class is able to access
 

00:15:08.880 --> 00:15:10.629 align:start position:0%
that each class is able to access
the<00:15:09.040><c> exact</c><00:15:09.519><c> implementation</c><00:15:10.240><c> of</c><00:15:10.399><c> these</c>

00:15:10.629 --> 00:15:10.639 align:start position:0%
the exact implementation of these
 

00:15:10.639 --> 00:15:13.430 align:start position:0%
the exact implementation of these
methods<00:15:11.519><c> or</c><00:15:11.680><c> how</c><00:15:11.839><c> the</c><00:15:12.000><c> methods</c><00:15:12.320><c> are</c><00:15:12.480><c> coded</c>

00:15:13.430 --> 00:15:13.440 align:start position:0%
methods or how the methods are coded
 

00:15:13.440 --> 00:15:15.509 align:start position:0%
methods or how the methods are coded
should<00:15:13.680><c> be</c><00:15:13.760><c> hidden</c><00:15:14.079><c> within</c><00:15:14.399><c> the</c><00:15:14.560><c> class</c><00:15:15.279><c> and</c>

00:15:15.509 --> 00:15:15.519 align:start position:0%
should be hidden within the class and
 

00:15:15.519 --> 00:15:17.910 align:start position:0%
should be hidden within the class and
not<00:15:15.760><c> accessible</c><00:15:16.240><c> from</c><00:15:16.480><c> the</c><00:15:16.639><c> outside</c>

00:15:17.910 --> 00:15:17.920 align:start position:0%
not accessible from the outside
 

00:15:17.920 --> 00:15:19.829 align:start position:0%
not accessible from the outside
think<00:15:18.160><c> of</c><00:15:18.240><c> this</c><00:15:18.480><c> like</c><00:15:18.639><c> the</c><00:15:18.800><c> car</c>

00:15:19.829 --> 00:15:19.839 align:start position:0%
think of this like the car
 

00:15:19.839 --> 00:15:21.670 align:start position:0%
think of this like the car
the<00:15:20.000><c> other</c><00:15:20.240><c> classes</c><00:15:20.800><c> are</c><00:15:20.959><c> able</c><00:15:21.120><c> to</c><00:15:21.279><c> turn</c><00:15:21.519><c> the</c>

00:15:21.670 --> 00:15:21.680 align:start position:0%
the other classes are able to turn the
 

00:15:21.680 --> 00:15:23.430 align:start position:0%
the other classes are able to turn the
wheel<00:15:22.079><c> and</c><00:15:22.160><c> push</c><00:15:22.399><c> the</c><00:15:22.560><c> gas</c>

00:15:23.430 --> 00:15:23.440 align:start position:0%
wheel and push the gas
 

00:15:23.440 --> 00:15:25.189 align:start position:0%
wheel and push the gas
and<00:15:23.519><c> they</c><00:15:23.680><c> know</c><00:15:23.839><c> what</c><00:15:24.000><c> the</c><00:15:24.160><c> outcome</c><00:15:24.480><c> should</c><00:15:24.720><c> be</c>

00:15:25.189 --> 00:15:25.199 align:start position:0%
and they know what the outcome should be
 

00:15:25.199 --> 00:15:27.030 align:start position:0%
and they know what the outcome should be
without<00:15:25.600><c> caring</c><00:15:25.920><c> about</c><00:15:26.240><c> exactly</c><00:15:26.639><c> how</c><00:15:26.800><c> this</c>

00:15:27.030 --> 00:15:27.040 align:start position:0%
without caring about exactly how this
 

00:15:27.040 --> 00:15:29.350 align:start position:0%
without caring about exactly how this
gets<00:15:27.279><c> done</c>

00:15:29.350 --> 00:15:29.360 align:start position:0%
gets done
 

00:15:29.360 --> 00:15:31.269 align:start position:0%
gets done
let's<00:15:29.600><c> return</c><00:15:30.000><c> to</c><00:15:30.160><c> the</c><00:15:30.320><c> chess</c><00:15:30.639><c> example</c><00:15:31.040><c> that</c>

00:15:31.269 --> 00:15:31.279 align:start position:0%
let's return to the chess example that
 

00:15:31.279 --> 00:15:33.990 align:start position:0%
let's return to the chess example that
we've<00:15:31.440><c> been</c><00:15:31.680><c> using</c><00:15:32.079><c> throughout</c><00:15:32.480><c> the</c><00:15:32.560><c> video</c>

00:15:33.990 --> 00:15:34.000 align:start position:0%
we've been using throughout the video
 

00:15:34.000 --> 00:15:35.509 align:start position:0%
we've been using throughout the video
let's<00:15:34.240><c> say</c><00:15:34.399><c> that</c><00:15:34.560><c> you</c><00:15:34.720><c> are</c><00:15:34.880><c> working</c><00:15:35.120><c> on</c><00:15:35.279><c> making</c>

00:15:35.509 --> 00:15:35.519 align:start position:0%
let's say that you are working on making
 

00:15:35.519 --> 00:15:37.829 align:start position:0%
let's say that you are working on making
the<00:15:35.680><c> night</c><00:15:35.920><c> work</c><00:15:36.240><c> as</c><00:15:36.399><c> it</c><00:15:36.560><c> should</c><00:15:37.199><c> and</c><00:15:37.440><c> a</c><00:15:37.519><c> fellow</c>

00:15:37.829 --> 00:15:37.839 align:start position:0%
the night work as it should and a fellow
 

00:15:37.839 --> 00:15:41.189 align:start position:0%
the night work as it should and a fellow
programmer<00:15:38.480><c> is</c><00:15:38.560><c> working</c><00:15:38.880><c> in</c><00:15:38.959><c> the</c><00:15:39.120><c> king</c><00:15:39.360><c> class</c>

00:15:41.189 --> 00:15:41.199 align:start position:0%
programmer is working in the king class
 

00:15:41.199 --> 00:15:43.670 align:start position:0%
programmer is working in the king class
in<00:15:41.360><c> order</c><00:15:41.680><c> to</c><00:15:41.920><c> effectively</c><00:15:42.560><c> work</c><00:15:42.800><c> together</c>

00:15:43.670 --> 00:15:43.680 align:start position:0%
in order to effectively work together
 

00:15:43.680 --> 00:15:45.990 align:start position:0%
in order to effectively work together
you<00:15:43.839><c> need</c><00:15:44.079><c> to</c><00:15:44.240><c> agree</c><00:15:44.720><c> on</c><00:15:44.880><c> an</c><00:15:45.040><c> interface</c><00:15:45.759><c> with</c>

00:15:45.990 --> 00:15:46.000 align:start position:0%
you need to agree on an interface with
 

00:15:46.000 --> 00:15:47.670 align:start position:0%
you need to agree on an interface with
which<00:15:46.320><c> these</c><00:15:46.639><c> pieces</c><00:15:47.120><c> are</c><00:15:47.360><c> able</c><00:15:47.519><c> to</c>

00:15:47.670 --> 00:15:47.680 align:start position:0%
which these pieces are able to
 

00:15:47.680 --> 00:15:49.350 align:start position:0%
which these pieces are able to
communicate

00:15:49.350 --> 00:15:49.360 align:start position:0%
communicate
 

00:15:49.360 --> 00:15:50.710 align:start position:0%
communicate
in<00:15:49.519><c> this</c><00:15:49.839><c> case</c>

00:15:50.710 --> 00:15:50.720 align:start position:0%
in this case
 

00:15:50.720 --> 00:15:52.150 align:start position:0%
in this case
say<00:15:50.880><c> that</c><00:15:51.040><c> you</c><00:15:51.120><c> are</c><00:15:51.279><c> working</c><00:15:51.519><c> on</c><00:15:51.680><c> making</c><00:15:52.000><c> the</c>

00:15:52.150 --> 00:15:52.160 align:start position:0%
say that you are working on making the
 

00:15:52.160 --> 00:15:54.310 align:start position:0%
say that you are working on making the
knight<00:15:52.560><c> unable</c><00:15:52.959><c> to</c><00:15:53.120><c> move</c><00:15:53.440><c> if</c><00:15:53.519><c> your</c><00:15:53.680><c> king</c><00:15:54.000><c> is</c><00:15:54.160><c> in</c>

00:15:54.310 --> 00:15:54.320 align:start position:0%
knight unable to move if your king is in
 

00:15:54.320 --> 00:15:55.829 align:start position:0%
knight unable to move if your king is in
check

00:15:55.829 --> 00:15:55.839 align:start position:0%
check
 

00:15:55.839 --> 00:15:58.230 align:start position:0%
check
as<00:15:56.160><c> the</c><00:15:56.320><c> programmer</c><00:15:56.880><c> of</c><00:15:56.959><c> the</c><00:15:57.120><c> night</c><00:15:57.360><c> class</c>

00:15:58.230 --> 00:15:58.240 align:start position:0%
as the programmer of the night class
 

00:15:58.240 --> 00:16:00.150 align:start position:0%
as the programmer of the night class
you<00:15:58.480><c> make</c><00:15:58.720><c> the</c><00:15:58.880><c> knight</c><00:15:59.279><c> use</c><00:15:59.519><c> the</c><00:15:59.759><c> king's</c>

00:16:00.150 --> 00:16:00.160 align:start position:0%
you make the knight use the king's
 

00:16:00.160 --> 00:16:02.310 align:start position:0%
you make the knight use the king's
getter<00:16:00.480><c> method</c><00:16:01.199><c> that</c><00:16:01.440><c> will</c><00:16:01.600><c> let</c><00:16:01.759><c> the</c><00:16:02.000><c> knight</c>

00:16:02.310 --> 00:16:02.320 align:start position:0%
getter method that will let the knight
 

00:16:02.320 --> 00:16:05.590 align:start position:0%
getter method that will let the knight
know<00:16:02.720><c> whether</c><00:16:03.040><c> or</c><00:16:03.199><c> not</c><00:16:03.440><c> the</c><00:16:03.600><c> king</c><00:16:03.839><c> is</c><00:16:04.000><c> in</c><00:16:04.160><c> check</c>

00:16:05.590 --> 00:16:05.600 align:start position:0%
know whether or not the king is in check
 

00:16:05.600 --> 00:16:06.949 align:start position:0%
know whether or not the king is in check
if<00:16:05.839><c> it</c><00:16:06.000><c> is</c>

00:16:06.949 --> 00:16:06.959 align:start position:0%
if it is
 

00:16:06.959 --> 00:16:08.629 align:start position:0%
if it is
then<00:16:07.120><c> you</c><00:16:07.279><c> make</c><00:16:07.519><c> it</c><00:16:07.600><c> so</c><00:16:07.759><c> the</c><00:16:08.000><c> knight</c><00:16:08.320><c> is</c><00:16:08.480><c> not</c>

00:16:08.629 --> 00:16:08.639 align:start position:0%
then you make it so the knight is not
 

00:16:08.639 --> 00:16:10.710 align:start position:0%
then you make it so the knight is not
able<00:16:08.959><c> to</c><00:16:09.120><c> move</c><00:16:09.600><c> unless</c><00:16:09.920><c> it</c><00:16:10.160><c> is</c><00:16:10.240><c> able</c><00:16:10.480><c> to</c><00:16:10.560><c> put</c>

00:16:10.710 --> 00:16:10.720 align:start position:0%
able to move unless it is able to put
 

00:16:10.720 --> 00:16:12.710 align:start position:0%
able to move unless it is able to put
the<00:16:10.880><c> king</c><00:16:11.199><c> out</c><00:16:11.360><c> of</c><00:16:11.519><c> check</c>

00:16:12.710 --> 00:16:12.720 align:start position:0%
the king out of check
 

00:16:12.720 --> 00:16:14.870 align:start position:0%
the king out of check
as<00:16:12.959><c> you</c><00:16:13.120><c> program</c><00:16:13.519><c> the</c><00:16:13.680><c> night</c><00:16:13.920><c> class</c><00:16:14.720><c> you</c>

00:16:14.870 --> 00:16:14.880 align:start position:0%
as you program the night class you
 

00:16:14.880 --> 00:16:16.310 align:start position:0%
as you program the night class you
should<00:16:15.120><c> not</c><00:16:15.279><c> be</c><00:16:15.440><c> concerned</c><00:16:15.920><c> with</c><00:16:16.000><c> how</c><00:16:16.160><c> the</c>

00:16:16.310 --> 00:16:16.320 align:start position:0%
should not be concerned with how the
 

00:16:16.320 --> 00:16:18.310 align:start position:0%
should not be concerned with how the
king<00:16:16.560><c> is</c><00:16:16.639><c> determining</c><00:16:17.360><c> whether</c><00:16:17.680><c> or</c><00:16:17.839><c> not</c><00:16:18.079><c> it</c><00:16:18.240><c> is</c>

00:16:18.310 --> 00:16:18.320 align:start position:0%
king is determining whether or not it is
 

00:16:18.320 --> 00:16:19.509 align:start position:0%
king is determining whether or not it is
in<00:16:18.480><c> check</c>

00:16:19.509 --> 00:16:19.519 align:start position:0%
in check
 

00:16:19.519 --> 00:16:21.350 align:start position:0%
in check
the<00:16:19.680><c> king's</c><00:16:20.079><c> method</c><00:16:20.480><c> that</c><00:16:20.639><c> tells</c><00:16:20.959><c> the</c><00:16:21.120><c> knight</c>

00:16:21.350 --> 00:16:21.360 align:start position:0%
the king's method that tells the knight
 

00:16:21.360 --> 00:16:22.949 align:start position:0%
the king's method that tells the knight
whether<00:16:21.600><c> or</c><00:16:21.759><c> not</c><00:16:21.920><c> it</c><00:16:22.079><c> is</c><00:16:22.160><c> in</c><00:16:22.320><c> check</c><00:16:22.560><c> is</c><00:16:22.720><c> part</c><00:16:22.880><c> of</c>

00:16:22.949 --> 00:16:22.959 align:start position:0%
whether or not it is in check is part of
 

00:16:22.959 --> 00:16:24.230 align:start position:0%
whether or not it is in check is part of
the<00:16:23.120><c> interface</c>

00:16:24.230 --> 00:16:24.240 align:start position:0%
the interface
 

00:16:24.240 --> 00:16:26.790 align:start position:0%
the interface
but<00:16:24.480><c> how</c><00:16:24.720><c> exactly</c><00:16:25.199><c> it</c><00:16:25.279><c> does</c><00:16:25.600><c> that</c><00:16:26.240><c> is</c><00:16:26.480><c> part</c><00:16:26.720><c> of</c>

00:16:26.790 --> 00:16:26.800 align:start position:0%
but how exactly it does that is part of
 

00:16:26.800 --> 00:16:28.629 align:start position:0%
but how exactly it does that is part of
the<00:16:26.959><c> implementation</c>

00:16:28.629 --> 00:16:28.639 align:start position:0%
the implementation
 

00:16:28.639 --> 00:16:31.110 align:start position:0%
the implementation
this<00:16:28.959><c> manner</c><00:16:29.519><c> of</c><00:16:29.680><c> only</c><00:16:30.079><c> allowing</c><00:16:30.480><c> the</c><00:16:30.560><c> classes</c>

00:16:31.110 --> 00:16:31.120 align:start position:0%
this manner of only allowing the classes
 

00:16:31.120 --> 00:16:33.030 align:start position:0%
this manner of only allowing the classes
to<00:16:31.360><c> interact</c><00:16:31.920><c> through</c><00:16:32.160><c> a</c><00:16:32.240><c> predetermined</c>

00:16:33.030 --> 00:16:33.040 align:start position:0%
to interact through a predetermined
 

00:16:33.040 --> 00:16:34.069 align:start position:0%
to interact through a predetermined
interface

00:16:34.069 --> 00:16:34.079 align:start position:0%
interface
 

00:16:34.079 --> 00:16:36.470 align:start position:0%
interface
prevents<00:16:34.560><c> different</c><00:16:34.880><c> pieces</c><00:16:35.360><c> of</c><00:16:35.440><c> the</c><00:16:35.600><c> program</c>

00:16:36.470 --> 00:16:36.480 align:start position:0%
prevents different pieces of the program
 

00:16:36.480 --> 00:16:38.150 align:start position:0%
prevents different pieces of the program
from<00:16:36.720><c> becoming</c><00:16:37.199><c> completely</c><00:16:37.759><c> coupled</c>

00:16:38.150 --> 00:16:38.160 align:start position:0%
from becoming completely coupled
 

00:16:38.160 --> 00:16:39.829 align:start position:0%
from becoming completely coupled
together

00:16:39.829 --> 00:16:39.839 align:start position:0%
together
 

00:16:39.839 --> 00:16:41.990 align:start position:0%
together
if<00:16:40.079><c> the</c><00:16:40.240><c> night</c><00:16:40.480><c> class</c><00:16:40.880><c> has</c><00:16:41.040><c> to</c><00:16:41.279><c> look</c><00:16:41.600><c> into</c><00:16:41.839><c> the</c>

00:16:41.990 --> 00:16:42.000 align:start position:0%
if the night class has to look into the
 

00:16:42.000 --> 00:16:43.509 align:start position:0%
if the night class has to look into the
king<00:16:42.240><c> class</c><00:16:42.720><c> in</c><00:16:42.800><c> order</c><00:16:43.040><c> to</c><00:16:43.199><c> make</c><00:16:43.440><c> a</c>

00:16:43.509 --> 00:16:43.519 align:start position:0%
king class in order to make a
 

00:16:43.519 --> 00:16:45.110 align:start position:0%
king class in order to make a
determination

00:16:45.110 --> 00:16:45.120 align:start position:0%
determination
 

00:16:45.120 --> 00:16:46.949 align:start position:0%
determination
then<00:16:45.279><c> it</c><00:16:45.440><c> is</c><00:16:45.600><c> reliant</c><00:16:46.160><c> on</c><00:16:46.240><c> the</c><00:16:46.320><c> king</c><00:16:46.639><c> class</c>

00:16:46.949 --> 00:16:46.959 align:start position:0%
then it is reliant on the king class
 

00:16:46.959 --> 00:16:49.110 align:start position:0%
then it is reliant on the king class
being<00:16:47.199><c> set</c><00:16:47.440><c> up</c><00:16:47.600><c> in</c><00:16:47.759><c> a</c><00:16:47.839><c> certain</c><00:16:48.160><c> way</c><00:16:48.720><c> in</c><00:16:48.800><c> order</c>

00:16:49.110 --> 00:16:49.120 align:start position:0%
being set up in a certain way in order
 

00:16:49.120 --> 00:16:51.110 align:start position:0%
being set up in a certain way in order
to<00:16:49.279><c> function</c>

00:16:51.110 --> 00:16:51.120 align:start position:0%
to function
 

00:16:51.120 --> 00:16:53.189 align:start position:0%
to function
if<00:16:51.279><c> the</c><00:16:51.440><c> king</c><00:16:51.680><c> clash</c><00:16:52.160><c> is</c><00:16:52.320><c> changed</c><00:16:52.959><c> or</c>

00:16:53.189 --> 00:16:53.199 align:start position:0%
if the king clash is changed or
 

00:16:53.199 --> 00:16:56.310 align:start position:0%
if the king clash is changed or
reorganized<00:16:54.079><c> or</c><00:16:54.240><c> its</c><00:16:54.480><c> data</c><00:16:54.800><c> is</c><00:16:54.959><c> renamed</c>

00:16:56.310 --> 00:16:56.320 align:start position:0%
reorganized or its data is renamed
 

00:16:56.320 --> 00:16:58.069 align:start position:0%
reorganized or its data is renamed
then<00:16:56.480><c> the</c><00:16:56.639><c> night</c><00:16:56.880><c> class</c><00:16:57.279><c> would</c><00:16:57.440><c> no</c><00:16:57.680><c> longer</c>

00:16:58.069 --> 00:16:58.079 align:start position:0%
then the night class would no longer
 

00:16:58.079 --> 00:17:01.350 align:start position:0%
then the night class would no longer
work<00:16:58.639><c> and</c><00:16:58.880><c> it</c><00:16:59.120><c> too</c><00:16:59.360><c> would</c><00:16:59.519><c> have</c><00:16:59.680><c> to</c><00:16:59.839><c> be</c><00:17:00.000><c> changed</c>

00:17:01.350 --> 00:17:01.360 align:start position:0%
work and it too would have to be changed
 

00:17:01.360 --> 00:17:03.110 align:start position:0%
work and it too would have to be changed
assuming<00:17:01.839><c> the</c><00:17:02.000><c> rest</c><00:17:02.240><c> of</c><00:17:02.399><c> the</c><00:17:02.560><c> program</c><00:17:02.880><c> was</c>

00:17:03.110 --> 00:17:03.120 align:start position:0%
assuming the rest of the program was
 

00:17:03.120 --> 00:17:04.870 align:start position:0%
assuming the rest of the program was
coded<00:17:03.519><c> in</c><00:17:03.600><c> this</c><00:17:03.839><c> way</c>

00:17:04.870 --> 00:17:04.880 align:start position:0%
coded in this way
 

00:17:04.880 --> 00:17:07.429 align:start position:0%
coded in this way
then<00:17:05.199><c> many</c><00:17:05.600><c> other</c><00:17:05.839><c> classes</c><00:17:06.559><c> would</c><00:17:06.799><c> also</c><00:17:07.199><c> have</c>

00:17:07.429 --> 00:17:07.439 align:start position:0%
then many other classes would also have
 

00:17:07.439 --> 00:17:09.350 align:start position:0%
then many other classes would also have
to<00:17:07.600><c> be</c><00:17:07.760><c> modified</c>

00:17:09.350 --> 00:17:09.360 align:start position:0%
to be modified
 

00:17:09.360 --> 00:17:11.510 align:start position:0%
to be modified
creating<00:17:09.919><c> a</c><00:17:10.079><c> set</c><00:17:10.400><c> interface</c><00:17:11.039><c> through</c><00:17:11.280><c> which</c>

00:17:11.510 --> 00:17:11.520 align:start position:0%
creating a set interface through which
 

00:17:11.520 --> 00:17:13.829 align:start position:0%
creating a set interface through which
classes<00:17:12.000><c> can</c><00:17:12.240><c> interact</c><00:17:12.640><c> with</c><00:17:12.799><c> one</c><00:17:13.039><c> another</c>

00:17:13.829 --> 00:17:13.839 align:start position:0%
classes can interact with one another
 

00:17:13.839 --> 00:17:15.990 align:start position:0%
classes can interact with one another
ensures<00:17:14.319><c> that</c><00:17:14.559><c> each</c><00:17:14.880><c> individual</c><00:17:15.520><c> piece</c><00:17:15.839><c> can</c>

00:17:15.990 --> 00:17:16.000 align:start position:0%
ensures that each individual piece can
 

00:17:16.000 --> 00:17:18.390 align:start position:0%
ensures that each individual piece can
be<00:17:16.240><c> changed</c><00:17:17.039><c> without</c><00:17:17.520><c> creating</c><00:17:18.000><c> a</c><00:17:18.079><c> ripple</c>

00:17:18.390 --> 00:17:18.400 align:start position:0%
be changed without creating a ripple
 

00:17:18.400 --> 00:17:20.710 align:start position:0%
be changed without creating a ripple
effect<00:17:18.799><c> that</c><00:17:19.039><c> causes</c><00:17:19.439><c> the</c><00:17:19.600><c> entire</c><00:17:20.079><c> program</c><00:17:20.559><c> to</c>

00:17:20.710 --> 00:17:20.720 align:start position:0%
effect that causes the entire program to
 

00:17:20.720 --> 00:17:23.909 align:start position:0%
effect that causes the entire program to
have<00:17:20.880><c> the</c><00:17:21.039><c> change</c><00:17:21.360><c> in</c><00:17:21.520><c> response</c>

00:17:23.909 --> 00:17:23.919 align:start position:0%
have the change in response
 

00:17:23.919 --> 00:17:26.150 align:start position:0%
have the change in response
overall<00:17:24.959><c> it's</c><00:17:25.199><c> best</c><00:17:25.439><c> to</c><00:17:25.600><c> keep</c><00:17:25.839><c> in</c><00:17:25.919><c> mind</c>

00:17:26.150 --> 00:17:26.160 align:start position:0%
overall it's best to keep in mind
 

00:17:26.160 --> 00:17:28.470 align:start position:0%
overall it's best to keep in mind
abstraction<00:17:26.959><c> when</c><00:17:27.199><c> writing</c><00:17:27.600><c> object</c><00:17:28.000><c> oriented</c>

00:17:28.470 --> 00:17:28.480 align:start position:0%
abstraction when writing object oriented
 

00:17:28.480 --> 00:17:29.350 align:start position:0%
abstraction when writing object oriented
code

00:17:29.350 --> 00:17:29.360 align:start position:0%
code
 

00:17:29.360 --> 00:17:31.350 align:start position:0%
code
as<00:17:29.520><c> it</c><00:17:29.679><c> allows</c><00:17:30.000><c> the</c><00:17:30.160><c> program</c><00:17:30.559><c> to</c><00:17:30.720><c> be</c><00:17:30.799><c> worked</c><00:17:31.120><c> on</c>

00:17:31.350 --> 00:17:31.360 align:start position:0%
as it allows the program to be worked on
 

00:17:31.360 --> 00:17:33.270 align:start position:0%
as it allows the program to be worked on
incrementally<00:17:32.480><c> and</c><00:17:32.640><c> prevents</c><00:17:33.039><c> it</c><00:17:33.120><c> from</c>

00:17:33.270 --> 00:17:33.280 align:start position:0%
incrementally and prevents it from
 

00:17:33.280 --> 00:17:35.750 align:start position:0%
incrementally and prevents it from
becoming<00:17:33.840><c> completely</c><00:17:34.240><c> entangled</c><00:17:34.880><c> in</c><00:17:35.039><c> itself</c>

00:17:35.750 --> 00:17:35.760 align:start position:0%
becoming completely entangled in itself
 

00:17:35.760 --> 00:17:37.990 align:start position:0%
becoming completely entangled in itself
and<00:17:35.919><c> very</c><00:17:36.160><c> complex</c>

00:17:37.990 --> 00:17:38.000 align:start position:0%
and very complex
 

00:17:38.000 --> 00:17:39.909 align:start position:0%
and very complex
determine<00:17:38.559><c> specific</c><00:17:39.039><c> points</c><00:17:39.360><c> of</c><00:17:39.440><c> contact</c>

00:17:39.909 --> 00:17:39.919 align:start position:0%
determine specific points of contact
 

00:17:39.919 --> 00:17:41.669 align:start position:0%
determine specific points of contact
that<00:17:40.080><c> can</c><00:17:40.240><c> act</c><00:17:40.480><c> as</c><00:17:40.640><c> the</c><00:17:40.799><c> interface</c><00:17:41.280><c> between</c>

00:17:41.669 --> 00:17:41.679 align:start position:0%
that can act as the interface between
 

00:17:41.679 --> 00:17:42.789 align:start position:0%
that can act as the interface between
classes

00:17:42.789 --> 00:17:42.799 align:start position:0%
classes
 

00:17:42.799 --> 00:17:44.789 align:start position:0%
classes
and<00:17:43.039><c> only</c><00:17:43.360><c> worry</c><00:17:43.679><c> about</c><00:17:43.919><c> the</c><00:17:44.080><c> implementation</c>

00:17:44.789 --> 00:17:44.799 align:start position:0%
and only worry about the implementation
 

00:17:44.799 --> 00:17:51.270 align:start position:0%
and only worry about the implementation
behind<00:17:45.280><c> it</c><00:17:45.600><c> when</c><00:17:45.840><c> working</c><00:17:46.160><c> on</c><00:17:46.320><c> that</c><00:17:46.559><c> section</c>

00:17:51.270 --> 00:17:51.280 align:start position:0%
 
 

00:17:51.280 --> 00:17:53.270 align:start position:0%
 
this<00:17:51.679><c> next</c><00:17:52.000><c> section</c><00:17:52.400><c> will</c><00:17:52.559><c> be</c><00:17:52.720><c> tackling</c>

00:17:53.270 --> 00:17:53.280 align:start position:0%
this next section will be tackling
 

00:17:53.280 --> 00:17:54.630 align:start position:0%
this next section will be tackling
inheritance

00:17:54.630 --> 00:17:54.640 align:start position:0%
inheritance
 

00:17:54.640 --> 00:17:56.549 align:start position:0%
inheritance
the<00:17:54.880><c> third</c><00:17:55.200><c> of</c><00:17:55.280><c> the</c><00:17:55.440><c> main</c><00:17:55.679><c> principles</c><00:17:56.400><c> of</c>

00:17:56.549 --> 00:17:56.559 align:start position:0%
the third of the main principles of
 

00:17:56.559 --> 00:17:59.270 align:start position:0%
the third of the main principles of
object<00:17:56.960><c> oriented</c><00:17:57.440><c> programming</c>

00:17:59.270 --> 00:17:59.280 align:start position:0%
object oriented programming
 

00:17:59.280 --> 00:18:01.190 align:start position:0%
object oriented programming
inheritance<00:18:00.000><c> is</c><00:18:00.080><c> the</c><00:18:00.240><c> principle</c><00:18:00.640><c> that</c><00:18:00.880><c> allows</c>

00:18:01.190 --> 00:18:01.200 align:start position:0%
inheritance is the principle that allows
 

00:18:01.200 --> 00:18:04.549 align:start position:0%
inheritance is the principle that allows
you<00:18:01.360><c> to</c><00:18:01.520><c> derive</c><00:18:02.000><c> classes</c><00:18:02.640><c> from</c><00:18:02.960><c> other</c><00:18:03.200><c> classes</c>

00:18:04.549 --> 00:18:04.559 align:start position:0%
you to derive classes from other classes
 

00:18:04.559 --> 00:18:07.510 align:start position:0%
you to derive classes from other classes
classes<00:18:05.200><c> can</c><00:18:05.520><c> inherit</c><00:18:06.480><c> certain</c><00:18:06.880><c> methods</c><00:18:07.360><c> and</c>

00:18:07.510 --> 00:18:07.520 align:start position:0%
classes can inherit certain methods and
 

00:18:07.520 --> 00:18:10.150 align:start position:0%
classes can inherit certain methods and
attributes<00:18:08.160><c> from</c><00:18:08.480><c> another</c><00:18:08.880><c> class</c>

00:18:10.150 --> 00:18:10.160 align:start position:0%
attributes from another class
 

00:18:10.160 --> 00:18:12.390 align:start position:0%
attributes from another class
we<00:18:10.320><c> will</c><00:18:10.480><c> get</c><00:18:10.799><c> into</c><00:18:11.200><c> exactly</c><00:18:11.679><c> what</c><00:18:11.840><c> this</c><00:18:12.080><c> means</c>

00:18:12.390 --> 00:18:12.400 align:start position:0%
we will get into exactly what this means
 

00:18:12.400 --> 00:18:14.870 align:start position:0%
we will get into exactly what this means
in<00:18:12.559><c> a</c><00:18:12.640><c> moment</c><00:18:13.440><c> but</c><00:18:13.760><c> first</c><00:18:14.160><c> let's</c><00:18:14.400><c> look</c><00:18:14.559><c> at</c><00:18:14.720><c> an</c>

00:18:14.870 --> 00:18:14.880 align:start position:0%
in a moment but first let's look at an
 

00:18:14.880 --> 00:18:16.549 align:start position:0%
in a moment but first let's look at an
example

00:18:16.549 --> 00:18:16.559 align:start position:0%
example
 

00:18:16.559 --> 00:18:19.029 align:start position:0%
example
let's<00:18:16.799><c> say</c><00:18:16.960><c> you</c><00:18:17.120><c> are</c><00:18:17.280><c> programming</c><00:18:17.760><c> a</c><00:18:17.840><c> game</c>

00:18:19.029 --> 00:18:19.039 align:start position:0%
let's say you are programming a game
 

00:18:19.039 --> 00:18:21.430 align:start position:0%
let's say you are programming a game
in<00:18:19.120><c> this</c><00:18:19.440><c> game</c><00:18:20.080><c> the</c><00:18:20.240><c> player</c><00:18:20.559><c> has</c><00:18:20.799><c> access</c><00:18:21.200><c> to</c>

00:18:21.430 --> 00:18:21.440 align:start position:0%
in this game the player has access to
 

00:18:21.440 --> 00:18:24.230 align:start position:0%
in this game the player has access to
weapons<00:18:21.840><c> to</c><00:18:22.000><c> fight</c><00:18:22.240><c> their</c><00:18:22.480><c> enemies</c>

00:18:24.230 --> 00:18:24.240 align:start position:0%
weapons to fight their enemies
 

00:18:24.240 --> 00:18:26.870 align:start position:0%
weapons to fight their enemies
to<00:18:24.400><c> begin</c><00:18:25.280><c> you</c><00:18:25.520><c> may</c><00:18:25.760><c> establish</c><00:18:26.320><c> a</c><00:18:26.480><c> weapons</c>

00:18:26.870 --> 00:18:26.880 align:start position:0%
to begin you may establish a weapons
 

00:18:26.880 --> 00:18:29.750 align:start position:0%
to begin you may establish a weapons
class<00:18:28.160><c> this</c><00:18:28.480><c> class</c><00:18:28.799><c> would</c><00:18:28.960><c> contain</c><00:18:29.360><c> many</c><00:18:29.679><c> of</c>

00:18:29.750 --> 00:18:29.760 align:start position:0%
class this class would contain many of
 

00:18:29.760 --> 00:18:31.830 align:start position:0%
class this class would contain many of
the<00:18:29.919><c> pertinent</c><00:18:30.480><c> attributes</c><00:18:31.120><c> and</c><00:18:31.280><c> methods</c>

00:18:31.830 --> 00:18:31.840 align:start position:0%
the pertinent attributes and methods
 

00:18:31.840 --> 00:18:33.510 align:start position:0%
the pertinent attributes and methods
common<00:18:32.160><c> to</c><00:18:32.320><c> weapons</c>

00:18:33.510 --> 00:18:33.520 align:start position:0%
common to weapons
 

00:18:33.520 --> 00:18:35.110 align:start position:0%
common to weapons
for<00:18:33.760><c> instance</c><00:18:34.240><c> an</c><00:18:34.480><c> attribute</c><00:18:34.960><c> that</c>

00:18:35.110 --> 00:18:35.120 align:start position:0%
for instance an attribute that
 

00:18:35.120 --> 00:18:36.789 align:start position:0%
for instance an attribute that
represents<00:18:35.600><c> the</c><00:18:35.760><c> damage</c><00:18:36.160><c> that</c><00:18:36.320><c> the</c><00:18:36.400><c> weapon</c>

00:18:36.789 --> 00:18:36.799 align:start position:0%
represents the damage that the weapon
 

00:18:36.799 --> 00:18:37.750 align:start position:0%
represents the damage that the weapon
deals

00:18:37.750 --> 00:18:37.760 align:start position:0%
deals
 

00:18:37.760 --> 00:18:39.430 align:start position:0%
deals
and<00:18:38.000><c> a</c><00:18:38.080><c> method</c><00:18:38.400><c> that</c><00:18:38.559><c> deals</c><00:18:38.880><c> damage</c><00:18:39.200><c> to</c><00:18:39.360><c> an</c>

00:18:39.430 --> 00:18:39.440 align:start position:0%
and a method that deals damage to an
 

00:18:39.440 --> 00:18:41.750 align:start position:0%
and a method that deals damage to an
opponent<00:18:39.919><c> when</c><00:18:40.160><c> called</c>

00:18:41.750 --> 00:18:41.760 align:start position:0%
opponent when called
 

00:18:41.760 --> 00:18:43.510 align:start position:0%
opponent when called
you<00:18:41.919><c> then</c><00:18:42.160><c> would</c><00:18:42.320><c> want</c><00:18:42.640><c> some</c><00:18:42.799><c> more</c><00:18:42.960><c> classes</c><00:18:43.440><c> to</c>

00:18:43.510 --> 00:18:43.520 align:start position:0%
you then would want some more classes to
 

00:18:43.520 --> 00:18:46.070 align:start position:0%
you then would want some more classes to
represent<00:18:44.080><c> specific</c><00:18:44.640><c> weapons</c><00:18:45.440><c> such</c><00:18:45.679><c> as</c><00:18:45.919><c> a</c>

00:18:46.070 --> 00:18:46.080 align:start position:0%
represent specific weapons such as a
 

00:18:46.080 --> 00:18:47.990 align:start position:0%
represent specific weapons such as a
sword<00:18:46.480><c> or</c><00:18:46.720><c> a</c><00:18:46.799><c> club</c>

00:18:47.990 --> 00:18:48.000 align:start position:0%
sword or a club
 

00:18:48.000 --> 00:18:50.070 align:start position:0%
sword or a club
these<00:18:48.320><c> classes</c><00:18:49.120><c> would</c><00:18:49.360><c> act</c><00:18:49.520><c> differently</c><00:18:49.919><c> from</c>

00:18:50.070 --> 00:18:50.080 align:start position:0%
these classes would act differently from
 

00:18:50.080 --> 00:18:52.470 align:start position:0%
these classes would act differently from
one<00:18:50.320><c> another</c><00:18:51.120><c> as</c><00:18:51.360><c> swords</c><00:18:51.760><c> and</c><00:18:51.840><c> clubs</c><00:18:52.320><c> have</c>

00:18:52.470 --> 00:18:52.480 align:start position:0%
one another as swords and clubs have
 

00:18:52.480 --> 00:18:54.630 align:start position:0%
one another as swords and clubs have
certain<00:18:52.880><c> different</c><00:18:53.120><c> attributes</c><00:18:54.080><c> such</c><00:18:54.320><c> as</c><00:18:54.559><c> a</c>

00:18:54.630 --> 00:18:54.640 align:start position:0%
certain different attributes such as a
 

00:18:54.640 --> 00:18:56.390 align:start position:0%
certain different attributes such as a
sword<00:18:55.039><c> being</c><00:18:55.200><c> made</c><00:18:55.440><c> for</c><00:18:55.600><c> cutting</c>

00:18:56.390 --> 00:18:56.400 align:start position:0%
sword being made for cutting
 

00:18:56.400 --> 00:18:58.789 align:start position:0%
sword being made for cutting
whereas<00:18:56.799><c> a</c><00:18:56.880><c> club</c><00:18:57.200><c> is</c><00:18:57.360><c> blunt</c>

00:18:58.789 --> 00:18:58.799 align:start position:0%
whereas a club is blunt
 

00:18:58.799 --> 00:19:01.029 align:start position:0%
whereas a club is blunt
these<00:18:59.200><c> differences</c><00:18:59.919><c> would</c><00:19:00.080><c> be</c><00:19:00.320><c> represented</c>

00:19:01.029 --> 00:19:01.039 align:start position:0%
these differences would be represented
 

00:19:01.039 --> 00:19:03.590 align:start position:0%
these differences would be represented
in<00:19:01.280><c> different</c><00:19:01.600><c> values</c><00:19:02.160><c> for</c><00:19:02.320><c> their</c><00:19:02.559><c> attributes</c>

00:19:03.590 --> 00:19:03.600 align:start position:0%
in different values for their attributes
 

00:19:03.600 --> 00:19:05.669 align:start position:0%
in different values for their attributes
as<00:19:03.840><c> well</c><00:19:04.000><c> as</c><00:19:04.240><c> possibly</c><00:19:04.720><c> different</c><00:19:05.120><c> attributes</c>

00:19:05.669 --> 00:19:05.679 align:start position:0%
as well as possibly different attributes
 

00:19:05.679 --> 00:19:07.110 align:start position:0%
as well as possibly different attributes
altogether

00:19:07.110 --> 00:19:07.120 align:start position:0%
altogether
 

00:19:07.120 --> 00:19:08.150 align:start position:0%
altogether
however

00:19:08.150 --> 00:19:08.160 align:start position:0%
however
 

00:19:08.160 --> 00:19:10.710 align:start position:0%
however
they<00:19:08.400><c> do</c><00:19:08.640><c> share</c><00:19:08.960><c> much</c><00:19:09.200><c> of</c><00:19:09.280><c> the</c><00:19:09.440><c> same</c><00:19:09.600><c> behavior</c>

00:19:10.710 --> 00:19:10.720 align:start position:0%
they do share much of the same behavior
 

00:19:10.720 --> 00:19:12.870 align:start position:0%
they do share much of the same behavior
as<00:19:10.960><c> they</c><00:19:11.120><c> are</c><00:19:11.280><c> both</c><00:19:11.520><c> members</c><00:19:12.080><c> of</c><00:19:12.240><c> the</c><00:19:12.400><c> weapons</c>

00:19:12.870 --> 00:19:12.880 align:start position:0%
as they are both members of the weapons
 

00:19:12.880 --> 00:19:14.150 align:start position:0%
as they are both members of the weapons
class

00:19:14.150 --> 00:19:14.160 align:start position:0%
class
 

00:19:14.160 --> 00:19:15.590 align:start position:0%
class
in<00:19:14.320><c> this</c><00:19:14.640><c> case</c>

00:19:15.590 --> 00:19:15.600 align:start position:0%
in this case
 

00:19:15.600 --> 00:19:18.390 align:start position:0%
in this case
the<00:19:15.760><c> weapon</c><00:19:16.160><c> class</c><00:19:16.559><c> would</c><00:19:16.720><c> be</c><00:19:16.880><c> the</c><00:19:17.039><c> superclass</c>

00:19:18.390 --> 00:19:18.400 align:start position:0%
the weapon class would be the superclass
 

00:19:18.400 --> 00:19:20.390 align:start position:0%
the weapon class would be the superclass
and<00:19:18.559><c> the</c><00:19:18.799><c> sword</c><00:19:19.280><c> and</c><00:19:19.440><c> club</c><00:19:19.760><c> classes</c><00:19:20.160><c> that</c>

00:19:20.390 --> 00:19:20.400 align:start position:0%
and the sword and club classes that
 

00:19:20.400 --> 00:19:22.310 align:start position:0%
and the sword and club classes that
extend<00:19:20.799><c> the</c><00:19:20.880><c> weapon</c><00:19:21.280><c> class</c><00:19:21.919><c> would</c><00:19:22.080><c> be</c>

00:19:22.310 --> 00:19:22.320 align:start position:0%
extend the weapon class would be
 

00:19:22.320 --> 00:19:25.190 align:start position:0%
extend the weapon class would be
subclasses<00:19:23.120><c> in</c><00:19:23.280><c> relation</c><00:19:23.679><c> to</c><00:19:23.919><c> it</c>

00:19:25.190 --> 00:19:25.200 align:start position:0%
subclasses in relation to it
 

00:19:25.200 --> 00:19:27.590 align:start position:0%
subclasses in relation to it
many<00:19:25.520><c> of</c><00:19:25.679><c> the</c><00:19:25.919><c> attributes</c><00:19:26.720><c> and</c><00:19:26.880><c> methods</c>

00:19:27.590 --> 00:19:27.600 align:start position:0%
many of the attributes and methods
 

00:19:27.600 --> 00:19:30.070 align:start position:0%
many of the attributes and methods
associated<00:19:28.320><c> with</c><00:19:28.480><c> the</c><00:19:28.640><c> weapon</c><00:19:29.039><c> class</c><00:19:29.840><c> would</c>

00:19:30.070 --> 00:19:30.080 align:start position:0%
associated with the weapon class would
 

00:19:30.080 --> 00:19:33.669 align:start position:0%
associated with the weapon class would
also<00:19:30.480><c> be</c><00:19:30.640><c> present</c><00:19:31.360><c> in</c><00:19:31.520><c> its</c><00:19:31.679><c> subclasses</c>

00:19:33.669 --> 00:19:33.679 align:start position:0%
also be present in its subclasses
 

00:19:33.679 --> 00:19:36.470 align:start position:0%
also be present in its subclasses
any<00:19:33.919><c> given</c><00:19:34.320><c> sword</c><00:19:34.720><c> or</c><00:19:34.960><c> club</c><00:19:35.679><c> would</c><00:19:35.919><c> also</c><00:19:36.240><c> want</c>

00:19:36.470 --> 00:19:36.480 align:start position:0%
any given sword or club would also want
 

00:19:36.480 --> 00:19:38.390 align:start position:0%
any given sword or club would also want
access<00:19:36.880><c> to</c><00:19:37.039><c> the</c><00:19:37.200><c> methods</c><00:19:37.600><c> that</c><00:19:37.840><c> allow</c><00:19:38.080><c> them</c><00:19:38.320><c> to</c>

00:19:38.390 --> 00:19:38.400 align:start position:0%
access to the methods that allow them to
 

00:19:38.400 --> 00:19:39.750 align:start position:0%
access to the methods that allow them to
deal<00:19:38.720><c> damage</c>

00:19:39.750 --> 00:19:39.760 align:start position:0%
deal damage
 

00:19:39.760 --> 00:19:41.590 align:start position:0%
deal damage
as<00:19:39.919><c> well</c><00:19:40.160><c> as</c><00:19:40.320><c> the</c><00:19:40.480><c> attributes</c><00:19:41.039><c> that</c><00:19:41.200><c> detail</c>

00:19:41.590 --> 00:19:41.600 align:start position:0%
as well as the attributes that detail
 

00:19:41.600 --> 00:19:43.750 align:start position:0%
as well as the attributes that detail
how<00:19:41.840><c> much</c><00:19:42.400><c> and</c><00:19:42.559><c> what</c><00:19:42.799><c> type</c><00:19:43.120><c> of</c><00:19:43.200><c> damage</c><00:19:43.600><c> they</c>

00:19:43.750 --> 00:19:43.760 align:start position:0%
how much and what type of damage they
 

00:19:43.760 --> 00:19:45.270 align:start position:0%
how much and what type of damage they
deal

00:19:45.270 --> 00:19:45.280 align:start position:0%
deal
 

00:19:45.280 --> 00:19:47.350 align:start position:0%
deal
the<00:19:45.440><c> class</c><00:19:45.840><c> hierarchy</c><00:19:46.480><c> does</c><00:19:46.720><c> not</c><00:19:46.880><c> tend</c><00:19:47.120><c> to</c><00:19:47.200><c> be</c>

00:19:47.350 --> 00:19:47.360 align:start position:0%
the class hierarchy does not tend to be
 

00:19:47.360 --> 00:19:49.110 align:start position:0%
the class hierarchy does not tend to be
so<00:19:47.600><c> small</c><00:19:48.160><c> however</c>

00:19:49.110 --> 00:19:49.120 align:start position:0%
so small however
 

00:19:49.120 --> 00:19:51.270 align:start position:0%
so small however
as<00:19:49.360><c> in</c><00:19:49.520><c> most</c><00:19:49.760><c> cases</c><00:19:50.400><c> there</c><00:19:50.640><c> are</c><00:19:50.720><c> many</c><00:19:51.039><c> more</c>

00:19:51.270 --> 00:19:51.280 align:start position:0%
as in most cases there are many more
 

00:19:51.280 --> 00:19:53.510 align:start position:0%
as in most cases there are many more
layers<00:19:51.679><c> than</c><00:19:51.919><c> just</c><00:19:52.160><c> one</c><00:19:52.400><c> superclass</c><00:19:53.280><c> and</c><00:19:53.440><c> a</c>

00:19:53.510 --> 00:19:53.520 align:start position:0%
layers than just one superclass and a
 

00:19:53.520 --> 00:19:55.990 align:start position:0%
layers than just one superclass and a
couple<00:19:53.760><c> of</c><00:19:53.919><c> subclasses</c>

00:19:55.990 --> 00:19:56.000 align:start position:0%
couple of subclasses
 

00:19:56.000 --> 00:19:58.150 align:start position:0%
couple of subclasses
the<00:19:56.160><c> weapon</c><00:19:56.559><c> class</c><00:19:57.039><c> may</c><00:19:57.200><c> be</c><00:19:57.360><c> a</c><00:19:57.440><c> subclass</c><00:19:57.919><c> to</c><00:19:58.080><c> a</c>

00:19:58.150 --> 00:19:58.160 align:start position:0%
the weapon class may be a subclass to a
 

00:19:58.160 --> 00:19:59.990 align:start position:0%
the weapon class may be a subclass to a
broader<00:19:58.640><c> items</c><00:19:59.120><c> class</c>

00:19:59.990 --> 00:20:00.000 align:start position:0%
broader items class
 

00:20:00.000 --> 00:20:01.270 align:start position:0%
broader items class
which<00:20:00.240><c> could</c><00:20:00.400><c> contain</c><00:20:00.799><c> many</c><00:20:01.120><c> other</c>

00:20:01.270 --> 00:20:01.280 align:start position:0%
which could contain many other
 

00:20:01.280 --> 00:20:04.830 align:start position:0%
which could contain many other
subclasses<00:20:02.240><c> with</c><00:20:02.559><c> subclasses</c><00:20:03.120><c> of</c><00:20:03.280><c> their</c><00:20:03.440><c> own</c>

00:20:04.830 --> 00:20:04.840 align:start position:0%
subclasses with subclasses of their own
 

00:20:04.840 --> 00:20:07.110 align:start position:0%
subclasses with subclasses of their own
additionally<00:20:05.919><c> you</c><00:20:06.080><c> may</c><00:20:06.320><c> include</c><00:20:06.640><c> a</c><00:20:06.799><c> wider</c>

00:20:07.110 --> 00:20:07.120 align:start position:0%
additionally you may include a wider
 

00:20:07.120 --> 00:20:09.110 align:start position:0%
additionally you may include a wider
variety<00:20:07.520><c> of</c><00:20:07.679><c> weapons</c><00:20:08.159><c> than</c><00:20:08.320><c> just</c><00:20:08.559><c> swords</c><00:20:08.960><c> and</c>

00:20:09.110 --> 00:20:09.120 align:start position:0%
variety of weapons than just swords and
 

00:20:09.120 --> 00:20:10.230 align:start position:0%
variety of weapons than just swords and
clubs

00:20:10.230 --> 00:20:10.240 align:start position:0%
clubs
 

00:20:10.240 --> 00:20:13.190 align:start position:0%
clubs
as<00:20:10.480><c> well</c><00:20:10.799><c> as</c><00:20:11.120><c> multiple</c><00:20:11.600><c> types</c><00:20:11.919><c> of</c><00:20:12.080><c> swords</c><00:20:12.960><c> that</c>

00:20:13.190 --> 00:20:13.200 align:start position:0%
as well as multiple types of swords that
 

00:20:13.200 --> 00:20:15.510 align:start position:0%
as well as multiple types of swords that
would<00:20:13.440><c> require</c><00:20:14.000><c> different</c><00:20:14.400><c> behaviors</c><00:20:15.360><c> and</c>

00:20:15.510 --> 00:20:15.520 align:start position:0%
would require different behaviors and
 

00:20:15.520 --> 00:20:18.149 align:start position:0%
would require different behaviors and
thus<00:20:15.760><c> their</c><00:20:16.000><c> own</c><00:20:16.240><c> subclasses</c>

00:20:18.149 --> 00:20:18.159 align:start position:0%
thus their own subclasses
 

00:20:18.159 --> 00:20:20.070 align:start position:0%
thus their own subclasses
when<00:20:18.320><c> you</c><00:20:18.480><c> are</c><00:20:18.640><c> writing</c><00:20:19.039><c> object-oriented</c>

00:20:20.070 --> 00:20:20.080 align:start position:0%
when you are writing object-oriented
 

00:20:20.080 --> 00:20:21.350 align:start position:0%
when you are writing object-oriented
code

00:20:21.350 --> 00:20:21.360 align:start position:0%
code
 

00:20:21.360 --> 00:20:23.990 align:start position:0%
code
many<00:20:21.679><c> of</c><00:20:21.840><c> the</c><00:20:21.919><c> classes</c><00:20:22.480><c> you</c><00:20:22.640><c> create</c><00:20:23.520><c> will</c><00:20:23.760><c> fit</c>

00:20:23.990 --> 00:20:24.000 align:start position:0%
many of the classes you create will fit
 

00:20:24.000 --> 00:20:26.870 align:start position:0%
many of the classes you create will fit
somewhere<00:20:24.640><c> in</c><00:20:24.720><c> the</c><00:20:24.880><c> broader</c><00:20:25.280><c> class</c><00:20:25.760><c> hierarchy</c>

00:20:26.870 --> 00:20:26.880 align:start position:0%
somewhere in the broader class hierarchy
 

00:20:26.880 --> 00:20:28.950 align:start position:0%
somewhere in the broader class hierarchy
which<00:20:27.200><c> acts</c><00:20:27.520><c> as</c><00:20:27.679><c> a</c><00:20:27.760><c> web</c><00:20:28.000><c> of</c><00:20:28.159><c> classes</c><00:20:28.720><c> with</c>

00:20:28.950 --> 00:20:28.960 align:start position:0%
which acts as a web of classes with
 

00:20:28.960 --> 00:20:31.750 align:start position:0%
which acts as a web of classes with
different<00:20:29.280><c> relationships</c><00:20:29.919><c> to</c><00:20:30.080><c> one</c><00:20:30.320><c> another</c>

00:20:31.750 --> 00:20:31.760 align:start position:0%
different relationships to one another
 

00:20:31.760 --> 00:20:33.990 align:start position:0%
different relationships to one another
the<00:20:31.919><c> next</c><00:20:32.400><c> important</c><00:20:32.880><c> topic</c><00:20:33.280><c> to</c><00:20:33.440><c> cover</c><00:20:33.919><c> in</c>

00:20:33.990 --> 00:20:34.000 align:start position:0%
the next important topic to cover in
 

00:20:34.000 --> 00:20:36.390 align:start position:0%
the next important topic to cover in
terms<00:20:34.320><c> of</c><00:20:34.480><c> inheritance</c><00:20:35.679><c> is</c><00:20:35.840><c> the</c><00:20:36.000><c> access</c>

00:20:36.390 --> 00:20:36.400 align:start position:0%
terms of inheritance is the access
 

00:20:36.400 --> 00:20:38.710 align:start position:0%
terms of inheritance is the access
modifiers<00:20:37.360><c> that</c><00:20:37.600><c> change</c><00:20:37.919><c> which</c><00:20:38.240><c> classes</c>

00:20:38.710 --> 00:20:38.720 align:start position:0%
modifiers that change which classes
 

00:20:38.720 --> 00:20:41.510 align:start position:0%
modifiers that change which classes
access<00:20:39.200><c> which</c><00:20:39.520><c> attributes</c><00:20:40.400><c> methods</c><00:20:41.039><c> or</c><00:20:41.280><c> even</c>

00:20:41.510 --> 00:20:41.520 align:start position:0%
access which attributes methods or even
 

00:20:41.520 --> 00:20:43.909 align:start position:0%
access which attributes methods or even
classes<00:20:42.080><c> as</c><00:20:42.240><c> a</c><00:20:42.320><c> whole</c>

00:20:43.909 --> 00:20:43.919 align:start position:0%
classes as a whole
 

00:20:43.919 --> 00:20:46.070 align:start position:0%
classes as a whole
there<00:20:44.159><c> are</c><00:20:44.400><c> three</c><00:20:44.720><c> main</c><00:20:45.039><c> access</c><00:20:45.440><c> modifiers</c>

00:20:46.070 --> 00:20:46.080 align:start position:0%
there are three main access modifiers
 

00:20:46.080 --> 00:20:48.230 align:start position:0%
there are three main access modifiers
that<00:20:46.240><c> we</c><00:20:46.400><c> will</c><00:20:46.559><c> be</c><00:20:46.720><c> discussing</c>

00:20:48.230 --> 00:20:48.240 align:start position:0%
that we will be discussing
 

00:20:48.240 --> 00:20:49.430 align:start position:0%
that we will be discussing
public

00:20:49.430 --> 00:20:49.440 align:start position:0%
public
 

00:20:49.440 --> 00:20:50.470 align:start position:0%
public
private

00:20:50.470 --> 00:20:50.480 align:start position:0%
private
 

00:20:50.480 --> 00:20:52.149 align:start position:0%
private
and<00:20:50.720><c> protected</c>

00:20:52.149 --> 00:20:52.159 align:start position:0%
and protected
 

00:20:52.159 --> 00:20:55.190 align:start position:0%
and protected
let's<00:20:52.480><c> begin</c><00:20:52.799><c> with</c><00:20:53.039><c> the</c><00:20:53.200><c> public</c><00:20:53.520><c> modifier</c>

00:20:55.190 --> 00:20:55.200 align:start position:0%
let's begin with the public modifier
 

00:20:55.200 --> 00:20:57.430 align:start position:0%
let's begin with the public modifier
public<00:20:55.760><c> is</c><00:20:55.919><c> probably</c><00:20:56.400><c> the</c><00:20:56.559><c> most</c><00:20:56.880><c> simple</c><00:20:57.360><c> of</c>

00:20:57.430 --> 00:20:57.440 align:start position:0%
public is probably the most simple of
 

00:20:57.440 --> 00:20:59.510 align:start position:0%
public is probably the most simple of
the<00:20:57.600><c> modifiers</c>

00:20:59.510 --> 00:20:59.520 align:start position:0%
the modifiers
 

00:20:59.520 --> 00:21:02.310 align:start position:0%
the modifiers
a<00:20:59.679><c> public</c><00:21:00.159><c> member</c><00:21:00.480><c> or</c><00:21:00.720><c> class</c><00:21:01.440><c> can</c><00:21:01.600><c> be</c><00:21:01.840><c> accessed</c>

00:21:02.310 --> 00:21:02.320 align:start position:0%
a public member or class can be accessed
 

00:21:02.320 --> 00:21:03.909 align:start position:0%
a public member or class can be accessed
from<00:21:02.559><c> anywhere</c>

00:21:03.909 --> 00:21:03.919 align:start position:0%
from anywhere
 

00:21:03.919 --> 00:21:06.230 align:start position:0%
from anywhere
this<00:21:04.240><c> includes</c><00:21:04.640><c> any</c><00:21:04.960><c> superclasses</c>

00:21:06.230 --> 00:21:06.240 align:start position:0%
this includes any superclasses
 

00:21:06.240 --> 00:21:08.470 align:start position:0%
this includes any superclasses
subclasses<00:21:07.360><c> or</c><00:21:07.600><c> anywhere</c><00:21:08.000><c> else</c><00:21:08.240><c> in</c><00:21:08.320><c> the</c>

00:21:08.470 --> 00:21:08.480 align:start position:0%
subclasses or anywhere else in the
 

00:21:08.480 --> 00:21:09.830 align:start position:0%
subclasses or anywhere else in the
program

00:21:09.830 --> 00:21:09.840 align:start position:0%
program
 

00:21:09.840 --> 00:21:11.990 align:start position:0%
program
this<00:21:10.159><c> is</c><00:21:10.320><c> very</c><00:21:10.640><c> useful</c><00:21:11.440><c> when</c><00:21:11.600><c> you</c><00:21:11.679><c> need</c><00:21:11.840><c> to</c>

00:21:11.990 --> 00:21:12.000 align:start position:0%
this is very useful when you need to
 

00:21:12.000 --> 00:21:14.390 align:start position:0%
this is very useful when you need to
have<00:21:12.320><c> access</c><00:21:13.039><c> from</c><00:21:13.360><c> a</c><00:21:13.440><c> wide</c><00:21:13.760><c> variety</c><00:21:14.240><c> of</c>

00:21:14.390 --> 00:21:14.400 align:start position:0%
have access from a wide variety of
 

00:21:14.400 --> 00:21:16.630 align:start position:0%
have access from a wide variety of
places<00:21:14.880><c> in</c><00:21:15.039><c> your</c><00:21:15.280><c> program</c>

00:21:16.630 --> 00:21:16.640 align:start position:0%
places in your program
 

00:21:16.640 --> 00:21:19.029 align:start position:0%
places in your program
to<00:21:16.799><c> better</c><00:21:17.200><c> understand</c><00:21:17.679><c> this</c><00:21:17.919><c> modifier</c><00:21:18.799><c> and</c>

00:21:19.029 --> 00:21:19.039 align:start position:0%
to better understand this modifier and
 

00:21:19.039 --> 00:21:20.390 align:start position:0%
to better understand this modifier and
those<00:21:19.280><c> to</c><00:21:19.440><c> come</c>

00:21:20.390 --> 00:21:20.400 align:start position:0%
those to come
 

00:21:20.400 --> 00:21:22.630 align:start position:0%
those to come
look<00:21:20.640><c> to</c><00:21:20.799><c> the</c><00:21:20.960><c> example</c><00:21:21.440><c> class</c><00:21:21.760><c> hierarchy</c><00:21:22.480><c> on</c>

00:21:22.630 --> 00:21:22.640 align:start position:0%
look to the example class hierarchy on
 

00:21:22.640 --> 00:21:25.669 align:start position:0%
look to the example class hierarchy on
screen<00:21:23.440><c> that</c><00:21:23.679><c> represents</c><00:21:24.240><c> different</c><00:21:24.640><c> foods</c>

00:21:25.669 --> 00:21:25.679 align:start position:0%
screen that represents different foods
 

00:21:25.679 --> 00:21:28.070 align:start position:0%
screen that represents different foods
for<00:21:25.919><c> each</c><00:21:26.159><c> example</c><00:21:26.960><c> the</c><00:21:27.120><c> member</c><00:21:27.520><c> in</c><00:21:27.679><c> question</c>

00:21:28.070 --> 00:21:28.080 align:start position:0%
for each example the member in question
 

00:21:28.080 --> 00:21:30.470 align:start position:0%
for each example the member in question
will<00:21:28.240><c> be</c><00:21:28.320><c> defined</c><00:21:28.799><c> in</c><00:21:28.880><c> the</c><00:21:29.039><c> fruit</c><00:21:29.360><c> class</c>

00:21:30.470 --> 00:21:30.480 align:start position:0%
will be defined in the fruit class
 

00:21:30.480 --> 00:21:32.789 align:start position:0%
will be defined in the fruit class
green<00:21:30.799><c> classes</c><00:21:31.360><c> have</c><00:21:31.679><c> access</c><00:21:32.320><c> and</c><00:21:32.559><c> red</c>

00:21:32.789 --> 00:21:32.799 align:start position:0%
green classes have access and red
 

00:21:32.799 --> 00:21:34.789 align:start position:0%
green classes have access and red
classes<00:21:33.200><c> do</c><00:21:33.440><c> not</c>

00:21:34.789 --> 00:21:34.799 align:start position:0%
classes do not
 

00:21:34.799 --> 00:21:36.070 align:start position:0%
classes do not
as<00:21:35.039><c> you</c><00:21:35.120><c> can</c><00:21:35.360><c> see</c>

00:21:36.070 --> 00:21:36.080 align:start position:0%
as you can see
 

00:21:36.080 --> 00:21:37.990 align:start position:0%
as you can see
a<00:21:36.240><c> public</c><00:21:36.640><c> member</c><00:21:37.039><c> being</c><00:21:37.200><c> defined</c><00:21:37.679><c> in</c><00:21:37.760><c> this</c>

00:21:37.990 --> 00:21:38.000 align:start position:0%
a public member being defined in this
 

00:21:38.000 --> 00:21:40.950 align:start position:0%
a public member being defined in this
class<00:21:38.799><c> or</c><00:21:39.039><c> anywhere</c><00:21:39.440><c> else</c><00:21:40.159><c> can</c><00:21:40.320><c> be</c><00:21:40.559><c> accessed</c>

00:21:40.950 --> 00:21:40.960 align:start position:0%
class or anywhere else can be accessed
 

00:21:40.960 --> 00:21:44.789 align:start position:0%
class or anywhere else can be accessed
from<00:21:41.200><c> anywhere</c><00:21:41.760><c> in</c><00:21:41.840><c> your</c><00:21:42.080><c> program</c>

00:21:44.789 --> 00:21:44.799 align:start position:0%
from anywhere in your program
 

00:21:44.799 --> 00:21:48.230 align:start position:0%
from anywhere in your program
next<00:21:45.440><c> we</c><00:21:45.600><c> have</c><00:21:45.840><c> the</c><00:21:46.080><c> private</c><00:21:46.480><c> modifier</c>

00:21:48.230 --> 00:21:48.240 align:start position:0%
next we have the private modifier
 

00:21:48.240 --> 00:21:50.630 align:start position:0%
next we have the private modifier
private<00:21:48.640><c> members</c><00:21:49.200><c> can</c><00:21:49.440><c> only</c><00:21:49.679><c> be</c><00:21:49.919><c> accessed</c>

00:21:50.630 --> 00:21:50.640 align:start position:0%
private members can only be accessed
 

00:21:50.640 --> 00:21:52.710 align:start position:0%
private members can only be accessed
from<00:21:50.799><c> within</c><00:21:51.200><c> the</c><00:21:51.360><c> same</c><00:21:51.760><c> class</c><00:21:52.320><c> that</c><00:21:52.559><c> the</c>

00:21:52.710 --> 00:21:52.720 align:start position:0%
from within the same class that the
 

00:21:52.720 --> 00:21:54.950 align:start position:0%
from within the same class that the
member<00:21:53.120><c> is</c><00:21:53.280><c> defined</c>

00:21:54.950 --> 00:21:54.960 align:start position:0%
member is defined
 

00:21:54.960 --> 00:21:57.270 align:start position:0%
member is defined
this<00:21:55.200><c> is</c><00:21:55.360><c> best</c><00:21:55.679><c> to</c><00:21:55.840><c> use</c><00:21:56.480><c> if</c><00:21:56.640><c> you</c><00:21:56.799><c> do</c><00:21:56.960><c> not</c><00:21:57.120><c> need</c>

00:21:57.270 --> 00:21:57.280 align:start position:0%
this is best to use if you do not need
 

00:21:57.280 --> 00:21:59.590 align:start position:0%
this is best to use if you do not need
this<00:21:57.520><c> information</c><00:21:58.240><c> accessed</c><00:21:58.880><c> from</c><00:21:59.120><c> anywhere</c>

00:21:59.590 --> 00:21:59.600 align:start position:0%
this information accessed from anywhere
 

00:21:59.600 --> 00:22:01.590 align:start position:0%
this information accessed from anywhere
else<00:21:59.840><c> in</c><00:21:59.919><c> the</c><00:22:00.000><c> program</c>

00:22:01.590 --> 00:22:01.600 align:start position:0%
else in the program
 

00:22:01.600 --> 00:22:02.870 align:start position:0%
else in the program
additionally

00:22:02.870 --> 00:22:02.880 align:start position:0%
additionally
 

00:22:02.880 --> 00:22:05.029 align:start position:0%
additionally
this<00:22:03.200><c> allows</c><00:22:03.520><c> you</c><00:22:03.679><c> to</c><00:22:03.840><c> create</c><00:22:04.320><c> other</c><00:22:04.640><c> private</c>

00:22:05.029 --> 00:22:05.039 align:start position:0%
this allows you to create other private
 

00:22:05.039 --> 00:22:07.029 align:start position:0%
this allows you to create other private
members<00:22:05.600><c> of</c><00:22:05.679><c> the</c><00:22:05.840><c> same</c><00:22:06.159><c> name</c><00:22:06.480><c> in</c><00:22:06.720><c> separate</c>

00:22:07.029 --> 00:22:07.039 align:start position:0%
members of the same name in separate
 

00:22:07.039 --> 00:22:09.590 align:start position:0%
members of the same name in separate
classes<00:22:08.080><c> which</c><00:22:08.320><c> will</c><00:22:08.480><c> not</c><00:22:08.720><c> conflict</c><00:22:09.280><c> with</c><00:22:09.440><c> one</c>

00:22:09.590 --> 00:22:09.600 align:start position:0%
classes which will not conflict with one
 

00:22:09.600 --> 00:22:11.909 align:start position:0%
classes which will not conflict with one
another<00:22:10.480><c> due</c><00:22:10.640><c> to</c><00:22:10.720><c> their</c><00:22:10.960><c> private</c><00:22:11.440><c> access</c>

00:22:11.909 --> 00:22:11.919 align:start position:0%
another due to their private access
 

00:22:11.919 --> 00:22:13.590 align:start position:0%
another due to their private access
modifier

00:22:13.590 --> 00:22:13.600 align:start position:0%
modifier
 

00:22:13.600 --> 00:22:15.830 align:start position:0%
modifier
as<00:22:13.840><c> you</c><00:22:14.000><c> can</c><00:22:14.159><c> see</c><00:22:14.720><c> on</c><00:22:14.799><c> the</c><00:22:15.039><c> example</c><00:22:15.440><c> class</c>

00:22:15.830 --> 00:22:15.840 align:start position:0%
as you can see on the example class
 

00:22:15.840 --> 00:22:17.110 align:start position:0%
as you can see on the example class
hierarchy

00:22:17.110 --> 00:22:17.120 align:start position:0%
hierarchy
 

00:22:17.120 --> 00:22:19.029 align:start position:0%
hierarchy
a<00:22:17.280><c> private</c><00:22:17.760><c> member</c><00:22:18.080><c> defined</c><00:22:18.559><c> in</c><00:22:18.640><c> the</c><00:22:18.799><c> fruit</c>

00:22:19.029 --> 00:22:19.039 align:start position:0%
a private member defined in the fruit
 

00:22:19.039 --> 00:22:19.990 align:start position:0%
a private member defined in the fruit
class

00:22:19.990 --> 00:22:20.000 align:start position:0%
class
 

00:22:20.000 --> 00:22:22.230 align:start position:0%
class
can<00:22:20.240><c> only</c><00:22:20.559><c> be</c><00:22:20.799><c> accessed</c><00:22:21.440><c> inside</c><00:22:21.840><c> the</c><00:22:22.000><c> fruit</c>

00:22:22.230 --> 00:22:22.240 align:start position:0%
can only be accessed inside the fruit
 

00:22:22.240 --> 00:22:24.230 align:start position:0%
can only be accessed inside the fruit
class

00:22:24.230 --> 00:22:24.240 align:start position:0%
class
 

00:22:24.240 --> 00:22:27.029 align:start position:0%
class
we<00:22:24.400><c> then</c><00:22:24.640><c> have</c><00:22:24.799><c> the</c><00:22:25.039><c> protected</c><00:22:25.600><c> modifier</c>

00:22:27.029 --> 00:22:27.039 align:start position:0%
we then have the protected modifier
 

00:22:27.039 --> 00:22:29.190 align:start position:0%
we then have the protected modifier
a<00:22:27.200><c> protected</c><00:22:27.760><c> variable</c><00:22:28.480><c> can</c><00:22:28.640><c> be</c><00:22:28.799><c> accessed</c>

00:22:29.190 --> 00:22:29.200 align:start position:0%
a protected variable can be accessed
 

00:22:29.200 --> 00:22:31.590 align:start position:0%
a protected variable can be accessed
from<00:22:29.360><c> within</c><00:22:29.679><c> the</c><00:22:29.840><c> class</c><00:22:30.159><c> it</c><00:22:30.320><c> is</c><00:22:30.400><c> defined</c>

00:22:31.590 --> 00:22:31.600 align:start position:0%
from within the class it is defined
 

00:22:31.600 --> 00:22:34.950 align:start position:0%
from within the class it is defined
as<00:22:31.760><c> well</c><00:22:31.919><c> as</c><00:22:32.159><c> any</c><00:22:32.400><c> subclasses</c><00:22:33.120><c> of</c><00:22:33.280><c> that</c><00:22:33.520><c> class</c>

00:22:34.950 --> 00:22:34.960 align:start position:0%
as well as any subclasses of that class
 

00:22:34.960 --> 00:22:36.070 align:start position:0%
as well as any subclasses of that class
essentially

00:22:36.070 --> 00:22:36.080 align:start position:0%
essentially
 

00:22:36.080 --> 00:22:38.149 align:start position:0%
essentially
protected<00:22:36.640><c> variables</c><00:22:37.360><c> are</c><00:22:37.520><c> private</c><00:22:37.919><c> to</c><00:22:38.000><c> the</c>

00:22:38.149 --> 00:22:38.159 align:start position:0%
protected variables are private to the
 

00:22:38.159 --> 00:22:41.190 align:start position:0%
protected variables are private to the
class<00:22:38.480><c> hierarchy</c><00:22:39.200><c> that</c><00:22:39.360><c> they</c><00:22:39.520><c> are</c><00:22:39.600><c> defined</c><00:22:40.080><c> in</c>

00:22:41.190 --> 00:22:41.200 align:start position:0%
class hierarchy that they are defined in
 

00:22:41.200 --> 00:22:43.029 align:start position:0%
class hierarchy that they are defined in
this<00:22:41.440><c> can</c><00:22:41.600><c> be</c><00:22:41.760><c> seen</c><00:22:42.080><c> in</c><00:22:42.159><c> the</c><00:22:42.320><c> example</c><00:22:42.799><c> class</c>

00:22:43.029 --> 00:22:43.039 align:start position:0%
this can be seen in the example class
 

00:22:43.039 --> 00:22:49.510 align:start position:0%
this can be seen in the example class
hierarchy<00:22:43.919><c> right</c><00:22:44.159><c> now</c>

00:22:49.510 --> 00:22:49.520 align:start position:0%
 
 

00:22:49.520 --> 00:22:51.750 align:start position:0%
 
in<00:22:49.679><c> this</c><00:22:50.000><c> final</c><00:22:50.480><c> section</c><00:22:51.200><c> we</c><00:22:51.360><c> will</c><00:22:51.600><c> be</c>

00:22:51.750 --> 00:22:51.760 align:start position:0%
in this final section we will be
 

00:22:51.760 --> 00:22:53.750 align:start position:0%
in this final section we will be
covering<00:22:52.320><c> the</c><00:22:52.480><c> final</c><00:22:52.960><c> of</c><00:22:53.039><c> the</c><00:22:53.200><c> four</c><00:22:53.520><c> main</c>

00:22:53.750 --> 00:22:53.760 align:start position:0%
covering the final of the four main
 

00:22:53.760 --> 00:22:55.029 align:start position:0%
covering the final of the four main
principles

00:22:55.029 --> 00:22:55.039 align:start position:0%
principles
 

00:22:55.039 --> 00:22:56.630 align:start position:0%
principles
polymorphism

00:22:56.630 --> 00:22:56.640 align:start position:0%
polymorphism
 

00:22:56.640 --> 00:22:59.110 align:start position:0%
polymorphism
polymorphism<00:22:57.600><c> describes</c><00:22:58.240><c> methods</c><00:22:58.720><c> that</c><00:22:58.960><c> are</c>

00:22:59.110 --> 00:22:59.120 align:start position:0%
polymorphism describes methods that are
 

00:22:59.120 --> 00:23:02.149 align:start position:0%
polymorphism describes methods that are
able<00:22:59.360><c> to</c><00:22:59.520><c> take</c><00:22:59.760><c> on</c><00:23:00.080><c> many</c><00:23:00.480><c> forms</c>

00:23:02.149 --> 00:23:02.159 align:start position:0%
able to take on many forms
 

00:23:02.159 --> 00:23:05.110 align:start position:0%
able to take on many forms
there<00:23:02.480><c> are</c><00:23:02.720><c> two</c><00:23:03.039><c> types</c><00:23:03.360><c> of</c><00:23:03.520><c> polymorphism</c>

00:23:05.110 --> 00:23:05.120 align:start position:0%
there are two types of polymorphism
 

00:23:05.120 --> 00:23:07.590 align:start position:0%
there are two types of polymorphism
the<00:23:05.360><c> first</c><00:23:05.679><c> one</c><00:23:06.159><c> is</c><00:23:06.320><c> what</c><00:23:06.480><c> is</c><00:23:06.640><c> called</c><00:23:06.960><c> dynamic</c>

00:23:07.590 --> 00:23:07.600 align:start position:0%
the first one is what is called dynamic
 

00:23:07.600 --> 00:23:09.510 align:start position:0%
the first one is what is called dynamic
polymorphism

00:23:09.510 --> 00:23:09.520 align:start position:0%
polymorphism
 

00:23:09.520 --> 00:23:11.990 align:start position:0%
polymorphism
dynamic<00:23:10.000><c> polymorphism</c><00:23:11.039><c> occurs</c><00:23:11.440><c> during</c><00:23:11.760><c> run</c>

00:23:11.990 --> 00:23:12.000 align:start position:0%
dynamic polymorphism occurs during run
 

00:23:12.000 --> 00:23:16.149 align:start position:0%
dynamic polymorphism occurs during run
time<00:23:12.720><c> when</c><00:23:12.960><c> the</c><00:23:13.120><c> program</c><00:23:13.679><c> is</c><00:23:13.840><c> being</c><00:23:14.159><c> executed</c>

00:23:16.149 --> 00:23:16.159 align:start position:0%
time when the program is being executed
 

00:23:16.159 --> 00:23:18.549 align:start position:0%
time when the program is being executed
this<00:23:16.400><c> describes</c><00:23:17.120><c> when</c><00:23:17.280><c> a</c><00:23:17.360><c> method</c><00:23:17.760><c> signature</c>

00:23:18.549 --> 00:23:18.559 align:start position:0%
this describes when a method signature
 

00:23:18.559 --> 00:23:20.870 align:start position:0%
this describes when a method signature
is<00:23:18.799><c> present</c><00:23:19.200><c> in</c><00:23:19.360><c> both</c><00:23:19.600><c> a</c><00:23:19.679><c> subclass</c><00:23:20.480><c> and</c><00:23:20.799><c> a</c>

00:23:20.870 --> 00:23:20.880 align:start position:0%
is present in both a subclass and a
 

00:23:20.880 --> 00:23:22.870 align:start position:0%
is present in both a subclass and a
superclass

00:23:22.870 --> 00:23:22.880 align:start position:0%
superclass
 

00:23:22.880 --> 00:23:25.270 align:start position:0%
superclass
the<00:23:23.039><c> methods</c><00:23:23.520><c> share</c><00:23:23.760><c> the</c><00:23:23.919><c> same</c><00:23:24.159><c> parameters</c>

00:23:25.270 --> 00:23:25.280 align:start position:0%
the methods share the same parameters
 

00:23:25.280 --> 00:23:27.669 align:start position:0%
the methods share the same parameters
but<00:23:25.440><c> have</c><00:23:25.679><c> separate</c><00:23:26.080><c> implementation</c>

00:23:27.669 --> 00:23:27.679 align:start position:0%
but have separate implementation
 

00:23:27.679 --> 00:23:28.950 align:start position:0%
but have separate implementation
in<00:23:27.840><c> this</c><00:23:28.080><c> case</c>

00:23:28.950 --> 00:23:28.960 align:start position:0%
in this case
 

00:23:28.960 --> 00:23:30.789 align:start position:0%
in this case
the<00:23:29.120><c> subclasses</c><00:23:29.840><c> implementation</c><00:23:30.559><c> of</c><00:23:30.640><c> the</c>

00:23:30.789 --> 00:23:30.799 align:start position:0%
the subclasses implementation of the
 

00:23:30.799 --> 00:23:34.070 align:start position:0%
the subclasses implementation of the
method<00:23:31.360><c> overrides</c><00:23:32.000><c> the</c><00:23:32.159><c> superclasses</c>

00:23:34.070 --> 00:23:34.080 align:start position:0%
method overrides the superclasses
 

00:23:34.080 --> 00:23:36.470 align:start position:0%
method overrides the superclasses
let's<00:23:34.400><c> go</c><00:23:34.640><c> over</c><00:23:34.880><c> an</c><00:23:35.039><c> example</c>

00:23:36.470 --> 00:23:36.480 align:start position:0%
let's go over an example
 

00:23:36.480 --> 00:23:38.470 align:start position:0%
let's go over an example
let's<00:23:36.720><c> say</c><00:23:36.880><c> you</c><00:23:37.120><c> are</c><00:23:37.200><c> writing</c><00:23:37.520><c> a</c><00:23:37.679><c> program</c><00:23:38.320><c> to</c>

00:23:38.470 --> 00:23:38.480 align:start position:0%
let's say you are writing a program to
 

00:23:38.480 --> 00:23:40.630 align:start position:0%
let's say you are writing a program to
represent<00:23:39.039><c> many</c><00:23:39.360><c> different</c><00:23:39.679><c> types</c><00:23:40.000><c> of</c><00:23:40.240><c> cars</c>

00:23:40.630 --> 00:23:40.640 align:start position:0%
represent many different types of cars
 

00:23:40.640 --> 00:23:43.110 align:start position:0%
represent many different types of cars
in<00:23:40.799><c> a</c><00:23:40.880><c> class</c><00:23:41.200><c> hierarchy</c>

00:23:43.110 --> 00:23:43.120 align:start position:0%
in a class hierarchy
 

00:23:43.120 --> 00:23:45.590 align:start position:0%
in a class hierarchy
at<00:23:43.279><c> the</c><00:23:43.360><c> top</c><00:23:43.679><c> of</c><00:23:43.760><c> the</c><00:23:43.919><c> hierarchy</c><00:23:45.039><c> you</c><00:23:45.200><c> may</c><00:23:45.440><c> have</c>

00:23:45.590 --> 00:23:45.600 align:start position:0%
at the top of the hierarchy you may have
 

00:23:45.600 --> 00:23:48.149 align:start position:0%
at the top of the hierarchy you may have
the<00:23:45.760><c> generic</c><00:23:46.400><c> car</c><00:23:46.720><c> class</c>

00:23:48.149 --> 00:23:48.159 align:start position:0%
the generic car class
 

00:23:48.159 --> 00:23:51.110 align:start position:0%
the generic car class
you<00:23:48.400><c> then</c><00:23:48.880><c> may</c><00:23:49.120><c> create</c><00:23:49.520><c> a</c><00:23:49.679><c> sports</c><00:23:50.080><c> car</c><00:23:50.400><c> class</c>

00:23:51.110 --> 00:23:51.120 align:start position:0%
you then may create a sports car class
 

00:23:51.120 --> 00:23:54.149 align:start position:0%
you then may create a sports car class
as<00:23:51.360><c> a</c><00:23:51.520><c> subclass</c><00:23:52.159><c> of</c><00:23:52.240><c> the</c><00:23:52.400><c> car</c><00:23:52.720><c> class</c>

00:23:54.149 --> 00:23:54.159 align:start position:0%
as a subclass of the car class
 

00:23:54.159 --> 00:23:56.710 align:start position:0%
as a subclass of the car class
you<00:23:54.400><c> then</c><00:23:54.640><c> may</c><00:23:54.880><c> create</c><00:23:55.360><c> a</c><00:23:55.520><c> dot</c><00:23:55.760><c> drive</c><00:23:56.159><c> method</c>

00:23:56.710 --> 00:23:56.720 align:start position:0%
you then may create a dot drive method
 

00:23:56.720 --> 00:23:58.950 align:start position:0%
you then may create a dot drive method
in<00:23:56.880><c> both</c><00:23:57.200><c> of</c><00:23:57.279><c> the</c><00:23:57.440><c> classes</c>

00:23:58.950 --> 00:23:58.960 align:start position:0%
in both of the classes
 

00:23:58.960 --> 00:24:01.110 align:start position:0%
in both of the classes
in<00:23:59.120><c> each</c><00:23:59.279><c> of</c><00:23:59.360><c> the</c><00:23:59.520><c> classes</c><00:24:00.320><c> the</c><00:24:00.559><c> dot</c><00:24:00.799><c> drive</c>

00:24:01.110 --> 00:24:01.120 align:start position:0%
in each of the classes the dot drive
 

00:24:01.120 --> 00:24:03.110 align:start position:0%
in each of the classes the dot drive
function<00:24:01.600><c> will</c><00:24:01.760><c> take</c><00:24:02.000><c> a</c><00:24:02.159><c> double</c><00:24:02.559><c> representing</c>

00:24:03.110 --> 00:24:03.120 align:start position:0%
function will take a double representing
 

00:24:03.120 --> 00:24:04.870 align:start position:0%
function will take a double representing
the<00:24:03.279><c> number</c><00:24:03.600><c> of</c><00:24:03.760><c> miles</c><00:24:04.240><c> you</c><00:24:04.400><c> would</c><00:24:04.559><c> like</c><00:24:04.720><c> the</c>

00:24:04.870 --> 00:24:04.880 align:start position:0%
the number of miles you would like the
 

00:24:04.880 --> 00:24:06.310 align:start position:0%
the number of miles you would like the
car<00:24:05.120><c> to</c><00:24:05.279><c> drive</c>

00:24:06.310 --> 00:24:06.320 align:start position:0%
car to drive
 

00:24:06.320 --> 00:24:08.149 align:start position:0%
car to drive
and<00:24:06.480><c> the</c><00:24:06.640><c> car's</c><00:24:06.960><c> gas</c><00:24:07.360><c> attribute</c><00:24:07.840><c> will</c><00:24:08.000><c> be</c>

00:24:08.149 --> 00:24:08.159 align:start position:0%
and the car's gas attribute will be
 

00:24:08.159 --> 00:24:11.269 align:start position:0%
and the car's gas attribute will be
decreased<00:24:08.880><c> by</c><00:24:09.039><c> the</c><00:24:09.200><c> pertinent</c><00:24:09.760><c> amount</c>

00:24:11.269 --> 00:24:11.279 align:start position:0%
decreased by the pertinent amount
 

00:24:11.279 --> 00:24:12.950 align:start position:0%
decreased by the pertinent amount
in<00:24:11.440><c> the</c><00:24:11.600><c> car</c><00:24:12.000><c> class</c>

00:24:12.950 --> 00:24:12.960 align:start position:0%
in the car class
 

00:24:12.960 --> 00:24:15.350 align:start position:0%
in the car class
the<00:24:13.120><c> dot</c><00:24:13.440><c> drive</c><00:24:13.840><c> function</c><00:24:14.480><c> may</c><00:24:14.720><c> cause</c><00:24:15.120><c> the</c>

00:24:15.350 --> 00:24:15.360 align:start position:0%
the dot drive function may cause the
 

00:24:15.360 --> 00:24:19.430 align:start position:0%
the dot drive function may cause the
car's<00:24:15.760><c> gas</c><00:24:16.240><c> to</c><00:24:16.480><c> decrease</c><00:24:17.440><c> by</c><00:24:17.960><c> 0.04</c><00:24:19.039><c> gallons</c>

00:24:19.430 --> 00:24:19.440 align:start position:0%
car's gas to decrease by 0.04 gallons
 

00:24:19.440 --> 00:24:20.789 align:start position:0%
car's gas to decrease by 0.04 gallons
per<00:24:19.600><c> mile</c>

00:24:20.789 --> 00:24:20.799 align:start position:0%
per mile
 

00:24:20.799 --> 00:24:23.029 align:start position:0%
per mile
whereas<00:24:21.200><c> the</c><00:24:21.360><c> sports</c><00:24:21.840><c> car</c><00:24:22.159><c> class</c>

00:24:23.029 --> 00:24:23.039 align:start position:0%
whereas the sports car class
 

00:24:23.039 --> 00:24:25.310 align:start position:0%
whereas the sports car class
may<00:24:23.200><c> instead</c><00:24:23.600><c> have</c><00:24:23.840><c> its</c><00:24:24.000><c> gas</c><00:24:24.320><c> decreased</c><00:24:25.039><c> by</c>

00:24:25.310 --> 00:24:25.320 align:start position:0%
may instead have its gas decreased by
 

00:24:25.320 --> 00:24:29.190 align:start position:0%
may instead have its gas decreased by
0.02<00:24:26.400><c> gallons</c><00:24:26.720><c> per</c><00:24:26.880><c> mile</c><00:24:27.200><c> it</c><00:24:27.279><c> drives</c>

00:24:29.190 --> 00:24:29.200 align:start position:0%
0.02 gallons per mile it drives
 

00:24:29.200 --> 00:24:31.110 align:start position:0%
0.02 gallons per mile it drives
if<00:24:29.360><c> you</c><00:24:29.679><c> create</c><00:24:30.000><c> an</c><00:24:30.159><c> instance</c><00:24:30.480><c> of</c><00:24:30.640><c> a</c><00:24:30.720><c> sports</c>

00:24:31.110 --> 00:24:31.120 align:start position:0%
if you create an instance of a sports
 

00:24:31.120 --> 00:24:33.750 align:start position:0%
if you create an instance of a sports
car<00:24:31.679><c> called</c><00:24:32.000><c> my</c><00:24:32.240><c> sports</c><00:24:32.720><c> car</c>

00:24:33.750 --> 00:24:33.760 align:start position:0%
car called my sports car
 

00:24:33.760 --> 00:24:35.909 align:start position:0%
car called my sports car
the<00:24:34.000><c> sports</c><00:24:34.320><c> car</c><00:24:34.640><c> implementation</c><00:24:35.360><c> of</c><00:24:35.440><c> the</c><00:24:35.600><c> dot</c>

00:24:35.909 --> 00:24:35.919 align:start position:0%
the sports car implementation of the dot
 

00:24:35.919 --> 00:24:38.390 align:start position:0%
the sports car implementation of the dot
drive<00:24:36.240><c> method</c><00:24:36.720><c> will</c><00:24:37.039><c> override</c><00:24:37.679><c> the</c><00:24:37.840><c> generic</c>

00:24:38.390 --> 00:24:38.400 align:start position:0%
drive method will override the generic
 

00:24:38.400 --> 00:24:41.590 align:start position:0%
drive method will override the generic
car<00:24:38.720><c> version</c><00:24:39.200><c> of</c><00:24:39.279><c> the</c><00:24:39.440><c> dot</c><00:24:39.679><c> drive</c><00:24:40.000><c> method</c>

00:24:41.590 --> 00:24:41.600 align:start position:0%
car version of the dot drive method
 

00:24:41.600 --> 00:24:42.789 align:start position:0%
car version of the dot drive method
therefore

00:24:42.789 --> 00:24:42.799 align:start position:0%
therefore
 

00:24:42.799 --> 00:24:45.590 align:start position:0%
therefore
my<00:24:43.240><c> sportscar.drive</c><00:24:44.480><c> will</c><00:24:44.720><c> decrease</c><00:24:45.360><c> my</c>

00:24:45.590 --> 00:24:45.600 align:start position:0%
my sportscar.drive will decrease my
 

00:24:45.600 --> 00:24:47.830 align:start position:0%
my sportscar.drive will decrease my
sports<00:24:46.000><c> car's</c><00:24:46.320><c> gas</c><00:24:46.720><c> attribute</c>

00:24:47.830 --> 00:24:47.840 align:start position:0%
sports car's gas attribute
 

00:24:47.840 --> 00:24:51.669 align:start position:0%
sports car's gas attribute
by<00:24:48.200><c> 0.02</c><00:24:49.279><c> gallons</c><00:24:49.679><c> per</c><00:24:49.919><c> mile</c>

00:24:51.669 --> 00:24:51.679 align:start position:0%
by 0.02 gallons per mile
 

00:24:51.679 --> 00:24:52.870 align:start position:0%
by 0.02 gallons per mile
however

00:24:52.870 --> 00:24:52.880 align:start position:0%
however
 

00:24:52.880 --> 00:24:54.710 align:start position:0%
however
were<00:24:53.120><c> you</c><00:24:53.279><c> to</c><00:24:53.520><c> create</c><00:24:53.919><c> an</c><00:24:54.080><c> instance</c><00:24:54.480><c> of</c><00:24:54.559><c> the</c>

00:24:54.710 --> 00:24:54.720 align:start position:0%
were you to create an instance of the
 

00:24:54.720 --> 00:24:57.430 align:start position:0%
were you to create an instance of the
car<00:24:54.960><c> class</c><00:24:55.600><c> called</c><00:24:55.919><c> my</c><00:24:56.240><c> car</c>

00:24:57.430 --> 00:24:57.440 align:start position:0%
car class called my car
 

00:24:57.440 --> 00:25:00.630 align:start position:0%
car class called my car
my<00:24:57.679><c> car.drive</c><00:24:59.039><c> would</c><00:24:59.279><c> instead</c><00:24:59.760><c> decrease</c><00:25:00.400><c> my</c>

00:25:00.630 --> 00:25:00.640 align:start position:0%
my car.drive would instead decrease my
 

00:25:00.640 --> 00:25:01.830 align:start position:0%
my car.drive would instead decrease my
car's<00:25:00.960><c> gas</c>

00:25:01.830 --> 00:25:01.840 align:start position:0%
car's gas
 

00:25:01.840 --> 00:25:05.029 align:start position:0%
car's gas
by<00:25:02.279><c> 0.04</c><00:25:03.360><c> gallons</c><00:25:03.760><c> per</c><00:25:03.919><c> mile</c>

00:25:05.029 --> 00:25:05.039 align:start position:0%
by 0.04 gallons per mile
 

00:25:05.039 --> 00:25:07.269 align:start position:0%
by 0.04 gallons per mile
this<00:25:05.520><c> is</c><00:25:05.679><c> an</c><00:25:05.919><c> example</c><00:25:06.480><c> of</c><00:25:06.720><c> dynamic</c>

00:25:07.269 --> 00:25:07.279 align:start position:0%
this is an example of dynamic
 

00:25:07.279 --> 00:25:09.990 align:start position:0%
this is an example of dynamic
polymorphism<00:25:08.480><c> as</c><00:25:08.720><c> the</c><00:25:08.960><c> implementation</c><00:25:09.760><c> of</c><00:25:09.919><c> a</c>

00:25:09.990 --> 00:25:10.000 align:start position:0%
polymorphism as the implementation of a
 

00:25:10.000 --> 00:25:12.710 align:start position:0%
polymorphism as the implementation of a
method<00:25:10.400><c> signature</c><00:25:11.120><c> can</c><00:25:11.440><c> change</c><00:25:12.000><c> depending</c><00:25:12.480><c> on</c>

00:25:12.710 --> 00:25:12.720 align:start position:0%
method signature can change depending on
 

00:25:12.720 --> 00:25:15.350 align:start position:0%
method signature can change depending on
which<00:25:13.039><c> level</c><00:25:13.440><c> in</c><00:25:13.600><c> the</c><00:25:13.679><c> class</c><00:25:14.159><c> hierarchy</c><00:25:15.120><c> that</c>

00:25:15.350 --> 00:25:15.360 align:start position:0%
which level in the class hierarchy that
 

00:25:15.360 --> 00:25:17.110 align:start position:0%
which level in the class hierarchy that
it<00:25:15.520><c> is</c><00:25:15.679><c> called</c>

00:25:17.110 --> 00:25:17.120 align:start position:0%
it is called
 

00:25:17.120 --> 00:25:19.669 align:start position:0%
it is called
this<00:25:17.360><c> works</c><00:25:17.679><c> this</c><00:25:17.919><c> way</c><00:25:18.640><c> because</c><00:25:19.039><c> the</c><00:25:19.200><c> form</c><00:25:19.520><c> of</c>

00:25:19.669 --> 00:25:19.679 align:start position:0%
this works this way because the form of
 

00:25:19.679 --> 00:25:21.990 align:start position:0%
this works this way because the form of
the<00:25:19.760><c> method</c><00:25:20.159><c> that</c><00:25:20.400><c> is</c><00:25:20.559><c> called</c><00:25:21.279><c> is</c><00:25:21.520><c> decided</c>

00:25:21.990 --> 00:25:22.000 align:start position:0%
the method that is called is decided
 

00:25:22.000 --> 00:25:25.269 align:start position:0%
the method that is called is decided
dynamically<00:25:22.880><c> as</c><00:25:23.120><c> the</c><00:25:23.279><c> program</c><00:25:23.760><c> is</c><00:25:23.919><c> run</c>

00:25:25.269 --> 00:25:25.279 align:start position:0%
dynamically as the program is run
 

00:25:25.279 --> 00:25:27.430 align:start position:0%
dynamically as the program is run
this<00:25:25.520><c> idea</c><00:25:25.919><c> can</c><00:25:26.080><c> be</c><00:25:26.240><c> extended</c><00:25:26.880><c> across</c><00:25:27.279><c> the</c>

00:25:27.430 --> 00:25:27.440 align:start position:0%
this idea can be extended across the
 

00:25:27.440 --> 00:25:30.390 align:start position:0%
this idea can be extended across the
class<00:25:27.760><c> hierarchy</c><00:25:28.880><c> in</c><00:25:29.120><c> more</c><00:25:29.440><c> layers</c><00:25:29.840><c> than</c><00:25:30.000><c> just</c>

00:25:30.390 --> 00:25:30.400 align:start position:0%
class hierarchy in more layers than just
 

00:25:30.400 --> 00:25:31.750 align:start position:0%
class hierarchy in more layers than just
two

00:25:31.750 --> 00:25:31.760 align:start position:0%
two
 

00:25:31.760 --> 00:25:33.590 align:start position:0%
two
you<00:25:31.919><c> could</c><00:25:32.080><c> add</c><00:25:32.400><c> more</c><00:25:32.640><c> subclasses</c>

00:25:33.590 --> 00:25:33.600 align:start position:0%
you could add more subclasses
 

00:25:33.600 --> 00:25:35.350 align:start position:0%
you could add more subclasses
representing<00:25:34.159><c> different</c><00:25:34.480><c> types</c><00:25:34.799><c> of</c><00:25:34.960><c> sports</c>

00:25:35.350 --> 00:25:35.360 align:start position:0%
representing different types of sports
 

00:25:35.360 --> 00:25:38.310 align:start position:0%
representing different types of sports
cars<00:25:36.159><c> with</c><00:25:36.400><c> their</c><00:25:36.640><c> own.drive</c><00:25:37.520><c> methods</c><00:25:38.159><c> with</c>

00:25:38.310 --> 00:25:38.320 align:start position:0%
cars with their own.drive methods with
 

00:25:38.320 --> 00:25:40.230 align:start position:0%
cars with their own.drive methods with
different<00:25:38.720><c> implementations</c>

00:25:40.230 --> 00:25:40.240 align:start position:0%
different implementations
 

00:25:40.240 --> 00:25:41.990 align:start position:0%
different implementations
and<00:25:40.480><c> creating</c><00:25:40.960><c> an</c><00:25:41.120><c> instance</c><00:25:41.440><c> of</c><00:25:41.600><c> each</c><00:25:41.840><c> of</c>

00:25:41.990 --> 00:25:42.000 align:start position:0%
and creating an instance of each of
 

00:25:42.000 --> 00:25:43.510 align:start position:0%
and creating an instance of each of
these<00:25:42.240><c> subclasses</c>

00:25:43.510 --> 00:25:43.520 align:start position:0%
these subclasses
 

00:25:43.520 --> 00:25:45.430 align:start position:0%
these subclasses
would<00:25:43.760><c> use</c><00:25:43.919><c> their</c><00:25:44.159><c> own</c><00:25:44.400><c> implementation</c><00:25:45.279><c> of</c>

00:25:45.430 --> 00:25:45.440 align:start position:0%
would use their own implementation of
 

00:25:45.440 --> 00:25:48.710 align:start position:0%
would use their own implementation of
the<00:25:45.600><c> dot</c><00:25:45.840><c> drive</c><00:25:46.159><c> method</c><00:25:46.720><c> one</c><00:25:46.960><c> call</c>

00:25:48.710 --> 00:25:48.720 align:start position:0%
the dot drive method one call
 

00:25:48.720 --> 00:25:52.230 align:start position:0%
the dot drive method one call
the<00:25:48.880><c> main</c><00:25:49.279><c> benefit</c><00:25:49.919><c> of</c><00:25:50.080><c> dynamic</c><00:25:50.720><c> polymorphism</c>

00:25:52.230 --> 00:25:52.240 align:start position:0%
the main benefit of dynamic polymorphism
 

00:25:52.240 --> 00:25:54.310 align:start position:0%
the main benefit of dynamic polymorphism
is<00:25:52.400><c> that</c><00:25:52.640><c> it</c><00:25:52.799><c> allows</c><00:25:53.120><c> you</c><00:25:53.279><c> to</c><00:25:53.440><c> write</c><00:25:53.760><c> methods</c>

00:25:54.310 --> 00:25:54.320 align:start position:0%
is that it allows you to write methods
 

00:25:54.320 --> 00:25:56.789 align:start position:0%
is that it allows you to write methods
in<00:25:54.400><c> the</c><00:25:54.840><c> superclass</c><00:25:55.840><c> without</c><00:25:56.320><c> having</c><00:25:56.640><c> to</c>

00:25:56.789 --> 00:25:56.799 align:start position:0%
in the superclass without having to
 

00:25:56.799 --> 00:25:59.830 align:start position:0%
in the superclass without having to
include<00:25:57.360><c> ifs</c><00:25:57.919><c> and</c><00:25:58.080><c> outshifts</c><00:25:58.960><c> to</c><00:25:59.200><c> account</c><00:25:59.520><c> for</c>

00:25:59.830 --> 00:25:59.840 align:start position:0%
include ifs and outshifts to account for
 

00:25:59.840 --> 00:26:02.710 align:start position:0%
include ifs and outshifts to account for
exactly<00:26:00.400><c> which</c><00:26:00.720><c> subclass</c><00:26:01.440><c> is</c><00:26:01.679><c> being</c><00:26:01.919><c> used</c>

00:26:02.710 --> 00:26:02.720 align:start position:0%
exactly which subclass is being used
 

00:26:02.720 --> 00:26:04.950 align:start position:0%
exactly which subclass is being used
when<00:26:02.880><c> the</c><00:26:02.960><c> method</c><00:26:03.360><c> is</c><00:26:03.520><c> called</c>

00:26:04.950 --> 00:26:04.960 align:start position:0%
when the method is called
 

00:26:04.960 --> 00:26:07.269 align:start position:0%
when the method is called
the<00:26:05.200><c> second</c><00:26:05.520><c> type</c><00:26:05.760><c> of</c><00:26:05.919><c> polymorphism</c><00:26:07.120><c> is</c>

00:26:07.269 --> 00:26:07.279 align:start position:0%
the second type of polymorphism is
 

00:26:07.279 --> 00:26:09.590 align:start position:0%
the second type of polymorphism is
static<00:26:07.679><c> polymorphism</c>

00:26:09.590 --> 00:26:09.600 align:start position:0%
static polymorphism
 

00:26:09.600 --> 00:26:11.750 align:start position:0%
static polymorphism
static<00:26:10.000><c> polymorphism</c><00:26:10.960><c> occurs</c><00:26:11.440><c> during</c>

00:26:11.750 --> 00:26:11.760 align:start position:0%
static polymorphism occurs during
 

00:26:11.760 --> 00:26:13.190 align:start position:0%
static polymorphism occurs during
compile<00:26:12.320><c> time</c>

00:26:13.190 --> 00:26:13.200 align:start position:0%
compile time
 

00:26:13.200 --> 00:26:15.990 align:start position:0%
compile time
rather<00:26:13.520><c> than</c><00:26:13.760><c> run</c><00:26:14.000><c> time</c>

00:26:15.990 --> 00:26:16.000 align:start position:0%
rather than run time
 

00:26:16.000 --> 00:26:18.230 align:start position:0%
rather than run time
this<00:26:16.240><c> refers</c><00:26:16.799><c> to</c><00:26:16.960><c> when</c><00:26:17.200><c> multiple</c><00:26:17.679><c> methods</c>

00:26:18.230 --> 00:26:18.240 align:start position:0%
this refers to when multiple methods
 

00:26:18.240 --> 00:26:19.909 align:start position:0%
this refers to when multiple methods
with<00:26:18.480><c> the</c><00:26:18.640><c> same</c><00:26:19.039><c> name</c>

00:26:19.909 --> 00:26:19.919 align:start position:0%
with the same name
 

00:26:19.919 --> 00:26:22.470 align:start position:0%
with the same name
are<00:26:20.080><c> defined</c><00:26:20.640><c> in</c><00:26:20.799><c> the</c><00:26:20.960><c> same</c><00:26:21.200><c> class</c>

00:26:22.470 --> 00:26:22.480 align:start position:0%
are defined in the same class
 

00:26:22.480 --> 00:26:24.549 align:start position:0%
are defined in the same class
in<00:26:22.640><c> this</c><00:26:22.960><c> case</c><00:26:23.840><c> the</c><00:26:24.000><c> methods</c><00:26:24.480><c> are</c>

00:26:24.549 --> 00:26:24.559 align:start position:0%
in this case the methods are
 

00:26:24.559 --> 00:26:27.430 align:start position:0%
in this case the methods are
differentiated<00:26:25.440><c> by</c><00:26:25.600><c> their</c><00:26:25.840><c> arguments</c>

00:26:27.430 --> 00:26:27.440 align:start position:0%
differentiated by their arguments
 

00:26:27.440 --> 00:26:29.190 align:start position:0%
differentiated by their arguments
either<00:26:27.760><c> they</c><00:26:28.000><c> take</c><00:26:28.320><c> a</c><00:26:28.400><c> different</c><00:26:28.720><c> number</c><00:26:29.039><c> of</c>

00:26:29.190 --> 00:26:29.200 align:start position:0%
either they take a different number of
 

00:26:29.200 --> 00:26:30.470 align:start position:0%
either they take a different number of
parameters

00:26:30.470 --> 00:26:30.480 align:start position:0%
parameters
 

00:26:30.480 --> 00:26:33.269 align:start position:0%
parameters
they<00:26:30.640><c> take</c><00:26:30.960><c> parameters</c><00:26:31.600><c> of</c><00:26:31.760><c> different</c><00:26:32.080><c> types</c>

00:26:33.269 --> 00:26:33.279 align:start position:0%
they take parameters of different types
 

00:26:33.279 --> 00:26:35.190 align:start position:0%
they take parameters of different types
or<00:26:33.520><c> they</c><00:26:33.679><c> take</c><00:26:33.919><c> parameters</c><00:26:34.640><c> in</c><00:26:34.799><c> a</c><00:26:34.880><c> different</c>

00:26:35.190 --> 00:26:35.200 align:start position:0%
or they take parameters in a different
 

00:26:35.200 --> 00:26:36.830 align:start position:0%
or they take parameters in a different
order<00:26:35.919><c> than</c><00:26:36.159><c> one</c>

00:26:36.830 --> 00:26:36.840 align:start position:0%
order than one
 

00:26:36.840 --> 00:26:39.510 align:start position:0%
order than one
another<00:26:38.080><c> this</c><00:26:38.400><c> is</c><00:26:38.559><c> known</c><00:26:38.880><c> as</c><00:26:39.120><c> method</c>

00:26:39.510 --> 00:26:39.520 align:start position:0%
another this is known as method
 

00:26:39.520 --> 00:26:41.110 align:start position:0%
another this is known as method
overloading

00:26:41.110 --> 00:26:41.120 align:start position:0%
overloading
 

00:26:41.120 --> 00:26:42.950 align:start position:0%
overloading
despite<00:26:41.600><c> the</c><00:26:41.760><c> names</c><00:26:42.080><c> of</c><00:26:42.159><c> the</c><00:26:42.240><c> methods</c><00:26:42.720><c> being</c>

00:26:42.950 --> 00:26:42.960 align:start position:0%
despite the names of the methods being
 

00:26:42.960 --> 00:26:45.110 align:start position:0%
despite the names of the methods being
the<00:26:43.120><c> same</c><00:26:43.919><c> they</c><00:26:44.080><c> have</c><00:26:44.320><c> different</c><00:26:44.720><c> method</c>

00:26:45.110 --> 00:26:45.120 align:start position:0%
the same they have different method
 

00:26:45.120 --> 00:26:46.230 align:start position:0%
the same they have different method
signatures

00:26:46.230 --> 00:26:46.240 align:start position:0%
signatures
 

00:26:46.240 --> 00:26:47.590 align:start position:0%
signatures
due<00:26:46.400><c> to</c><00:26:46.559><c> their</c><00:26:46.720><c> differences</c><00:26:47.360><c> in</c><00:26:47.440><c> the</c>

00:26:47.590 --> 00:26:47.600 align:start position:0%
due to their differences in the
 

00:26:47.600 --> 00:26:49.990 align:start position:0%
due to their differences in the
parameters<00:26:48.320><c> that</c><00:26:48.480><c> they</c><00:26:48.720><c> accept</c>

00:26:49.990 --> 00:26:50.000 align:start position:0%
parameters that they accept
 

00:26:50.000 --> 00:26:52.710 align:start position:0%
parameters that they accept
to<00:26:50.240><c> better</c><00:26:50.559><c> understand</c><00:26:51.200><c> this</c><00:26:52.000><c> let's</c><00:26:52.240><c> go</c><00:26:52.480><c> back</c>

00:26:52.710 --> 00:26:52.720 align:start position:0%
to better understand this let's go back
 

00:26:52.720 --> 00:26:55.190 align:start position:0%
to better understand this let's go back
to<00:26:52.799><c> the</c><00:26:53.039><c> car</c><00:26:53.360><c> example</c>

00:26:55.190 --> 00:26:55.200 align:start position:0%
to the car example
 

00:26:55.200 --> 00:26:57.029 align:start position:0%
to the car example
let's<00:26:55.440><c> say</c><00:26:55.840><c> that</c><00:26:56.000><c> you</c><00:26:56.159><c> are</c><00:26:56.320><c> working</c><00:26:56.640><c> within</c>

00:26:57.029 --> 00:26:57.039 align:start position:0%
let's say that you are working within
 

00:26:57.039 --> 00:26:59.110 align:start position:0%
let's say that you are working within
the<00:26:57.200><c> car</c><00:26:57.520><c> class</c>

00:26:59.110 --> 00:26:59.120 align:start position:0%
the car class
 

00:26:59.120 --> 00:27:01.750 align:start position:0%
the car class
in<00:26:59.279><c> this</c><00:26:59.520><c> class</c><00:27:00.240><c> you</c><00:27:00.480><c> are</c><00:27:00.559><c> looking</c><00:27:00.880><c> to</c><00:27:01.120><c> create</c>

00:27:01.750 --> 00:27:01.760 align:start position:0%
in this class you are looking to create
 

00:27:01.760 --> 00:27:04.470 align:start position:0%
in this class you are looking to create
three<00:27:02.000><c> different</c><00:27:02.320><c> drive</c><00:27:02.720><c> methods</c>

00:27:04.470 --> 00:27:04.480 align:start position:0%
three different drive methods
 

00:27:04.480 --> 00:27:07.029 align:start position:0%
three different drive methods
the<00:27:04.640><c> first</c><00:27:04.960><c> drive</c><00:27:05.279><c> methods</c><00:27:05.760><c> argument</c><00:27:06.559><c> accepts</c>

00:27:07.029 --> 00:27:07.039 align:start position:0%
the first drive methods argument accepts
 

00:27:07.039 --> 00:27:10.230 align:start position:0%
the first drive methods argument accepts
one<00:27:07.279><c> integer</c><00:27:08.000><c> and</c><00:27:08.240><c> one</c><00:27:08.559><c> string</c><00:27:08.960><c> as</c><00:27:09.120><c> parameters</c>

00:27:10.230 --> 00:27:10.240 align:start position:0%
one integer and one string as parameters
 

00:27:10.240 --> 00:27:13.029 align:start position:0%
one integer and one string as parameters
say<00:27:10.880><c> speed</c><00:27:11.279><c> and</c><00:27:11.440><c> destination</c>

00:27:13.029 --> 00:27:13.039 align:start position:0%
say speed and destination
 

00:27:13.039 --> 00:27:14.630 align:start position:0%
say speed and destination
for<00:27:13.279><c> clarity</c>

00:27:14.630 --> 00:27:14.640 align:start position:0%
for clarity
 

00:27:14.640 --> 00:27:16.630 align:start position:0%
for clarity
we<00:27:14.880><c> will</c><00:27:15.039><c> refer</c><00:27:15.360><c> to</c><00:27:15.520><c> this</c><00:27:15.760><c> one</c><00:27:16.000><c> as</c><00:27:16.240><c> drive</c>

00:27:16.630 --> 00:27:16.640 align:start position:0%
we will refer to this one as drive
 

00:27:16.640 --> 00:27:18.070 align:start position:0%
we will refer to this one as drive
method<00:27:16.960><c> one</c>

00:27:18.070 --> 00:27:18.080 align:start position:0%
method one
 

00:27:18.080 --> 00:27:20.230 align:start position:0%
method one
however<00:27:18.559><c> keep</c><00:27:18.880><c> in</c><00:27:18.960><c> mind</c><00:27:19.520><c> that</c><00:27:19.760><c> its</c><00:27:19.919><c> method</c>

00:27:20.230 --> 00:27:20.240 align:start position:0%
however keep in mind that its method
 

00:27:20.240 --> 00:27:23.110 align:start position:0%
however keep in mind that its method
name<00:27:20.640><c> is</c><00:27:20.880><c> just</c><00:27:21.279><c> drive</c>

00:27:23.110 --> 00:27:23.120 align:start position:0%
name is just drive
 

00:27:23.120 --> 00:27:25.190 align:start position:0%
name is just drive
for<00:27:23.360><c> drive</c><00:27:23.679><c> method</c><00:27:24.080><c> 2</c>

00:27:25.190 --> 00:27:25.200 align:start position:0%
for drive method 2
 

00:27:25.200 --> 00:27:27.430 align:start position:0%
for drive method 2
we<00:27:25.360><c> will</c><00:27:25.520><c> set</c><00:27:25.760><c> its</c><00:27:25.919><c> argument</c><00:27:26.320><c> to</c><00:27:26.559><c> accept</c><00:27:27.120><c> two</c>

00:27:27.430 --> 00:27:27.440 align:start position:0%
we will set its argument to accept two
 

00:27:27.440 --> 00:27:28.549 align:start position:0%
we will set its argument to accept two
integers

00:27:28.549 --> 00:27:28.559 align:start position:0%
integers
 

00:27:28.559 --> 00:27:31.909 align:start position:0%
integers
for<00:27:28.799><c> instance</c><00:27:29.520><c> distance</c><00:27:30.159><c> and</c><00:27:30.320><c> speed</c>

00:27:31.909 --> 00:27:31.919 align:start position:0%
for instance distance and speed
 

00:27:31.919 --> 00:27:34.710 align:start position:0%
for instance distance and speed
finally<00:27:32.880><c> in</c><00:27:33.039><c> drive</c><00:27:33.360><c> method</c><00:27:33.679><c> 3</c>

00:27:34.710 --> 00:27:34.720 align:start position:0%
finally in drive method 3
 

00:27:34.720 --> 00:27:36.710 align:start position:0%
finally in drive method 3
we<00:27:34.880><c> will</c><00:27:35.039><c> have</c><00:27:35.279><c> it</c><00:27:35.440><c> accept</c><00:27:35.840><c> a</c><00:27:36.000><c> string</c><00:27:36.320><c> first</c>

00:27:36.710 --> 00:27:36.720 align:start position:0%
we will have it accept a string first
 

00:27:36.720 --> 00:27:38.230 align:start position:0%
we will have it accept a string first
for<00:27:36.960><c> destination</c>

00:27:38.230 --> 00:27:38.240 align:start position:0%
for destination
 

00:27:38.240 --> 00:27:41.510 align:start position:0%
for destination
and<00:27:38.320><c> then</c><00:27:38.559><c> an</c><00:27:38.799><c> integer</c><00:27:39.279><c> for</c><00:27:39.520><c> speed</c>

00:27:41.510 --> 00:27:41.520 align:start position:0%
and then an integer for speed
 

00:27:41.520 --> 00:27:44.149 align:start position:0%
and then an integer for speed
this<00:27:41.840><c> differs</c><00:27:42.399><c> from</c><00:27:42.559><c> drive</c><00:27:42.880><c> method</c><00:27:43.279><c> 1</c>

00:27:44.149 --> 00:27:44.159 align:start position:0%
this differs from drive method 1
 

00:27:44.159 --> 00:27:46.870 align:start position:0%
this differs from drive method 1
in<00:27:44.320><c> that</c><00:27:44.559><c> drive</c><00:27:44.880><c> method</c><00:27:45.279><c> 1's</c><00:27:45.600><c> parameters</c><00:27:46.640><c> are</c>

00:27:46.870 --> 00:27:46.880 align:start position:0%
in that drive method 1's parameters are
 

00:27:46.880 --> 00:27:48.789 align:start position:0%
in that drive method 1's parameters are
in<00:27:47.039><c> reverse</c><00:27:47.520><c> order</c><00:27:48.080><c> compared</c><00:27:48.399><c> to</c><00:27:48.559><c> drive</c>

00:27:48.789 --> 00:27:48.799 align:start position:0%
in reverse order compared to drive
 

00:27:48.799 --> 00:27:51.269 align:start position:0%
in reverse order compared to drive
method<00:27:49.200><c> threes</c>

00:27:51.269 --> 00:27:51.279 align:start position:0%
method threes
 

00:27:51.279 --> 00:27:53.830 align:start position:0%
method threes
in<00:27:51.520><c> each</c><00:27:51.760><c> of</c><00:27:51.840><c> these</c><00:27:52.080><c> three</c><00:27:52.399><c> example</c><00:27:52.880><c> methods</c>

00:27:53.830 --> 00:27:53.840 align:start position:0%
in each of these three example methods
 

00:27:53.840 --> 00:27:55.830 align:start position:0%
in each of these three example methods
the<00:27:54.000><c> method</c><00:27:54.399><c> signature</c><00:27:54.960><c> is</c><00:27:55.120><c> different</c>

00:27:55.830 --> 00:27:55.840 align:start position:0%
the method signature is different
 

00:27:55.840 --> 00:27:58.630 align:start position:0%
the method signature is different
despite<00:27:56.240><c> the</c><00:27:56.399><c> methods</c><00:27:56.799><c> having</c><00:27:57.039><c> the</c><00:27:57.200><c> same</c><00:27:57.520><c> name</c>

00:27:58.630 --> 00:27:58.640 align:start position:0%
despite the methods having the same name
 

00:27:58.640 --> 00:28:00.789 align:start position:0%
despite the methods having the same name
therefore<00:27:59.440><c> the</c><00:27:59.679><c> computer</c><00:28:00.159><c> is</c><00:28:00.320><c> able</c><00:28:00.480><c> to</c><00:28:00.640><c> tell</c>

00:28:00.789 --> 00:28:00.799 align:start position:0%
therefore the computer is able to tell
 

00:28:00.799 --> 00:28:02.710 align:start position:0%
therefore the computer is able to tell
the<00:28:00.960><c> methods</c><00:28:01.360><c> apart</c><00:28:01.840><c> when</c><00:28:02.000><c> the</c><00:28:02.159><c> program</c><00:28:02.559><c> is</c>

00:28:02.710 --> 00:28:02.720 align:start position:0%
the methods apart when the program is
 

00:28:02.720 --> 00:28:04.950 align:start position:0%
the methods apart when the program is
being<00:28:02.960><c> compiled</c>

00:28:04.950 --> 00:28:04.960 align:start position:0%
being compiled
 

00:28:04.960 --> 00:28:06.470 align:start position:0%
being compiled
for<00:28:05.200><c> example</c>

00:28:06.470 --> 00:28:06.480 align:start position:0%
for example
 

00:28:06.480 --> 00:28:09.990 align:start position:0%
for example
where<00:28:06.720><c> i</c><00:28:06.880><c> to</c><00:28:07.120><c> call</c><00:28:07.600><c> mycar.drive45</c>

00:28:09.990 --> 00:28:10.000 align:start position:0%
where i to call mycar.drive45
 

00:28:10.000 --> 00:28:10.950 align:start position:0%
where i to call mycar.drive45
work

00:28:10.950 --> 00:28:10.960 align:start position:0%
work
 

00:28:10.960 --> 00:28:13.110 align:start position:0%
work
drive<00:28:11.279><c> method</c><00:28:11.679><c> 1</c><00:28:11.919><c> would</c><00:28:12.080><c> be</c><00:28:12.240><c> called</c>

00:28:13.110 --> 00:28:13.120 align:start position:0%
drive method 1 would be called
 

00:28:13.120 --> 00:28:15.590 align:start position:0%
drive method 1 would be called
as<00:28:13.440><c> the</c><00:28:13.600><c> argument</c><00:28:14.159><c> given</c><00:28:14.799><c> indicates</c><00:28:15.360><c> that</c>

00:28:15.590 --> 00:28:15.600 align:start position:0%
as the argument given indicates that
 

00:28:15.600 --> 00:28:18.870 align:start position:0%
as the argument given indicates that
this<00:28:15.840><c> is</c><00:28:16.000><c> the</c><00:28:16.080><c> method</c><00:28:16.559><c> i</c><00:28:16.720><c> would</c><00:28:16.880><c> like</c><00:28:17.120><c> to</c><00:28:17.279><c> call</c>

00:28:18.870 --> 00:28:18.880 align:start position:0%
this is the method i would like to call
 

00:28:18.880 --> 00:28:23.029 align:start position:0%
this is the method i would like to call
furthermore<00:28:20.000><c> my</c><00:28:20.240><c> car.drive</c><00:28:21.520><c> 1560</c>

00:28:23.029 --> 00:28:23.039 align:start position:0%
furthermore my car.drive 1560
 

00:28:23.039 --> 00:28:25.110 align:start position:0%
furthermore my car.drive 1560
would<00:28:23.200><c> call</c><00:28:23.440><c> drive</c><00:28:23.760><c> method</c><00:28:24.080><c> 2</c>

00:28:25.110 --> 00:28:25.120 align:start position:0%
would call drive method 2
 

00:28:25.120 --> 00:28:28.710 align:start position:0%
would call drive method 2
and<00:28:25.279><c> my</c><00:28:25.440><c> call.drive</c><00:28:26.720><c> school</c><00:28:27.440><c> 30</c><00:28:28.320><c> would</c><00:28:28.480><c> call</c>

00:28:28.710 --> 00:28:28.720 align:start position:0%
and my call.drive school 30 would call
 

00:28:28.720 --> 00:28:30.710 align:start position:0%
and my call.drive school 30 would call
drive<00:28:28.960><c> method</c><00:28:29.360><c> three</c>

00:28:30.710 --> 00:28:30.720 align:start position:0%
drive method three
 

00:28:30.720 --> 00:28:32.950 align:start position:0%
drive method three
when<00:28:30.960><c> implementing</c><00:28:31.440><c> method</c><00:28:31.840><c> overloading</c><00:28:32.799><c> the</c>

00:28:32.950 --> 00:28:32.960 align:start position:0%
when implementing method overloading the
 

00:28:32.960 --> 00:28:34.789 align:start position:0%
when implementing method overloading the
different<00:28:33.279><c> methods</c><00:28:33.679><c> tend</c><00:28:33.919><c> to</c><00:28:34.000><c> have</c><00:28:34.240><c> separate</c>

00:28:34.789 --> 00:28:34.799 align:start position:0%
different methods tend to have separate
 

00:28:34.799 --> 00:28:37.350 align:start position:0%
different methods tend to have separate
but<00:28:35.039><c> similar</c><00:28:35.520><c> effects</c>

00:28:37.350 --> 00:28:37.360 align:start position:0%
but similar effects
 

00:28:37.360 --> 00:28:39.110 align:start position:0%
but similar effects
despite<00:28:37.760><c> drive</c><00:28:38.080><c> method</c><00:28:38.399><c> one</c><00:28:38.720><c> and</c><00:28:38.880><c> drive</c>

00:28:39.110 --> 00:28:39.120 align:start position:0%
despite drive method one and drive
 

00:28:39.120 --> 00:28:41.669 align:start position:0%
despite drive method one and drive
method<00:28:39.440><c> three</c><00:28:39.760><c> taking</c><00:28:40.080><c> the</c><00:28:40.159><c> same</c><00:28:40.399><c> parameters</c>

00:28:41.669 --> 00:28:41.679 align:start position:0%
method three taking the same parameters
 

00:28:41.679 --> 00:28:43.430 align:start position:0%
method three taking the same parameters
it<00:28:41.919><c> is</c><00:28:42.000><c> likely</c><00:28:42.399><c> that</c><00:28:42.480><c> their</c><00:28:42.720><c> implementation</c>

00:28:43.430 --> 00:28:43.440 align:start position:0%
it is likely that their implementation
 

00:28:43.440 --> 00:28:45.110 align:start position:0%
it is likely that their implementation
would<00:28:43.600><c> be</c><00:28:43.760><c> different</c><00:28:44.559><c> and</c><00:28:44.640><c> thus</c><00:28:44.880><c> would</c>

00:28:45.110 --> 00:28:45.120 align:start position:0%
would be different and thus would
 

00:28:45.120 --> 00:28:46.789 align:start position:0%
would be different and thus would
achieve<00:28:45.440><c> separate</c><00:28:45.840><c> effects</c>

00:28:46.789 --> 00:28:46.799 align:start position:0%
achieve separate effects
 

00:28:46.799 --> 00:28:48.470 align:start position:0%
achieve separate effects
otherwise<00:28:47.279><c> there</c><00:28:47.440><c> would</c><00:28:47.600><c> be</c><00:28:47.760><c> no</c><00:28:47.919><c> reason</c><00:28:48.320><c> to</c>

00:28:48.470 --> 00:28:48.480 align:start position:0%
otherwise there would be no reason to
 

00:28:48.480 --> 00:28:50.549 align:start position:0%
otherwise there would be no reason to
have<00:28:48.720><c> both</c><00:28:48.960><c> methods</c>

00:28:50.549 --> 00:28:50.559 align:start position:0%
have both methods
 

00:28:50.559 --> 00:28:52.710 align:start position:0%
have both methods
keep<00:28:50.799><c> in</c><00:28:50.960><c> mind</c><00:28:51.279><c> that</c><00:28:51.440><c> method</c><00:28:51.840><c> overloading</c><00:28:52.399><c> can</c>

00:28:52.710 --> 00:28:52.720 align:start position:0%
keep in mind that method overloading can
 

00:28:52.720 --> 00:28:54.549 align:start position:0%
keep in mind that method overloading can
cause<00:28:53.039><c> trouble</c><00:28:53.679><c> if</c><00:28:53.840><c> you</c><00:28:54.000><c> do</c><00:28:54.080><c> not</c><00:28:54.320><c> keep</c>

00:28:54.549 --> 00:28:54.559 align:start position:0%
cause trouble if you do not keep
 

00:28:54.559 --> 00:28:56.070 align:start position:0%
cause trouble if you do not keep
straight<00:28:55.120><c> which</c><00:28:55.360><c> of</c><00:28:55.440><c> the</c><00:28:55.600><c> methods</c>

00:28:56.070 --> 00:28:56.080 align:start position:0%
straight which of the methods
 

00:28:56.080 --> 00:28:57.430 align:start position:0%
straight which of the methods
implementations<00:28:56.880><c> you</c><00:28:57.039><c> would</c><00:28:57.120><c> like</c><00:28:57.279><c> to</c>

00:28:57.430 --> 00:28:57.440 align:start position:0%
implementations you would like to
 

00:28:57.440 --> 00:28:58.389 align:start position:0%
implementations you would like to
execute

00:28:58.389 --> 00:28:58.399 align:start position:0%
execute
 

00:28:58.399 --> 00:29:00.470 align:start position:0%
execute
and<00:28:58.640><c> what</c><00:28:58.880><c> form</c><00:28:59.200><c> of</c><00:28:59.279><c> the</c><00:28:59.440><c> argument</c><00:29:00.320><c> is</c>

00:29:00.470 --> 00:29:00.480 align:start position:0%
and what form of the argument is
 

00:29:00.480 --> 00:29:02.789 align:start position:0%
and what form of the argument is
required<00:29:00.960><c> to</c><00:29:01.120><c> do</c><00:29:01.360><c> so</c>

00:29:02.789 --> 00:29:02.799 align:start position:0%
required to do so
 

00:29:02.799 --> 00:29:04.950 align:start position:0%
required to do so
normally<00:29:03.600><c> if</c><00:29:03.760><c> you</c><00:29:03.919><c> call</c><00:29:04.159><c> a</c><00:29:04.240><c> method</c><00:29:04.559><c> with</c><00:29:04.720><c> too</c>

00:29:04.950 --> 00:29:04.960 align:start position:0%
normally if you call a method with too
 

00:29:04.960 --> 00:29:07.190 align:start position:0%
normally if you call a method with too
many<00:29:05.200><c> parameters</c><00:29:06.159><c> or</c><00:29:06.399><c> parameters</c><00:29:06.960><c> of</c><00:29:07.039><c> the</c>

00:29:07.190 --> 00:29:07.200 align:start position:0%
many parameters or parameters of the
 

00:29:07.200 --> 00:29:08.470 align:start position:0%
many parameters or parameters of the
incorrect<00:29:07.679><c> type</c>

00:29:08.470 --> 00:29:08.480 align:start position:0%
incorrect type
 

00:29:08.480 --> 00:29:10.630 align:start position:0%
incorrect type
then<00:29:08.640><c> the</c><00:29:08.799><c> program</c><00:29:09.200><c> will</c><00:29:09.360><c> throw</c><00:29:09.600><c> an</c><00:29:09.760><c> error</c><00:29:10.480><c> and</c>

00:29:10.630 --> 00:29:10.640 align:start position:0%
then the program will throw an error and
 

00:29:10.640 --> 00:29:13.190 align:start position:0%
then the program will throw an error and
you<00:29:10.720><c> will</c><00:29:10.880><c> be</c><00:29:11.039><c> able</c><00:29:11.200><c> to</c><00:29:11.360><c> fix</c><00:29:11.600><c> the</c><00:29:11.760><c> issue</c>

00:29:13.190 --> 00:29:13.200 align:start position:0%
you will be able to fix the issue
 

00:29:13.200 --> 00:29:14.310 align:start position:0%
you will be able to fix the issue
however

00:29:14.310 --> 00:29:14.320 align:start position:0%
however
 

00:29:14.320 --> 00:29:16.789 align:start position:0%
however
if<00:29:14.480><c> you</c><00:29:14.640><c> mistake</c><00:29:15.120><c> the</c><00:29:15.279><c> methods</c><00:29:15.760><c> argument</c><00:29:16.640><c> in</c>

00:29:16.789 --> 00:29:16.799 align:start position:0%
if you mistake the methods argument in
 

00:29:16.799 --> 00:29:19.029 align:start position:0%
if you mistake the methods argument in
such<00:29:17.039><c> a</c><00:29:17.200><c> way</c><00:29:17.520><c> that</c><00:29:17.760><c> one</c><00:29:18.000><c> of</c><00:29:18.080><c> the</c><00:29:18.240><c> other</c><00:29:18.559><c> methods</c>

00:29:19.029 --> 00:29:19.039 align:start position:0%
such a way that one of the other methods
 

00:29:19.039 --> 00:29:21.750 align:start position:0%
such a way that one of the other methods
with<00:29:19.200><c> the</c><00:29:19.360><c> same</c><00:29:19.679><c> name</c><00:29:20.080><c> is</c><00:29:20.320><c> called</c><00:29:20.559><c> instead</c>

00:29:21.750 --> 00:29:21.760 align:start position:0%
with the same name is called instead
 

00:29:21.760 --> 00:29:23.750 align:start position:0%
with the same name is called instead
then<00:29:21.919><c> you</c><00:29:22.080><c> may</c><00:29:22.320><c> not</c><00:29:22.559><c> even</c><00:29:22.799><c> be</c><00:29:22.960><c> aware</c><00:29:23.440><c> that</c><00:29:23.600><c> you</c>

00:29:23.750 --> 00:29:23.760 align:start position:0%
then you may not even be aware that you
 

00:29:23.760 --> 00:29:24.830 align:start position:0%
then you may not even be aware that you
made<00:29:24.000><c> a</c>

00:29:24.830 --> 00:29:24.840 align:start position:0%
made a
 

00:29:24.840 --> 00:29:27.110 align:start position:0%
made a
mistake<00:29:25.919><c> overall</c>

00:29:27.110 --> 00:29:27.120 align:start position:0%
mistake overall
 

00:29:27.120 --> 00:29:29.269 align:start position:0%
mistake overall
polymorphism<00:29:28.000><c> simply</c><00:29:28.399><c> allows</c><00:29:28.799><c> methods</c><00:29:29.120><c> to</c>

00:29:29.269 --> 00:29:29.279 align:start position:0%
polymorphism simply allows methods to
 

00:29:29.279 --> 00:29:31.590 align:start position:0%
polymorphism simply allows methods to
take<00:29:29.520><c> on</c><00:29:29.679><c> many</c><00:29:30.000><c> different</c><00:29:30.399><c> forms</c>

00:29:31.590 --> 00:29:31.600 align:start position:0%
take on many different forms
 

00:29:31.600 --> 00:29:34.149 align:start position:0%
take on many different forms
it<00:29:31.760><c> can</c><00:29:31.919><c> be</c><00:29:32.080><c> very</c><00:29:32.480><c> useful</c><00:29:33.279><c> in</c><00:29:33.440><c> that</c><00:29:33.679><c> it</c><00:29:33.840><c> allows</c>

00:29:34.149 --> 00:29:34.159 align:start position:0%
it can be very useful in that it allows
 

00:29:34.159 --> 00:29:36.710 align:start position:0%
it can be very useful in that it allows
methods<00:29:34.640><c> of</c><00:29:34.799><c> the</c><00:29:34.880><c> same</c><00:29:35.200><c> name</c><00:29:35.840><c> to</c><00:29:36.080><c> exist</c><00:29:36.480><c> both</c>

00:29:36.710 --> 00:29:36.720 align:start position:0%
methods of the same name to exist both
 

00:29:36.720 --> 00:29:38.310 align:start position:0%
methods of the same name to exist both
in<00:29:36.880><c> the</c><00:29:36.960><c> same</c><00:29:37.279><c> class</c>

00:29:38.310 --> 00:29:38.320 align:start position:0%
in the same class
 

00:29:38.320 --> 00:29:40.549 align:start position:0%
in the same class
and<00:29:38.559><c> in</c><00:29:38.720><c> different</c><00:29:39.039><c> classes</c>

00:29:40.549 --> 00:29:40.559 align:start position:0%
and in different classes
 

00:29:40.559 --> 00:29:42.710 align:start position:0%
and in different classes
however<00:29:40.960><c> you</c><00:29:41.120><c> must</c><00:29:41.360><c> be</c><00:29:41.600><c> careful</c><00:29:42.000><c> to</c><00:29:42.240><c> ensure</c>

00:29:42.710 --> 00:29:42.720 align:start position:0%
however you must be careful to ensure
 

00:29:42.720 --> 00:29:44.710 align:start position:0%
however you must be careful to ensure
that<00:29:42.880><c> you</c><00:29:43.039><c> are</c><00:29:43.200><c> calling</c><00:29:43.600><c> the</c><00:29:43.760><c> correct</c><00:29:44.240><c> form</c><00:29:44.559><c> of</c>

00:29:44.710 --> 00:29:44.720 align:start position:0%
that you are calling the correct form of
 

00:29:44.720 --> 00:29:46.310 align:start position:0%
that you are calling the correct form of
the<00:29:44.799><c> method</c><00:29:45.200><c> that</c><00:29:45.360><c> you</c><00:29:45.520><c> want</c>

00:29:46.310 --> 00:29:46.320 align:start position:0%
the method that you want
 

00:29:46.320 --> 00:29:50.470 align:start position:0%
the method that you want
so<00:29:46.480><c> your</c><00:29:46.720><c> program</c><00:29:47.200><c> can</c><00:29:47.360><c> function</c><00:29:47.760><c> as</c><00:29:48.000><c> intended</c>

00:29:50.470 --> 00:29:50.480 align:start position:0%
so your program can function as intended
 

00:29:50.480 --> 00:29:52.789 align:start position:0%
so your program can function as intended
that<00:29:50.720><c> does</c><00:29:50.960><c> it</c><00:29:51.039><c> for</c><00:29:51.200><c> polymorphism</c>

00:29:52.789 --> 00:29:52.799 align:start position:0%
that does it for polymorphism
 

00:29:52.799 --> 00:29:54.950 align:start position:0%
that does it for polymorphism
and<00:29:52.960><c> with</c><00:29:53.120><c> the</c><00:29:53.279><c> end</c><00:29:53.440><c> of</c><00:29:53.600><c> polymorphism</c><00:29:54.799><c> the</c>

00:29:54.950 --> 00:29:54.960 align:start position:0%
and with the end of polymorphism the
 

00:29:54.960 --> 00:29:57.110 align:start position:0%
and with the end of polymorphism the
final<00:29:55.360><c> of</c><00:29:55.440><c> the</c><00:29:55.600><c> four</c><00:29:55.840><c> main</c><00:29:56.080><c> principles</c>

00:29:57.110 --> 00:29:57.120 align:start position:0%
final of the four main principles
 

00:29:57.120 --> 00:29:58.950 align:start position:0%
final of the four main principles
comes<00:29:57.440><c> the</c><00:29:57.600><c> end</c><00:29:57.760><c> of</c><00:29:57.840><c> this</c><00:29:58.080><c> video</c><00:29:58.640><c> on</c><00:29:58.799><c> an</c>

00:29:58.950 --> 00:29:58.960 align:start position:0%
comes the end of this video on an
 

00:29:58.960 --> 00:30:00.630 align:start position:0%
comes the end of this video on an
introduction<00:29:59.520><c> to</c><00:29:59.679><c> object</c><00:30:00.159><c> oriented</c>

00:30:00.630 --> 00:30:00.640 align:start position:0%
introduction to object oriented
 

00:30:00.640 --> 00:30:02.230 align:start position:0%
introduction to object oriented
programming

00:30:02.230 --> 00:30:02.240 align:start position:0%
programming
 

00:30:02.240 --> 00:30:04.710 align:start position:0%
programming
if<00:30:02.399><c> you</c><00:30:02.640><c> enjoyed</c><00:30:03.600><c> consider</c><00:30:04.159><c> liking</c><00:30:04.559><c> and</c>

00:30:04.710 --> 00:30:04.720 align:start position:0%
if you enjoyed consider liking and
 

00:30:04.720 --> 00:30:07.110 align:start position:0%
if you enjoyed consider liking and
subscribing<00:30:05.279><c> to</c><00:30:05.440><c> null</c><00:30:05.679><c> pointer</c><00:30:06.000><c> exception</c>

00:30:07.110 --> 00:30:07.120 align:start position:0%
subscribing to null pointer exception
 

00:30:07.120 --> 00:30:09.269 align:start position:0%
subscribing to null pointer exception
and<00:30:07.279><c> check</c><00:30:07.440><c> out</c><00:30:07.600><c> some</c><00:30:07.840><c> of</c><00:30:08.000><c> our</c><00:30:08.080><c> other</c><00:30:08.320><c> videos</c>

00:30:09.269 --> 00:30:09.279 align:start position:0%
and check out some of our other videos
 

00:30:09.279 --> 00:30:11.110 align:start position:0%
and check out some of our other videos
in<00:30:09.440><c> which</c><00:30:09.600><c> we</c><00:30:09.760><c> cover</c><00:30:10.080><c> a</c><00:30:10.240><c> variety</c><00:30:10.720><c> of</c><00:30:10.880><c> other</c>

00:30:11.110 --> 00:30:11.120 align:start position:0%
in which we cover a variety of other
 

00:30:11.120 --> 00:30:13.510 align:start position:0%
in which we cover a variety of other
topics<00:30:11.600><c> that</c><00:30:11.760><c> you</c><00:30:11.840><c> may</c><00:30:12.080><c> find</c><00:30:12.320><c> helpful</c>

00:30:13.510 --> 00:30:13.520 align:start position:0%
topics that you may find helpful
 

00:30:13.520 --> 00:30:16.919 align:start position:0%
topics that you may find helpful
thanks<00:30:13.760><c> for</c><00:30:13.919><c> watching</c>

